{"version":3,"sources":["assets/logo.png","components/Navbar/AccountWindow.jsx","components/Navbar/HomepageNavbar.jsx","components/About/AboutPage.jsx","components/Trends/Arrow.jsx","components/Trends/SingleTrendContainer.jsx","connectors/eventConnector.js","components/Trends/TrendsContainer.jsx","components/Trends/Trend.jsx","connectors/usersConnector.js","components/Login/LoginFormButtons.jsx","components/Login/LoginForm.jsx","components/Settings/ChangeSettings/SettingsPageButtons.jsx","components/Settings/ChangeSettings/SettingsPage.jsx","components/Settings/ChangePassword/ChangePassButtons.jsx","components/Settings/ChangePassword/ChangePasswordForm.jsx","components/Signup/SignupFormButtons.jsx","components/Signup/SignupForm.jsx","connectors/preferenceConnector.js","components/Preferences/Preference.jsx","components/Preferences/Preferences.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["AccountWindow","props","history","useHistory","isComputer","useMediaQuery","query","Fragment","ListGroup","id","style","width","right","top","position","display","visible","zIndex","Item","backgroundColor","color","localStorage","getItem","onClick","onAccountWindowChange","to","Button","variant","size","setItem","push","HomepageNavbar","useState","accountWindow","setAccountWindow","handleAccountWindowChange","changepage","pageName","Navbar","collapseOnSelect","expand","bg","marginBottom","Container","maxWidth","margin","Brand","href","src","logo","className","alt","marginLeft","Toggle","aria-controls","Collapse","Nav","Link","AboutPage","fluid","Row","Col","border","padding","boxShadow","borderRadius","md","xs","Card","Header","Body","Title","Text","Footer","Arrow","rest","compAngle","angle","icon","faLongArrowAltUp","transform","SingleTrendContainer","verticalCenterStyle","minHeight","alignItems","textAlign","noGutters","indx","Badge","type","base","quote","Math","abs","chance","axios","require","default","path","getEvents","amount","token","config","headers","Authorization","get","getEventByID","TrendsContainer","state","allTrends","borderStyle","handleAllTrends","a","eventConnector","res","data","setState","map","event","baseAssetName","quoteAssetName","probability","round","url","_id","firedAt","this","e","console","log","trend","index","Component","Trend","setProbability","setFiredAt","baseAsset","setBaseAsset","quoteAsset","setQuoteAsset","msToDateTime","ms","dateTime","Date","date","getDate","getMonth","getFullYear","time","getHours","getMinutes","getSeconds","probToProb","prob","toPrecision","useEffect","match","params","fetchData","Jumbotron","createNewUser","email","password","username","alertLimit","post","updateUser","put","loginUser","jwt","changeUserPassword","oldPassword","newPassword","patch","getUser","LoginFormButtons","styleMargin","active","error","LoginForm","setEmail","setPassword","setError","handleLogin","preventDefault","usersConnector","user","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","target","value","SettingsPageButtons","refresh","SettingsPage","setUsername","setAlertLimit","showHover","setShowHover","emailRef","useRef","usernameRef","alertRef","handleUpdateUser","parseInt","message","getAndSetUser","useCallback","current","ref","Overlay","show","placement","Tooltip","min","onMouseOver","onMouseOut","ChangePassButtons","backToSettings","ChangePasswordForm","setOldPassword","newPass1","setNewPass1","newPass2","setNewPass2","handlePasswordChange","setTimeout","Error","length","chageToSettings","includes","SignupFormButtons","SignupForm","handleSignup","setPreference","deletePreference","PreferenceDto","delete","getPreferences","Preference","preference","edit","originalValues","calculateProbabilities","probs","i","handleEditPreference","idx","tempEditing","onEditChange","onError","PreferencesConnector","parseFloat","handlePreferenceChanges","tempUserPreferences","componentDidMount","getDefaultValue","Object","assign","editing","onRemovePreference","defaultValue","disabled","as","baseCoins","coin","quoteCoins","n","num","Preferences","userPreferences","handleErrorChange","newError","handleNewUserPreferences","userPrefences","handleRemovePreference","refreshData","handleEditingChange","saveMode","temp","preferences","handleSaveChanges","ButtonToolbar","Home","App","app","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0c8dbe4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ce52a0ab.png\";","import React from \"react\";\nimport { ListGroup, Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\n\nexport default function AccountWindow(props) {\n  const history = useHistory();\n  const isComputer = useMediaQuery({ query: \"(min-device-width: 1224px)\" });\n\n  return (\n    <React.Fragment>\n      <ListGroup\n        id=\"AccountWindow\"\n        style={\n          isComputer\n            ? {\n                width: \"250%\",\n                right: \"-39px\",\n                top: \"52px\",\n                position: \"absolute\",\n                display: props.visible ? \"block\" : \"none\",\n                zIndex: \"1\",\n              }\n            : {\n                width: \"100%\",\n                top: \"52px\",\n                position: \"absolute\",\n                display: props.visible ? \"block\" : \"none\",\n                zIndex: \"1\",\n              }\n        }\n      >\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          Hi{\" \"}\n          {localStorage.getItem(\"username\")\n            ? localStorage.getItem(\"username\")\n            : \"Guest\"}\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Link\n            onClick={props.onAccountWindowChange}\n            to=\"/coin-trend-notifier-website/preferences\"\n          >\n            My Preferences\n          </Link>\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Link\n            onClick={props.onAccountWindowChange}\n            to=\"/coin-trend-notifier-website/settings\"\n          >\n            Account Settings\n          </Link>\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Button\n            variant=\"outline-danger\"\n            size=\"sm\"\n            style={{ color: \"rgba(255,255,255,.5)\" }}\n            onClick={() => {\n              localStorage.setItem(\"jwt\", \"\");\n              props.onAccountWindowChange();\n              history.push(\"/coin-trend-notifier-website/home\");\n            }}\n          >\n            Logout\n          </Button>\n        </ListGroup.Item>\n      </ListGroup>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport logo from \"../../assets/logo.png\";\nimport { useHistory } from \"react-router-dom\";\nimport AccountWindow from \"./AccountWindow\";\n\nexport default function HomepageNavbar(props) {\n  const [accountWindow, setAccountWindow] = useState(false);\n\n  const handleAccountWindowChange = () => {\n    setAccountWindow(!accountWindow);\n  };\n\n  const history = useHistory();\n\n  const changepage = (pageName) => {\n    history.push(`/coin-trend-notifier-website/${pageName}`);\n  };\n\n  return (\n    <React.Fragment>\n      <Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        bg=\"dark\"\n        variant=\"dark\"\n        style={{ marginBottom: \"30px\", position: \"relative\" }}\n      >\n        <Container style={{ maxWidth: \"1020px\", margin: \"auto\" }}>\n          <Navbar.Brand href=\"/coin-trend-notifier-website\">\n            <img\n              src={logo}\n              width=\"90px\"\n              className=\"d-inline-block align-top\"\n              alt=\"logo\"\n              style={{ marginLeft: \"15px\" }}\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link\n                onClick={() => {\n                  if (accountWindow) handleAccountWindowChange();\n                  changepage(\"\");\n                }}\n              >\n                Home\n              </Nav.Link>\n              <Nav.Link\n                onClick={() => {\n                  if (accountWindow) handleAccountWindowChange();\n                  changepage(\"about\");\n                }}\n              >\n                About\n              </Nav.Link>\n            </Nav>\n            <Nav\n              className=\"mr-sm-2\"\n              variant=\"dark\"\n              style={{ position: \"relative\" }}\n            >\n              <Nav.Link\n                style={{ color: \"rgba(255,255,255,.5)\" }}\n                onClick={() => handleAccountWindowChange()}\n              >\n                Account\n              </Nav.Link>\n              <AccountWindow\n                visible={accountWindow}\n                onAccountWindowChange={handleAccountWindowChange}\n              />\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\n\nexport default function AboutPage(props) {\n  return (\n    <React.Fragment>\n      <Container fluid className=\"HomepageBody\">\n        <Row>\n          <Col\n            style={{\n              border: \"1px solid gray\",\n              padding: \"50px\",\n              position: \"relative\",\n              top: \"10%\",\n              margin: \"auto\",\n              boxShadow: \"0px 0px 8px -2px\",\n              borderRadius: \"1%\",\n            }}\n            md={5}\n            xs={10}\n          >\n            <Card className=\"text-center\">\n              <Card.Header>About Us</Card.Header>\n              <Card.Body>\n                <Card.Title>Coin Trend Notifier</Card.Title>\n                <Card.Text>\n                  Our services are for crypto traders who seek good calculated\n                  information to help them trade the cryptcurrency market.\n                </Card.Text>\n                <Card.Title>How we do it</Card.Title>\n                <Card.Text>\n                  We are using an algorithm we developed along with NLP (Natural\n                  Language Processing) to analyze tweets from Twitter.\n                </Card.Text>\n                <Card.Text>\n                  We are all these information and connect in a way that gives\n                  the exact calculated weight to each parameter.\n                </Card.Text>\n                <Card.Title>How much does it cost</Card.Title>\n                <Card.Text>\n                  After many meetings in the hot air of Tel Aviv Israel we\n                  decided to give this service to you with an amazing price of\n                  1,000,000 nothing =).\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">\n                By Aviel Vaknin and Yarden Shoham\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Arrow = ({ color, ...rest }) => {\n  var angle = 45;\n  const compAngle = color === \"green\" ? angle : angle + 90;\n  return (\n    <FontAwesomeIcon\n      icon={faLongArrowAltUp}\n      size=\"2x\"\n      style={{\n        color: color,\n        transform: \"rotate(\" + compAngle + \"deg)\",\n        marginLeft:\n          (color === \"green\" ? angle * 2 : (90 - angle) * 2) / 90 + \"rem\",\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport { Container, Row, Col, Badge, Card, Button } from \"react-bootstrap\";\nimport Arrow from \"./Arrow\";\n\nexport default function SingleTrendContainer(props) {\n  const verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n  };\n  const verticalCenterMarginzStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"0px\",\n    color: \"lightslategrey\",\n  };\n  const borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\",\n  };\n\n  return (\n    <React.Fragment>\n      <Card>\n        <Container fluid=\"true\" style={borderStyle}>\n          <Row noGutters=\"true\">\n            <Col xs={1}>\n              <h3 style={verticalCenterMarginzStyle}>{props.indx}</h3>\n            </Col>\n            <Col>\n              <h3 style={verticalCenterStyle}>\n                <Badge variant={props.type === \"up\" ? \"success\" : \"danger\"}>\n                  {props.base + \"/\" + props.quote}\n                </Badge>\n              </h3>\n            </Col>\n            <Col\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <h3>\n                {props.type === \"up\" ? (\n                  <Arrow color=\"green\" />\n                ) : (\n                  <Arrow color=\"red\" />\n                )}\n              </h3>\n            </Col>\n            <Col>\n              <h3 style={verticalCenterStyle}>\n                <Badge variant={props.type === \"up\" ? \"success\" : \"danger\"}>\n                  {Math.abs(props.chance) + \"%\"}\n                </Badge>\n              </h3>\n            </Col>\n            <Col>\n              <Button\n                style={verticalCenterStyle}\n                variant=\"info\"\n                href={`/coin-trend-notifier-website/trends/${props.id}`}\n              >\n                Click for more\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </Card>\n    </React.Fragment>\n  );\n}\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\n// Get Events' History\nexport const getEvents = (amount) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return axios.get(path + `api/events?amount=${amount}`, config);\n};\n\n// Get all Event History By ID\nexport const getEventByID = (id) => {\n  return axios.get(path + `api/events/${id}`);\n};\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport SingleTrendContainer from \"./SingleTrendContainer\";\nimport * as eventConnector from \"../../connectors/eventConnector\";\n\nclass TrendsContainer extends Component {\n  state = {\n    allTrends: [],\n    amount: 15, // default\n  };\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"lightslategrey\",\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\",\n  };\n\n  handleAllTrends = async () => {\n    let { data: res } = await eventConnector.getEvents(this.state.amount);\n    //need to load the allTrends in the state from the res\n    this.setState({\n      allTrends: res.map((event) => {\n        return {\n          base: event.baseAssetName,\n          quote: event.quoteAssetName,\n          type: event.probability > 0 ? \"up\" : \"down\",\n          chance: Math.round(event.probability * 100),\n          url: \"/coin-trend-notifier-website/trends/\" + event._id,\n          firedAt: event.firedAt,\n          id: event._id,\n        };\n      }),\n    });\n  };\n\n  componentDidMount() {\n    try {\n      this.handleAllTrends();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h4 style={this.verticalCenterStyle}>#</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Asset</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Expected to</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Probability</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>More info</h4>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n        {this.state.allTrends.map((trend, index) => {\n          return (\n            <SingleTrendContainer\n              indx={index + 1}\n              key={\"STD\" + index}\n              base={trend.base}\n              quote={trend.quote}\n              type={trend.type}\n              chance={trend.chance}\n              url={trend.url}\n              firedAt={trend.firedAt}\n              id={trend.id}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TrendsContainer;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Badge, Jumbotron } from \"react-bootstrap\";\nimport * as eventConnector from \"../../connectors/eventConnector\";\n\nexport default function Trend(props) {\n  const [probability, setProbability] = useState(\"\");\n  const [firedAt, setFiredAt] = useState(\"\");\n  const [baseAsset, setBaseAsset] = useState(\"\");\n  const [quoteAsset, setQuoteAsset] = useState(\"\");\n\n  const msToDateTime = (ms) => {\n    let dateTime = new Date(ms);\n    return {\n      date: `${dateTime.getDate()}/${dateTime.getMonth()}/${dateTime.getFullYear()}`,\n      time: `${dateTime.getHours()}:${dateTime.getMinutes()}:${dateTime.getSeconds()}`,\n    };\n  };\n\n  const probToProb = (prob) => {\n    return {\n      type: prob < 0 ? 0 : 1,\n      probability: (Math.abs(prob) * 100).toPrecision(4) + \"%\",\n    };\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const { data: res } = await eventConnector.getEventByID(\n        props.match.params.id\n      );\n      setProbability(res.probability);\n      setFiredAt(res.firedAt);\n      setBaseAsset(res.baseAssetName);\n      setQuoteAsset(res.quoteAssetName);\n    }\n    fetchData();\n  }, [props]);\n\n  return (\n    <React.Fragment>\n      <Container\n        fluid\n        className=\"HomepageBody\"\n        style={{\n          border: \"1px solid gray\",\n          padding: \"50px\",\n          position: \"relative\",\n          top: \"10%\",\n          margin: \"auto\",\n          boxShadow: \"0px 0px 8px -2px\",\n          borderRadius: \"1%\",\n          width: \"80%\",\n        }}\n      >\n        <Row style={{ textAlign: \"center\" }}>\n          <Col>\n            <Jumbotron style={{ padding: \"5%\" }}>\n              <h1>\n                ID: <Badge variant=\"secondary\">{props.match.params.id}</Badge>\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h1>Asset:</h1>\n          </Col>\n          <Col>\n            <h1>\n              <Badge variant=\"secondary\">{baseAsset + \"/\" + quoteAsset}</Badge>\n            </h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h1>Probability:</h1>\n          </Col>\n          <Col>\n            <h1>\n              <Badge\n                variant={\n                  probToProb(probability).type === 0 ? \"danger\" : \"success\"\n                }\n              >\n                {probToProb(probability).probability}\n              </Badge>\n            </h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h1>Date:</h1>\n          </Col>\n          <Col>\n            <h1>\n              <Badge variant=\"secondary\">{msToDateTime(firedAt).date}</Badge>\n            </h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h1>Time:</h1>\n          </Col>\n          <Col>\n            <h1>\n              <Badge variant=\"secondary\">{msToDateTime(firedAt).time}</Badge>\n            </h1>\n          </Col>\n        </Row>\n        {/* maybe add here the value when fired and the current value */}\n      </Container>\n    </React.Fragment>\n  );\n}\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\nexport const createNewUser = async (\n  email,\n  password,\n  username,\n  // phoneNumber,\n  alertLimit\n) => {\n  return (\n    await axios.post(path + \"api/users\", {\n      email,\n      password,\n      username,\n      // phoneNumber,\n      alertLimit,\n    })\n  ).data;\n};\n\n// Update a user\nexport const updateUser = async (\n  email,\n  username,\n  // phoneNumber,\n  alertLimit\n) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n\n  return await axios.put(\n    path + \"api/users\",\n    {\n      email,\n      username,\n      // phoneNumber,\n      alertLimit,\n    },\n    config\n  ).data;\n};\n\n// Login a user\nexport const loginUser = async (email, password) => {\n  const res = await axios.post(path + \"api/users/login\", { email, password });\n  localStorage.setItem(\"jwt\", res.data.jwt);\n};\n\n// Change user password\nexport const changeUserPassword = async (oldPassword, newPassword) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.patch(\n    path + \"api/users/password\",\n    {\n      oldPassword,\n      newPassword,\n    },\n    config\n  );\n};\n\n// Get user details\nexport const getUser = async () => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.get(path + \"api/users\", config);\n};\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function LoginFormButtons(props) {\n  const styleMargin = \"m-3\";\n  const history = useHistory();\n\n  const changePageToSignup = () => {\n    history.push(\"/coin-trend-notifier-website/signup\");\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Login\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={5}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={changePageToSignup} variant=\"outline-primary\">\n            Click here for Signup\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as usersConnector from \"../../connectors/usersConnector\";\nimport LoginFormButtons from \"./LoginFormButtons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nexport default function LoginForm(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleErrorChange = () => {\n    setError(\"User does not exist or Password does not match. Try again.\");\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      // login\n      await usersConnector.loginUser(email, password);\n      // get user info\n      let user = (await usersConnector.getUser()).data;\n      // console.log(user);\n      localStorage.setItem(\"username\", user.username);\n      history.push(\"/coin-trend-notifier-website/trends\");\n      // succesfully logged in\n    } catch (e) {\n      // error handling\n      handleErrorChange();\n    }\n  };\n\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem(\"jwt\")) {\n      history.push(\"/coin-trend-notifier-website/trends\");\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleLogin}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={handleEmailChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </Form.Group>\n        <LoginFormButtons error={error} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nexport default function SettingsPageButtons(props) {\n  const styleMargin = \"m-3\";\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Update\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={5}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={props.refresh} variant=\"outline-primary\">\n            Reset\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Form, Button, Tooltip, Overlay } from \"react-bootstrap\";\nimport * as usersConnector from \"../../../connectors/usersConnector\";\nimport SettingsPageButtons from \"./SettingsPageButtons\";\nimport { useHistory } from \"react-router-dom\";\n// import logo from \"./refresh.png\";\n\nexport default function SettingsPage(props) {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [alertLimit, setAlertLimit] = useState(\"0\");\n  const [error, setError] = useState(\"\");\n  const [showHover, setShowHover] = useState(false);\n  const emailRef = useRef(null);\n  const usernameRef = useRef(null);\n  const alertRef = useRef(null);\n  const history = useHistory();\n\n  const handleUpdateUser = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      await usersConnector.updateUser(\n        email,\n        username,\n        // phoneNumber,\n        parseInt(alertLimit) * 60\n      );\n      // update the page with new data\n    } catch (e) {\n      //error handling\n      setError(\"Error\");\n      console.log(e.message);\n    }\n  };\n\n  const handleEmailChange = (e) => {\n    if (e.target.value === \"\") getAndSetUser();\n    setEmail(e.target.value);\n  };\n\n  const handleUsernameChange = (e) => {\n    if (e.target.value === \"\") getAndSetUser();\n    setUsername(e.target.value);\n  };\n\n  // const handlePhoneNumberChange = (e) => {\n  // if (e.target.value === \"\") getAndSetUser();\n  //   setPhoneNumber(e.target.value);\n  // };\n\n  const handleAlertLimitChange = (e) => {\n    if (e.target.value === \"\") getAndSetUser();\n    setAlertLimit(e.target.value);\n  };\n\n  const clearContent = () => {\n    emailRef.current.value = \"\";\n    usernameRef.current.value = \"\";\n    alertRef.current.value = 0;\n  };\n\n  const getAndSetUser = useCallback(async () => {\n    clearContent();\n    let user = (await usersConnector.getUser()).data;\n    setEmail(user.email);\n    setUsername(user.username);\n    setAlertLimit(user.alertLimit / 60);\n  }, []);\n\n  const changeToPasswordChange = () => {\n    history.push(\"/coin-trend-notifier-website/settings/pass\");\n  };\n\n  useEffect(() => {\n    getAndSetUser();\n  }, [getAndSetUser]);\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleUpdateUser}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            ref={emailRef}\n            placeholder={email}\n            onChange={handleEmailChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            ref={usernameRef}\n            placeholder={username}\n            onChange={handleUsernameChange}\n          />\n        </Form.Group>\n        {/* <Form.Group controlId=\"formPhoneNumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            pattern={\"\"}\n            placeholder=\"Such as: +972501234567\"\n            onChange={handlePhoneNumberChange}\n          />\n        </Form.Group> */}\n        <Form.Group controlId=\"formAlertLimitNumber\">\n          <Overlay target={alertRef.current} show={showHover} placement=\"right\">\n            {(props) => (\n              <Tooltip id=\"overlay-alert\" {...props}>\n                Max amount of min hours to be notified\n              </Tooltip>\n            )}\n          </Overlay>\n          <Form.Label>Alert Limit</Form.Label>\n          <Form.Control\n            type=\"number\"\n            ref={alertRef}\n            min={0}\n            value={alertLimit}\n            onChange={handleAlertLimitChange}\n            onMouseOver={() => setShowHover(!showHover)}\n            onMouseOut={() => setShowHover(!showHover)}\n          />\n        </Form.Group>\n        <div style={{ textAlign: \"center\" }} className={\"m-3\"}>\n          <Button onClick={changeToPasswordChange} variant=\"outline-danger\">\n            Change Password\n          </Button>\n        </div>\n        <SettingsPageButtons error={error} refresh={getAndSetUser} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nexport default function ChangePassButtons(props) {\n  const styleMargin = \"m-3\";\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Change Password\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={6}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={props.backToSettings} variant=\"outline-primary\">\n            Back To Settings\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport ChangePassButtons from \"./ChangePassButtons\";\nimport { useHistory } from \"react-router-dom\";\nimport * as usersConnector from \"../../../connectors/usersConnector\";\n\nexport default function ChangePasswordForm(props) {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPass1, setNewPass1] = useState(\"\");\n  const [newPass2, setNewPass2] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  const handlePasswordChange = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      if (newPass1 !== newPass2) {\n        setTimeout(() => {\n          setError(\"\");\n        }, 3000);\n        throw Error(\"New Passwords Won't Match\");\n      }\n      if (newPass2.length < 6) {\n        setTimeout(() => {\n          setError(\"\");\n        }, 3000);\n        throw Error(\"Password must be over 6 characters\");\n      }\n      await usersConnector.changeUserPassword(oldPassword, newPass1);\n      chageToSettings();\n      // update the page with new data\n    } catch (e) {\n      //error handling\n      if (e.message.includes(\"422\")) {\n        setError(\"This is not your old password\");\n        return;\n      }\n      setError(e.message);\n    }\n  };\n\n  const handleOldPasswordChange = (e) => {\n    setOldPassword(e.target.value);\n  };\n\n  const handleNewPass1Change = (e) => {\n    setNewPass1(e.target.value);\n  };\n\n  const handleNewPass2Change = (e) => {\n    setNewPass2(e.target.value);\n  };\n\n  const chageToSettings = () => {\n    history.push(\"/coin-trend-notifier-website/settings\");\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handlePasswordChange}>\n        <Form.Group controlId=\"formOldPassword\">\n          <Form.Label>Old Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Old Password\"\n            onChange={handleOldPasswordChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formNewPass1\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter New Password\"\n            onChange={handleNewPass1Change}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formNewPass2\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter New Password Again\"\n            onChange={handleNewPass2Change}\n          />\n        </Form.Group>\n        <ChangePassButtons error={error} backToSettings={chageToSettings} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupFormButtons(props) {\n  const history = useHistory();\n  const styleMargin = \"m-3\";\n  let changeToLogin = () => {\n    history.push(\"/coin-trend-notifier-website/login\");\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Signup\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={5}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={changeToLogin} variant=\"outline-primary\">\n            Cancel\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as usersConnector from \"../../connectors/usersConnector\";\nimport SignupFormButtons from \"./SignupFormButtons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupForm(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [alertLimit, setAlertLimit] = useState(\"0\");\n  const [error, setError] = useState(\"\");\n\n  const history = useHistory();\n  const changeToLogin = () => {\n    history.push(\"/coin-trend-notifier-website/login\");\n  };\n  const handleSignup = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      await usersConnector.createNewUser(\n        email,\n        password,\n        username,\n        // phoneNumber,\n        parseInt(alertLimit) * 60\n      );\n      changeToLogin();\n    } catch (e) {\n      //error handling\n      setError(\"Error\");\n      console.log(e.message);\n    }\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  // const handlePhoneNumberChange = (e) => {\n  //   setPhoneNumber(e.target.value);\n  // };\n\n  const handleAlertLimitChange = (e) => {\n    setAlertLimit(e.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleSignup}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={handleEmailChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={handleUsernameChange}\n          />\n        </Form.Group>\n        {/* <Form.Group controlId=\"formPhoneNumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            pattern={\"\"}\n            placeholder=\"Such as: +972501234567\"\n            onChange={handlePhoneNumberChange}\n          />\n        </Form.Group> */}\n        <Form.Group controlId=\"formAlertLimitNumber\">\n          <Form.Label>Alert Limit</Form.Label>\n          <Form.Control\n            type=\"number\"\n            min={0}\n            placeholder=\"Max amount of min hours to be notified\"\n            onChange={handleAlertLimitChange}\n          />\n        </Form.Group>\n        <SignupFormButtons error={error} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/api/preferences\";\n\n// Set User Preference\nexport const setPreference = async (\n  probability,\n  baseAssetName,\n  quoteAssetName\n) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.post(\n    path,\n    {\n      probability,\n      baseAssetName,\n      quoteAssetName\n    },\n    config\n  );\n};\n\n// Delete User Preference\nexport const deletePreference = async PreferenceDto => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.delete(\n    path +\n      \"?baseAssetName=\" +\n      PreferenceDto.baseAssetName +\n      \"&quoteAssetName=\" +\n      PreferenceDto.quoteAssetName,\n    config\n  );\n};\n\n// Get User Preference\nexport const getPreferences = async () => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.get(path, config);\n};\n","import React, { Component } from \"react\";\nimport { Col, Card, Form, Button } from \"react-bootstrap\";\nimport * as PreferencesConnector from \"../../connectors/preferenceConnector\";\n\nclass Preference extends Component {\n  state = {\n    preference: {},\n    edit: true,\n    originalValues: {},\n  };\n\n  constructor(props) {\n    super(props);\n    const originalValues = Object.assign({}, this.props.preference);\n    const preference = Object.assign({}, this.props.preference);\n    const edit = this.props.editing;\n    this.state = {\n      edit,\n      preference,\n      originalValues,\n    };\n  }\n\n  calculateProbabilities = () => {\n    let probs = [];\n    for (let i = 10; i <= 90; i += 10) {\n      probs.push(i);\n    }\n    return probs;\n  };\n\n  handleEditPreference = async (idx) => {\n    let tempEditing = !this.state.edit;\n\n    if (!tempEditing) {\n      // if in Save mode\n      // check that only valid inputs are in\n      if (\n        this.state.preference.baseAssetName === \"Base Coin\" ||\n        this.state.preference.quoteAssetName === \"Quote Coin\" ||\n        this.state.preference.probability === \"Probability\"\n      ) {\n        tempEditing = !tempEditing; //if invalids then change to true\n        //make some error that says that there are invalid inputs\n        this.props.onEditChange(idx, tempEditing);\n        this.props.onError(\"Error - found default values on new preference\");\n        return;\n      }\n      if (!tempEditing) {\n        if (\n          this.state.originalValues.baseAssetName === \"Base Coin\" &&\n          this.state.originalValues.quoteAssetName === \"Quote Coin\" &&\n          this.state.originalValues.probability === \"Probability\"\n        ) {\n          // if its a new preference then save it\n          await PreferencesConnector.setPreference(\n            parseFloat(this.state.preference.probability) / 100,\n            this.state.preference.baseAssetName,\n            this.state.preference.quoteAssetName\n          );\n        } else {\n          // editing an already-exist preference\n          if (\n            this.state.preference.baseAssetName !==\n              this.state.originalValues.baseAssetName ||\n            this.state.preference.quoteAssetName !==\n              this.state.originalValues.quoteAssetName\n          ) {\n            // if different from original\n            // delete the original preference\n            await PreferencesConnector.deletePreference({\n              baseAssetName: this.state.originalValues.baseAssetName,\n              quoteAssetName: this.state.originalValues.quoteAssetName,\n            });\n\n            // add the edited preference to the db\n            await PreferencesConnector.setPreference(\n              parseFloat(this.state.preference.probability) / 100,\n              this.state.preference.baseAssetName,\n              this.state.preference.quoteAssetName\n            );\n          } else {\n            // same as original\n            if (\n              this.state.preference.probability !==\n              this.state.originalValues.probability\n            ) {\n              // if probability changed then save changes in db\n              await PreferencesConnector.setPreference(\n                parseFloat(this.state.preference.probability) / 100,\n                this.state.preference.baseAssetName,\n                this.state.preference.quoteAssetName\n              );\n            }\n          }\n        }\n\n        // refresh the data\n        this.props.refresh();\n        console.log(\"preference saved\");\n      }\n    }\n    this.props.onEditChange(idx, tempEditing);\n    this.setState({ edit: tempEditing });\n  };\n\n  handlePreferenceChanges = (type, idx, event) => {\n    let tempUserPreferences = this.state.preference;\n    if (type === \"base\") {\n      tempUserPreferences.baseAssetName = event.target.value;\n    } else if (type === \"quote\") {\n      tempUserPreferences.quoteAssetName = event.target.value;\n    } else if (type === \"prob\") {\n      tempUserPreferences.probability = event.target.value;\n    }\n    this.setState({ preference: tempUserPreferences });\n  };\n\n  componentDidMount = () => {};\n\n  getDefaultValue = () => {\n    return this.props.preference.probability === \"Probability\"\n      ? \"Probability\"\n      : this.props.preference.probability * 100;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Form.Row>\n            <Col xs={1}>\n              <Button\n                variant=\"outline-danger\"\n                onClick={() => this.props.onRemovePreference(this.props.index)}\n              >\n                x\n              </Button>\n            </Col>\n            <Col xs={1.2}>\n              <Button\n                id={\"preference_\" + this.props.index}\n                variant=\"outline-info\"\n                onClick={() => this.handleEditPreference(this.props.index)}\n              >\n                {this.state.edit === false ? \"Edit\" : \"Save\"}\n              </Button>\n            </Col>\n            <Col>\n              <Form.Control\n                defaultValue={this.props.preference.baseAssetName}\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"base\", this.props.index, e)\n                }\n              >\n                <option>Base Coin</option>\n                {this.props.baseCoins.map((coin) => {\n                  return (\n                    <option key={\"option_\" + coin} value={coin}>\n                      {coin}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} xs={1}>\n              {\"/\"}\n            </Col>\n            <Col>\n              <Form.Control\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"quote\", this.props.index, e)\n                }\n                defaultValue={this.props.preference.quoteAssetName}\n              >\n                <option>Quote Coin</option>\n                {this.props.quoteCoins.map((coin) => {\n                  return (\n                    <option key={\"option_\" + coin} value={coin}>\n                      {coin}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n            <Col>\n              <Form.Control\n                defaultValue={this.getDefaultValue()}\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"prob\", this.props.index, e)\n                }\n              >\n                <option key={\"option_new\"} value={\"Probability\"}>\n                  Probability\n                </option>\n                {this.calculateProbabilities().map((n) => {\n                  let num = parseInt(n);\n                  return (\n                    <option key={\"option_\" + num} value={num}>\n                      {num + \"%\"}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n          </Form.Row>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preference;\n","import React, { Component } from \"react\";\nimport * as PreferencesConnector from \"../../connectors/preferenceConnector\";\nimport { Form, Button, ButtonToolbar } from \"react-bootstrap\";\nimport Preference from \"./Preference\";\n\nclass Preferences extends Component {\n  state = {\n    userPreferences: [],\n    editing: [],\n    baseCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\n    quoteCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\n    error: \"\",\n  };\n\n  handleErrorChange = (newError) => {\n    this.setState({ error: newError });\n    setTimeout(() => {\n      this.setState({ error: \"\" });\n    }, 5000);\n  };\n\n  handleNewUserPreferences = () => {\n    this.setState({\n      userPrefences: this.state.userPreferences.push({\n        probability: \"Probability\",\n        baseAssetName: \"Base Coin\",\n        quoteAssetName: \"Quote Coin\",\n      }),\n      editing: [...this.state.editing, true],\n    });\n  };\n\n  handleRemovePreference = async (idx) => {\n    if (\n      this.state.userPreferences[idx].baseAssetName === \"Base Coin\" ||\n      this.state.userPreferences[idx].quoteAssetName === \"Quote Coin\" ||\n      this.state.userPreferences[idx].probability === \"Probability\"\n    )\n      this.refreshData();\n    let tempUserPreferences = this.state.userPreferences;\n    await PreferencesConnector.deletePreference({\n      baseAssetName: tempUserPreferences[idx].baseAssetName,\n      quoteAssetName: tempUserPreferences[idx].quoteAssetName,\n    });\n\n    this.refreshData();\n  };\n\n  refreshData = async () => {\n    let userPreferences = await PreferencesConnector.getPreferences();\n    let editing = [];\n    for (let i = 0; i < userPreferences.data.length; i++) {\n      editing.push(false);\n    }\n    this.setState({ userPreferences: userPreferences.data, editing });\n  };\n\n  handleEditingChange = (idx, saveMode) => {\n    let temp = this.state.editing;\n    temp[idx] = saveMode;\n    this.setState({ editing: temp });\n  };\n\n  componentDidMount = async () => {\n    await this.refreshData();\n  };\n\n  render() {\n    let preferences;\n    try {\n      preferences = this.state.userPreferences.map((preference, idx) => {\n        return (\n          <Preference\n            key={\"preference_\" + idx}\n            index={idx}\n            preference={preference}\n            editing={this.state.editing[idx]}\n            onRemovePreference={this.handleRemovePreference}\n            baseCoins={this.state.baseCoins}\n            quoteCoins={this.state.quoteCoins}\n            refresh={this.refreshData}\n            onEditChange={this.handleEditingChange}\n            onError={this.handleErrorChange}\n          />\n        );\n      });\n    } catch (error) {\n      preferences = null;\n    }\n\n    return (\n      <React.Fragment>\n        <h1>\n          Hi,{\" \"}\n          {localStorage.getItem(\"username\")\n            ? localStorage.getItem(\"username\")\n            : \"Guest\"}\n        </h1>\n        <span>In this page you can edit your preferred coins.</span>\n        <br />\n        <span>\n          You will get notifications on the crypto coins that are shown here.\n        </span>\n        <br />\n        <br />\n        <Form onSubmit={this.handleSaveChanges}>\n          {preferences}\n          <br />\n          <div id=\"error-container\" style={{ textAlign: \"center\" }}>\n            <span>{this.state.error}</span>\n          </div>\n          <ButtonToolbar className=\"justify-content-center\">\n            <Button\n              variant=\"outline-primary\"\n              onClick={this.handleNewUserPreferences}\n            >\n              Add New Preference\n            </Button>\n          </ButtonToolbar>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preferences;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home(props) {\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem(\"jwt\")) {\n      history.push(\"/coin-trend-notifier-website/trends\");\n    } else {\n      history.push(\"/coin-trend-notifier-website/login\");\n    }\n  });\n\n  return <React.Fragment />;\n}\n","import React from \"react\";\nimport HomepageNavbar from \"./components/Navbar/HomepageNavbar\";\nimport AboutPage from \"./components/About/AboutPage\";\nimport TrendsContainer from \"./components/Trends/TrendsContainer\";\nimport Trend from \"./components/Trends/Trend\";\nimport LoginForm from \"./components/Login/LoginForm\";\nimport SettingsPage from \"./components/Settings/ChangeSettings/SettingsPage\";\nimport ChangePasswordForm from \"./components/Settings/ChangePassword/ChangePasswordForm\";\nimport SignupForm from \"./components/Signup/SignupForm\";\nimport Preferences from \"./components/Preferences/Preferences\";\nimport Home from \"./components/Home\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nexport default function App(props) {\n  const app = \"/coin-trend-notifier-website/\";\n\n  const whatDoDisplay = () => {\n    return (\n      <Router>\n        <div>\n          <HomepageNavbar />\n\n          <Switch>\n            <Route path={app + \"trends/:id\"} component={Trend}></Route>\n\n            <Route path={app + \"login\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <LoginForm />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path={app + \"trends\"}>\n              <div\n                style={{\n                  position: \"relative\",\n                  maxWidth: \"960px\",\n                  margin: \"auto\",\n                }}\n                className=\"HomepageBody\"\n              >\n                <TrendsContainer />\n              </div>\n            </Route>\n            <Route path={app + \"signup\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <SignupForm />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path={app + \"settings/pass\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <ChangePasswordForm />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n\n            <Route path={app + \"settings\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <SettingsPage />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path={app + \"preferences\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={8}\n                    xs={10}\n                  >\n                    <Preferences />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path={app + \"about\"}>\n              <AboutPage />\n            </Route>\n            <Route path={app + \"\"}>\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  };\n\n  return whatDoDisplay();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n/* istanbul ignore next */\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n/* istanbul ignore next */\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n/* istanbul ignore next */\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n/* istanbul ignore next */\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n/* istanbul ignore next */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nserviceWorker.unregister();\n"],"sourceRoot":""}