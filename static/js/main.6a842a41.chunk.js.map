{"version":3,"sources":["assets/logo.png","components/HomepageNavbar.jsx","components/Arrow.jsx","components/SingleTrendContainer.jsx","connectors/eventConnector.js","components/TrendsContainer.jsx","connectors/usersConnector.js","components/LoginForm.jsx","components/AccountWindow.jsx","components/SignupForm.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomepageNavbar","Fragment","Navbar","collapseOnSelect","expand","bg","variant","style","marginBottom","Container","maxWidth","margin","Brand","href","src","logo","width","className","alt","marginLeft","Toggle","aria-controls","Collapse","id","Nav","Link","Item","color","onClick","props","onAccountWindowChange","Component","Arrow","rest","compAngle","angle","icon","faLongArrowAltUp","size","transform","SingleTrendContainer","verticalCenterStyle","minHeight","display","alignItems","verticalCenterMarginzStyle","borderStyle","padding","textAlign","Card","fluid","this","Row","noGutters","Col","xs","indx","Badge","type","base","quote","chance","url","axios","require","default","path","getEvents","amount","token","localStorage","getItem","config","headers","Authorization","get","TrendsContainer","state","allTrends","handleAllTrends","a","eventConnector","res","console","log","e","map","trend","index","key","createNewUser","email","password","username","phoneNumber","alertLimit","post","data","loginUser","LoginForm","error","styleMargin","handleErrorChange","setState","handleEmailChange","target","value","handlePasswordChange","handleLogin","event","preventDefault","usersConnector","setItem","jwt","onPageToDisplayChange","message","changePageToSignup","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Button","active","position","md","AccountWindow","ListGroup","top","right","visible","backgroundColor","action","SignupForm","signup","handleSignup","parseInt","changeToLogin","handleUsernameChange","handlePhoneNumberChange","handleAlertLimitChange","App","loggedIn","accountWindow","pageToDisplay","handlePageToDisplay","pageName","handleLoggedInChange","handleAccountWindow","whatDoDisplay","border","boxShadow","borderRadius","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a842a41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6d974881.png\";","import React, { Component } from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport logo from \"../assets/logo.png\";\n\nclass HomepageNavbar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar\n          collapseOnSelect\n          expand=\"lg\"\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ marginBottom: \"30px\" }}\n        >\n          <Container style={{ maxWidth: \"1020px\", margin: \"auto\" }}>\n            <Navbar.Brand href=\"#home\">\n              <img\n                src={logo}\n                width=\"90px\"\n                className=\"d-inline-block align-top\"\n                alt=\"logo\"\n                style={{ marginLeft: \"15px\" }}\n              />\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#about\">About</Nav.Link>\n              </Nav>\n              <Nav className=\"mr-sm-2\" variant=\"dark\">\n                <Nav.Item\n                  style={{ color: \"rgba(255,255,255,.5)\" }}\n                  onClick={() => this.props.onAccountWindowChange()}\n                >\n                  Account\n                </Nav.Item>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default HomepageNavbar;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Arrow = ({ color, ...rest }) => {\n  var angle = 45;\n  const compAngle = color === \"green\" ? angle : angle + 90;\n  return (\n    <FontAwesomeIcon\n      icon={faLongArrowAltUp}\n      size=\"2x\"\n      style={{\n        color: color,\n        transform: \"rotate(\" + compAngle + \"deg)\",\n        marginLeft:\n          (color === \"green\" ? angle * 2 : (90 - angle) * 2) / 90 + \"rem\"\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport { Container, Row, Col, Badge, Card } from \"react-bootstrap\";\n// import BorderedBox from \"./BordredBox\";\nimport { Component } from \"react\";\nimport Arrow from \"./Arrow\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass SingleTrendContainer extends Component {\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\"\n  };\n  verticalCenterMarginzStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"0px\",\n    color: \"lightslategrey\"\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\"\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h3 style={this.verticalCenterMarginzStyle}>\n                  {this.props.indx}\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>\n                  <Badge\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\n                  >\n                    {this.props.base + \"/\" + this.props.quote}\n                  </Badge>\n                </h3>\n              </Col>\n              <Col\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}\n              >\n                <h3>\n                  {this.props.type === \"up\" ? (\n                    <Arrow color=\"green\" />\n                  ) : (\n                    <Arrow color=\"red\" />\n                  )}\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>\n                  <Badge\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\n                  >\n                    {this.props.chance + \"%\"}\n                  </Badge>\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>{this.props.url}</h3>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SingleTrendContainer;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\n// Get Events' History\nexport const getEvents = amount => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return axios.get(path + \"api/events\", config);\n};\n\n// Get all Events' History By ID\nexport const getEventsByID = () => {\n  let token = localStorage.getItem(\"jwt\");\n  return axios.get(path + `api/events/${token}`);\n};\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport SingleTrendContainer from \"./SingleTrendContainer\";\nimport * as eventConnector from \"../connectors/eventConnector\";\n\nclass TrendsContainer extends Component {\n  state = {\n    allTrends: [\n      { base: \"BTC\", quote: \"USDT\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"ETH\", quote: \"USDT\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"TRX\", quote: \"USDT\", type: \"down\", chance: 30, url: \"#href\" },\n      { base: \"ETH\", quote: \"BTC\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"TRX\", quote: \"BTC\", type: \"down\", chance: 30, url: \"#href\" }\n    ]\n  };\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"lightslategrey\"\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\"\n  };\n\n  handleAllTrends = async () => {\n    let res = await eventConnector.getEvents();\n    //need to load the allTrends in the state from the res\n    console.log(res);\n  };\n\n  componentDidMount() {\n    try {\n      this.handleAllTrends();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h4 style={this.verticalCenterStyle}>#</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Asset</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Expected to</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Possibilty</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>More info</h4>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n        {this.state.allTrends.map((trend, index) => {\n          return (\n            <SingleTrendContainer\n              indx={index + 1}\n              key={\"STD\" + index}\n              base={trend.base}\n              quote={trend.quote}\n              type={trend.type}\n              chance={trend.chance}\n              url={trend.url}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TrendsContainer;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\nexport const createNewUser = async (\n  email,\n  password,\n  username,\n  phoneNumber,\n  alertLimit\n) => {\n  return (\n    await axios.post(path + \"api/users\", {\n      email,\n      password,\n      username,\n      phoneNumber,\n      alertLimit\n    })\n  ).data;\n};\n\n// Update a user\nexport const updateUser = async (\n  email,\n  password,\n  username,\n  phoneNumber,\n  alertLimit\n) => {\n  return await axios.put(path + \"api/users\", {\n    email,\n    password,\n    username,\n    phoneNumber,\n    alertLimit\n  }).data;\n};\n\n// Login a user\nexport const loginUser = async (email, password) => {\n  const res = await axios.post(path + \"api/users/login\", { email, password });\n  return res.data;\n};\n\n// Change user password\nexport const changeUserPassword = async (oldPassword, newPassword) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.patch(path + \"api/users/password\", {\n    oldPassword,\n    newPassword,\n    config\n  });\n};\n","import React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport * as usersConnector from \"../connectors/usersConnector\";\n\nexport default class LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  styleMargin = \"m-3\";\n\n  handleErrorChange = () => {\n    this.setState({\n      error: \"User does not exist or Password does not match. Try again.\"\n    });\n  };\n\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  handleLogin = async event => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      // login\n      let res = await usersConnector.loginUser(\n        this.state.email,\n        this.state.password\n      );\n      // save token in localStorage\n      localStorage.setItem(\"jwt\", res.jwt);\n      console.log(\"token saved\");\n\n      // succesfully logged in;\n      this.props.onPageToDisplayChange(\"trendsContainer\");\n    } catch (e) {\n      // error handling\n      this.handleErrorChange();\n      console.log(e.message);\n    }\n  };\n\n  changePageToSignup = () => {\n    this.props.onPageToDisplayChange(\"signupForm\");\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Form onSubmit={this.handleLogin}>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={this.handleEmailChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handlePasswordChange}\n            />\n          </Form.Group>\n          {/*need to add functionality for next 3 buttons: */}\n          <Container>\n            <Row className=\"justify-content-md-center\">\n              <Col style={{ textAlign: \"center\" }} className={this.styleMargin}>\n                <Button\n                  variant=\"primary\"\n                  size=\"lg\"\n                  active\n                  type=\"submit\"\n                  style={{ position: \"relative\", margin: \"auto\" }}\n                >\n                  Login\n                </Button>\n              </Col>\n            </Row>\n            {this.state.error !== \"\" && (\n              <Row className=\"justify-content-md-center\">\n                <Col\n                  md={11}\n                  xs={10}\n                  style={{ textAlign: \"center\" }}\n                  className={this.styleMargin}\n                >\n                  {this.state.error}\n                </Col>\n              </Row>\n            )}\n            <Row className=\"justify-content-md-center\">\n              <Col\n                md={5}\n                xs={10}\n                style={{ textAlign: \"center\" }}\n                className={this.styleMargin}\n              >\n                <Button\n                  onClick={this.changePageToSignup}\n                  variant=\"outline-primary\"\n                >\n                  Click here for Signup\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nclass AccountWindow extends Component {\n  state = {};\n\n  render() {\n    return (\n      <React.Fragment>\n        <ListGroup\n          style={{\n            top: \"10%\",\n            width: \"18%\",\n            position: \"absolute\",\n            right: \"3px\",\n            display: this.props.visible ? \"block\" : \"none\"\n          }}\n        >\n          <ListGroup.Item\n            style={{\n              backgroundColor: \"#343a40\",\n              color: \"white\"\n            }}\n          >\n            Hi {\"Username\"}\n          </ListGroup.Item>\n          <ListGroup.Item\n            style={{\n              backgroundColor: \"#343a40\",\n              color: \"rgba(255,255,255,.5)\"\n            }}\n            action\n            href=\"#My preferences\"\n          >\n            My Preferences\n          </ListGroup.Item>\n          <ListGroup.Item\n            style={{\n              backgroundColor: \"#343a40\",\n              color: \"rgba(255,255,255,.5)\"\n            }}\n            action\n            href=\"#Account Settiings\"\n          >\n            Account Settings\n          </ListGroup.Item>\n        </ListGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AccountWindow;\n","import React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport * as usersConnector from \"../connectors/usersConnector\";\n\nclass SignupForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    phoneNumber: \"\",\n    alertLimit: \"0\",\n    signup: false,\n    error: \"\"\n  };\n\n  styleMargin = \"m-3\";\n\n  handleSignup = async event => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      await usersConnector.createNewUser(\n        this.state.email,\n        this.state.password,\n        this.state.username,\n        this.state.phoneNumber,\n        parseInt(this.state.alertLimit)\n      );\n      this.changeToLogin();\n    } catch (e) {\n      //error handling\n      console.log(e.message);\n    }\n  };\n\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  handleUsernameChange = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  handlePhoneNumberChange = e => {\n    this.setState({ phoneNumber: e.target.value });\n  };\n\n  handleAlertLimitChange = e => {\n    this.setState({ alertLimit: e.target.value });\n  };\n\n  changeToLogin = () => {\n    this.props.onPageToDisplayChange(\"loginForm\");\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Form onSubmit={this.handleSignup}>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={this.handleEmailChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handlePasswordChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Username\"\n              onChange={this.handleUsernameChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPhoneNumber\">\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              type=\"phoneNumber\"\n              placeholder=\"Such as: +972501234567\"\n              onChange={this.handlePhoneNumberChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAlertLimitNumber\">\n            <Form.Label>Alert Limit</Form.Label>\n            <Form.Control\n              type=\"alertLimit\"\n              placeholder=\"AlertLimit\"\n              onChange={this.handleAlertLimitChange}\n            />\n          </Form.Group>\n          <Container>\n            <Row className=\"justify-content-md-center\">\n              <Col style={{ textAlign: \"center\" }} className={this.styleMargin}>\n                <Button\n                  variant=\"primary\"\n                  size=\"lg\"\n                  active\n                  type=\"submit\"\n                  style={{ position: \"relative\", margin: \"auto\" }}\n                >\n                  Signup\n                </Button>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              <Col\n                md={5}\n                xs={10}\n                style={{ textAlign: \"center\" }}\n                className={this.styleMargin}\n              >\n                <Button onClick={this.changeToLogin} variant=\"outline-primary\">\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from \"react\";\nimport HomepageNavbar from \"./components/HomepageNavbar\";\nimport TrendsContainer from \"./components/TrendsContainer\";\nimport LoginForm from \"./components/LoginForm\";\nimport AccountWindow from \"./components/AccountWindow\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport SignupForm from \"./components/SignupForm\";\n\nexport default class App extends Component {\n  state = {\n    loggedIn: false,\n    accountWindow: false,\n    pageToDisplay: \"loginForm\"\n  };\n\n  handlePageToDisplay = pageName => {\n    this.setState({ pageToDisplay: pageName });\n  };\n\n  handleLoggedInChange = () => {\n    this.setState({ pageToDisplay: \"trendsContainer\" });\n    this.setState({ loggedIn: true });\n  };\n\n  handleAccountWindow = () => {\n    console.log(\"handling\");\n    this.setState({ accountWindow: !this.state.accountWindow });\n  };\n\n  whatDoDisplay = () => {\n    switch (this.state.pageToDisplay) {\n      case \"loginForm\":\n        return (\n          <React.Fragment>\n            <HomepageNavbar onAccountWindowChange={this.handleAccountWindow} />\n            <AccountWindow visible={this.state.accountWindow} />\n            <Container fluid className=\"HomepageBody\">\n              <Row>\n                <Col\n                  style={{\n                    border: \"1px solid gray\",\n                    padding: \"50px\",\n                    position: \"relative\",\n                    top: \"10%\",\n                    margin: \"auto\",\n                    boxShadow: \"0px 0px 8px -2px\",\n                    borderRadius: \"1%\"\n                  }}\n                  md={5}\n                  xs={10}\n                >\n                  <LoginForm onPageToDisplayChange={this.handlePageToDisplay} />\n                </Col>\n              </Row>\n            </Container>\n          </React.Fragment>\n        );\n      case \"trendsContainer\":\n        return (\n          <React.Fragment>\n            <HomepageNavbar onAccountWindowChange={this.handleAccountWindow} />\n            <div\n              style={{\n                position: \"relative\",\n                maxWidth: \"960px\",\n                margin: \"auto\"\n              }}\n              className=\"HomepageBody\"\n            >\n              <TrendsContainer />\n            </div>\n          </React.Fragment>\n        );\n      case \"signupForm\":\n        return (\n          <React.Fragment>\n            <HomepageNavbar onAccountWindowChange={this.handleAccountWindow} />\n            <AccountWindow visible={this.state.accountWindow} />\n            <Container fluid className=\"HomepageBody\">\n              <Row>\n                <Col\n                  style={{\n                    border: \"1px solid gray\",\n                    padding: \"50px\",\n                    position: \"relative\",\n                    top: \"10%\",\n                    margin: \"auto\",\n                    boxShadow: \"0px 0px 8px -2px\",\n                    borderRadius: \"1%\"\n                  }}\n                  md={5}\n                  xs={10}\n                >\n                  <SignupForm\n                    onPageToDisplayChange={this.handlePageToDisplay}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          </React.Fragment>\n        );\n      default:\n        return <div>ERROR</div>;\n    }\n  };\n\n  render() {\n    return this.whatDoDisplay();\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n/* istanbul ignore next */\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n/* istanbul ignore next */\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n/* istanbul ignore next */\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n/* istanbul ignore next */\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n/* istanbul ignore next */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nserviceWorker.unregister();\n"],"sourceRoot":""}