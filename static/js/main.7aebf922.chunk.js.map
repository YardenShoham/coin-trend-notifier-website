{"version":3,"sources":["components/Navbar/AccountWindow.jsx","components/Navbar/HomepageNavbar.jsx","components/Trends/Arrow.jsx","components/Trends/SingleTrendContainer.jsx","connectors/eventConnector.js","components/Trends/TrendsContainer.jsx","components/Trends/Trend.jsx","connectors/usersConnector.js","components/Login/LoginFormButtons.jsx","components/Login/LoginForm.jsx","components/Settings/ChangeSettings/SettingsPageButtons.jsx","components/Settings/ChangeSettings/SettingsPage.jsx","components/Settings/ChangePassword/ChangePassButtons.jsx","components/Settings/ChangePassword/ChangePasswordForm.jsx","components/Signup/SignupFormButtons.jsx","components/Signup/SignupForm.jsx","connectors/preferenceConnector.js","components/Preferences/Preference.jsx","components/Preferences/Preferences.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["AccountWindow","props","history","useHistory","Fragment","ListGroup","id","style","top","width","position","right","display","visible","zIndex","Item","backgroundColor","color","localStorage","getItem","onClick","onAccountWindowChange","to","Button","variant","size","setItem","push","HomepageNavbar","useState","accountWindow","setAccountWindow","handleAccountWindowChange","changepage","pageName","Navbar","collapseOnSelect","expand","bg","marginBottom","Container","maxWidth","margin","Brand","href","src","logo","className","alt","marginLeft","Toggle","aria-controls","Collapse","Nav","Link","Arrow","rest","compAngle","angle","icon","faLongArrowAltUp","transform","SingleTrendContainer","verticalCenterStyle","minHeight","alignItems","Card","fluid","padding","textAlign","Row","noGutters","Col","xs","indx","Badge","type","base","quote","Math","abs","chance","axios","require","default","path","getEvents","amount","token","config","headers","Authorization","get","getEventByID","TrendsContainer","state","allTrends","borderStyle","handleAllTrends","a","eventConnector","res","data","setState","map","event","baseAssetName","quoteAssetName","probability","round","url","_id","firedAt","this","e","console","log","trend","index","key","Component","Trend","setProbability","setFiredAt","baseAsset","setBaseAsset","quoteAsset","setQuoteAsset","useEffect","match","params","fetchData","createNewUser","email","password","username","alertLimit","post","updateUser","put","loginUser","jwt","changeUserPassword","oldPassword","newPassword","patch","getUser","LoginFormButtons","active","error","md","LoginForm","setEmail","setPassword","setError","handleLogin","preventDefault","usersConnector","user","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","target","value","SettingsPageButtons","refresh","SettingsPage","setUsername","setAlertLimit","emailRef","useRef","usernameRef","alertRef","handleUpdateUser","parseInt","message","getAndSetUser","useCallback","current","ref","min","ChangePassButtons","backToSettings","ChangePasswordForm","setOldPassword","newPass1","setNewPass1","newPass2","setNewPass2","handlePasswordChange","setTimeout","Error","length","includes","SignupFormButtons","SignupForm","handleSignup","setPreference","deletePreference","PreferenceDto","delete","getPreferences","Preference","preference","edit","originalValues","calculateProbabilities","probs","i","handleEditPreference","idx","tempEditing","onEditChange","PreferencesConnector","parseFloat","handlePreferenceChanges","tempUserPreferences","componentDidMount","getDefaultValue","Object","assign","editing","onRemovePreference","defaultValue","disabled","as","baseCoins","coin","quoteCoins","n","num","Preferences","userPreferences","handleNewUserPreferences","userPrefences","handleRemovePreference","refreshData","handleEditingChange","saveMode","temp","preferences","handleSaveChanges","ButtonToolbar","Home","App","app","component","border","boxShadow","borderRadius","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7aebf922.chunk.js","sourcesContent":["import React from \"react\";\nimport { ListGroup, Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function AccountWindow(props) {\n  const history = useHistory();\n\n  return (\n    <React.Fragment>\n      <ListGroup\n        id=\"AccountWindow\"\n        style={{\n          top: \"80px\",\n          width: \"18%\",\n          position: \"absolute\",\n          right: \"3px\",\n          display: props.visible ? \"block\" : \"none\",\n          zIndex: \"1\",\n        }}\n      >\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          Hi{\" \"}\n          {localStorage.getItem(\"username\")\n            ? localStorage.getItem(\"username\")\n            : \"Guest\"}\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Link\n            onClick={props.onAccountWindowChange}\n            to=\"/coin-trend-notifier-website/preferences\"\n          >\n            My Preferences\n          </Link>\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Link\n            onClick={props.onAccountWindowChange}\n            to=\"/coin-trend-notifier-website/settings\"\n          >\n            Account Settings\n          </Link>\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Button\n            variant=\"outline-danger\"\n            size=\"sm\"\n            style={{ color: \"rgba(255,255,255,.5)\" }}\n            onClick={() => {\n              localStorage.setItem(\"jwt\", \"\");\n              props.onAccountWindowChange();\n              history.push(\"/coin-trend-notifier-website/home\");\n            }}\n          >\n            Logout\n          </Button>\n        </ListGroup.Item>\n      </ListGroup>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport logo from \"../../assets/logo.png\";\nimport { useHistory } from \"react-router-dom\";\nimport AccountWindow from \"./AccountWindow\";\n\nexport default function HomepageNavbar(props) {\n  const [accountWindow, setAccountWindow] = useState(false);\n\n  const handleAccountWindowChange = () => {\n    setAccountWindow(!accountWindow);\n  };\n\n  const history = useHistory();\n\n  const changepage = (pageName) => {\n    history.push(`/coin-trend-notifier-website/${pageName}`);\n  };\n\n  return (\n    <React.Fragment>\n      <Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        bg=\"dark\"\n        variant=\"dark\"\n        style={{ marginBottom: \"30px\", position: \"relative\" }}\n      >\n        <Container style={{ maxWidth: \"1020px\", margin: \"auto\" }}>\n          <Navbar.Brand href=\"#home\">\n            <img\n              src={logo}\n              width=\"90px\"\n              className=\"d-inline-block align-top\"\n              alt=\"logo\"\n              style={{ marginLeft: \"15px\" }}\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link\n                onClick={() => {\n                  if (accountWindow) handleAccountWindowChange();\n                  changepage(\"\");\n                }}\n              >\n                Home\n              </Nav.Link>\n              <Nav.Link\n                onClick={() => {\n                  if (accountWindow) handleAccountWindowChange();\n                  changepage(\"about\");\n                }}\n              >\n                About\n              </Nav.Link>\n            </Nav>\n            <Nav className=\"mr-sm-2\" variant=\"dark\">\n              <Nav.Link\n                style={{ color: \"rgba(255,255,255,.5)\" }}\n                onClick={() => handleAccountWindowChange()}\n              >\n                Account\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n        <AccountWindow\n          visible={accountWindow}\n          onAccountWindowChange={handleAccountWindowChange}\n        />\n      </Navbar>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Arrow = ({ color, ...rest }) => {\n  var angle = 45;\n  const compAngle = color === \"green\" ? angle : angle + 90;\n  return (\n    <FontAwesomeIcon\n      icon={faLongArrowAltUp}\n      size=\"2x\"\n      style={{\n        color: color,\n        transform: \"rotate(\" + compAngle + \"deg)\",\n        marginLeft:\n          (color === \"green\" ? angle * 2 : (90 - angle) * 2) / 90 + \"rem\",\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport { Container, Row, Col, Badge, Card, Button } from \"react-bootstrap\";\nimport Arrow from \"./Arrow\";\n\nexport default function SingleTrendContainer(props) {\n  const verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n  };\n  const verticalCenterMarginzStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"0px\",\n    color: \"lightslategrey\",\n  };\n  const borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\",\n  };\n\n  return (\n    <React.Fragment>\n      <Card>\n        <Container fluid=\"true\" style={borderStyle}>\n          <Row noGutters=\"true\">\n            <Col xs={1}>\n              <h3 style={verticalCenterMarginzStyle}>{props.indx}</h3>\n            </Col>\n            <Col>\n              <h3 style={verticalCenterStyle}>\n                <Badge variant={props.type === \"up\" ? \"success\" : \"danger\"}>\n                  {props.base + \"/\" + props.quote}\n                </Badge>\n              </h3>\n            </Col>\n            <Col\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <h3>\n                {props.type === \"up\" ? (\n                  <Arrow color=\"green\" />\n                ) : (\n                  <Arrow color=\"red\" />\n                )}\n              </h3>\n            </Col>\n            <Col>\n              <h3 style={verticalCenterStyle}>\n                <Badge variant={props.type === \"up\" ? \"success\" : \"danger\"}>\n                  {Math.abs(props.chance) + \"%\"}\n                </Badge>\n              </h3>\n            </Col>\n            <Col>\n              <Button\n                style={verticalCenterStyle}\n                variant=\"info\"\n                href={`/coin-trend-notifier-website/trends/${props.id}`}\n              >\n                Click for more\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </Card>\n    </React.Fragment>\n  );\n}\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\n// Get Events' History\nexport const getEvents = (amount) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return axios.get(path + `api/events?amount=${amount}`, config);\n};\n\n// Get all Event History By ID\nexport const getEventByID = (id) => {\n  return axios.get(path + `api/events/${id}`);\n};\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport SingleTrendContainer from \"./SingleTrendContainer\";\nimport * as eventConnector from \"../../connectors/eventConnector\";\n\nclass TrendsContainer extends Component {\n  state = {\n    allTrends: [],\n    amount: 15, // default\n  };\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"lightslategrey\",\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\",\n  };\n\n  handleAllTrends = async () => {\n    let { data: res } = await eventConnector.getEvents(this.state.amount);\n    //need to load the allTrends in the state from the res\n    this.setState({\n      allTrends: res.map((event) => {\n        return {\n          base: event.baseAssetName,\n          quote: event.quoteAssetName,\n          type: event.probability > 0 ? \"up\" : \"down\",\n          chance: Math.round(event.probability * 100),\n          url: \"/coin-trend-notifier-website/trends/\" + event._id,\n          firedAt: event.firedAt,\n          id: event._id,\n        };\n      }),\n    });\n  };\n\n  componentDidMount() {\n    try {\n      this.handleAllTrends();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h4 style={this.verticalCenterStyle}>#</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Asset</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Expected to</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Probability</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>More info</h4>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n        {this.state.allTrends.map((trend, index) => {\n          return (\n            <SingleTrendContainer\n              indx={index + 1}\n              key={\"STD\" + index}\n              base={trend.base}\n              quote={trend.quote}\n              type={trend.type}\n              chance={trend.chance}\n              url={trend.url}\n              firedAt={trend.firedAt}\n              id={trend.id}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TrendsContainer;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport * as eventConnector from \"../../connectors/eventConnector\";\n\nexport default function Trend(props) {\n  const [probability, setProbability] = useState(\"\");\n  const [firedAt, setFiredAt] = useState(\"\");\n  const [baseAsset, setBaseAsset] = useState(\"\");\n  const [quoteAsset, setQuoteAsset] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const { data: res } = await eventConnector.getEventByID(\n        props.match.params.id\n      );\n      setProbability(res.probability);\n      setFiredAt(res.firedAt);\n      setBaseAsset(res.baseAssetName);\n      setQuoteAsset(res.quoteAssetName);\n    }\n    fetchData();\n  }, [props]);\n\n  return (\n    <React.Fragment>\n      <div>\n        <h1>ID is: {props.match.params.id}</h1>\n        <h1>Probability is: {probability}</h1>\n        <h1>Timestamp is: {firedAt}</h1>\n        <h1>Asset: {baseAsset + \"/\" + quoteAsset}</h1>\n      </div>\n    </React.Fragment>\n  );\n}\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\nexport const createNewUser = async (\n  email,\n  password,\n  username,\n  // phoneNumber,\n  alertLimit\n) => {\n  return (\n    await axios.post(path + \"api/users\", {\n      email,\n      password,\n      username,\n      // phoneNumber,\n      alertLimit,\n    })\n  ).data;\n};\n\n// Update a user\nexport const updateUser = async (\n  email,\n  username,\n  // phoneNumber,\n  alertLimit\n) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n\n  return await axios.put(\n    path + \"api/users\",\n    {\n      email,\n      username,\n      // phoneNumber,\n      alertLimit,\n    },\n    config\n  ).data;\n};\n\n// Login a user\nexport const loginUser = async (email, password) => {\n  const res = await axios.post(path + \"api/users/login\", { email, password });\n  localStorage.setItem(\"jwt\", res.data.jwt);\n};\n\n// Change user password\nexport const changeUserPassword = async (oldPassword, newPassword) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.patch(\n    path + \"api/users/password\",\n    {\n      oldPassword,\n      newPassword,\n    },\n    config\n  );\n};\n\n// Get user details\nexport const getUser = async () => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.get(path + \"api/users\", config);\n};\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function LoginFormButtons(props) {\n  const styleMargin = \"m-3\";\n  const history = useHistory();\n\n  const changePageToSignup = () => {\n    history.push(\"/coin-trend-notifier-website/signup\");\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Login\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={5}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={changePageToSignup} variant=\"outline-primary\">\n            Click here for Signup\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as usersConnector from \"../../connectors/usersConnector\";\nimport LoginFormButtons from \"./LoginFormButtons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nexport default function LoginForm(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleErrorChange = () => {\n    setError(\"User does not exist or Password does not match. Try again.\");\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      // login\n      await usersConnector.loginUser(email, password);\n      // get user info\n      let user = (await usersConnector.getUser()).data;\n      // console.log(user);\n      localStorage.setItem(\"username\", user.username);\n      history.push(\"/coin-trend-notifier-website/trends\");\n      // succesfully logged in\n    } catch (e) {\n      // error handling\n      handleErrorChange();\n    }\n  };\n\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem(\"jwt\")) {\n      history.push(\"/coin-trend-notifier-website/trends\");\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleLogin}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={handleEmailChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </Form.Group>\n        <LoginFormButtons error={error} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nexport default function SettingsPageButtons(props) {\n  const styleMargin = \"m-3\";\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Update\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={5}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={props.refresh} variant=\"outline-primary\">\n            Refresh\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport * as usersConnector from \"../../../connectors/usersConnector\";\nimport SettingsPageButtons from \"./SettingsPageButtons\";\nimport { useHistory } from \"react-router-dom\";\n// import logo from \"./refresh.png\";\n\nexport default function SettingsPage(props) {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [alertLimit, setAlertLimit] = useState(\"0\");\n  const [error, setError] = useState(\"\");\n  const emailRef = useRef(null);\n  const usernameRef = useRef(null);\n  const alertRef = useRef(null);\n  const history = useHistory();\n\n  const handleUpdateUser = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      await usersConnector.updateUser(\n        email,\n        username,\n        // phoneNumber,\n        parseInt(alertLimit) * 60\n      );\n      // update the page with new data\n    } catch (e) {\n      //error handling\n      setError(\"Error\");\n      console.log(e.message);\n    }\n  };\n\n  const handleEmailChange = (e) => {\n    if (e.target.value === \"\") getAndSetUser();\n    setEmail(e.target.value);\n  };\n\n  const handleUsernameChange = (e) => {\n    if (e.target.value === \"\") getAndSetUser();\n    setUsername(e.target.value);\n  };\n\n  // const handlePhoneNumberChange = (e) => {\n  // if (e.target.value === \"\") getAndSetUser();\n  //   setPhoneNumber(e.target.value);\n  // };\n\n  const handleAlertLimitChange = (e) => {\n    if (e.target.value === \"\") getAndSetUser();\n    setAlertLimit(e.target.value);\n  };\n\n  const clearContent = () => {\n    emailRef.current.value = \"\";\n    usernameRef.current.value = \"\";\n    alertRef.current.value = 0;\n  };\n\n  const getAndSetUser = useCallback(async () => {\n    clearContent();\n    let user = (await usersConnector.getUser()).data;\n    setEmail(user.email);\n    setUsername(user.username);\n    setAlertLimit(user.alertLimit / 60);\n  }, []);\n\n  const changeToPasswordChange = () => {\n    history.push(\"/coin-trend-notifier-website/settings/pass\");\n  };\n\n  useEffect(() => {\n    getAndSetUser();\n  }, [getAndSetUser]);\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleUpdateUser}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            ref={emailRef}\n            placeholder={email}\n            onChange={handleEmailChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            ref={usernameRef}\n            placeholder={username}\n            onChange={handleUsernameChange}\n          />\n        </Form.Group>\n        {/* <Form.Group controlId=\"formPhoneNumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            pattern={\"\"}\n            placeholder=\"Such as: +972501234567\"\n            onChange={handlePhoneNumberChange}\n          />\n        </Form.Group> */}\n        <Form.Group controlId=\"formAlertLimitNumber\">\n          <Form.Label>Alert Limit</Form.Label>\n          <Form.Control\n            type=\"number\"\n            ref={alertRef}\n            min={0}\n            value={alertLimit}\n            onChange={handleAlertLimitChange}\n          />\n        </Form.Group>\n        <div style={{ textAlign: \"center\" }} className={\"m-3\"}>\n          <Button onClick={changeToPasswordChange} variant=\"outline-danger\">\n            Change Password\n          </Button>\n        </div>\n        <SettingsPageButtons error={error} refresh={getAndSetUser} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\n\nexport default function ChangePassButtons(props) {\n  const styleMargin = \"m-3\";\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Change Password\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={6}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={props.backToSettings} variant=\"outline-primary\">\n            Back To Settings\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport ChangePassButtons from \"./ChangePassButtons\";\nimport { useHistory } from \"react-router-dom\";\nimport * as usersConnector from \"../../../connectors/usersConnector\";\n\nexport default function ChangePasswordForm(props) {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPass1, setNewPass1] = useState(\"\");\n  const [newPass2, setNewPass2] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  const handlePasswordChange = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      if (newPass1 !== newPass2) {\n        setTimeout(() => {\n          setError(\"\");\n        }, 3000);\n        throw Error(\"New Passwords Won't Match\");\n      }\n      if (newPass2.length < 6) {\n        setTimeout(() => {\n          setError(\"\");\n        }, 3000);\n        throw Error(\"Password must be over 6 characters\");\n      }\n      await usersConnector.changeUserPassword(oldPassword, newPass1);\n      // update the page with new data\n    } catch (e) {\n      //error handling\n      if (e.message.includes(\"422\")) {\n        setError(\"This is not your old password\");\n        return;\n      }\n      setError(e.message);\n    }\n  };\n\n  const handleOldPasswordChange = (e) => {\n    setOldPassword(e.target.value);\n  };\n\n  const handleNewPass1Change = (e) => {\n    setNewPass1(e.target.value);\n  };\n\n  const handleNewPass2Change = (e) => {\n    setNewPass2(e.target.value);\n  };\n\n  const chageToSettings = () => {\n    history.push(\"/coin-trend-notifier-website/settings\");\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handlePasswordChange}>\n        <Form.Group controlId=\"formOldPassword\">\n          <Form.Label>Old Password</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Old Password\"\n            onChange={handleOldPasswordChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formNewPass1\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter New Password\"\n            onChange={handleNewPass1Change}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formNewPass2\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter New Password Again\"\n            onChange={handleNewPass2Change}\n          />\n        </Form.Group>\n        <ChangePassButtons error={error} backToSettings={chageToSettings} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupFormButtons(props) {\n  const history = useHistory();\n  const styleMargin = \"m-3\";\n  let changeToLogin = () => {\n    history.push(\"/coin-trend-notifier-website/login\");\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Signup\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={5}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={changeToLogin} variant=\"outline-primary\">\n            Cancel\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as usersConnector from \"../../connectors/usersConnector\";\nimport SignupFormButtons from \"./SignupFormButtons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupForm(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [alertLimit, setAlertLimit] = useState(\"0\");\n  const [error, setError] = useState(\"\");\n\n  const history = useHistory();\n  const changeToLogin = () => {\n    history.push(\"/coin-trend-notifier-website/login\");\n  };\n  const handleSignup = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      await usersConnector.createNewUser(\n        email,\n        password,\n        username,\n        // phoneNumber,\n        parseInt(alertLimit) * 60\n      );\n      changeToLogin();\n    } catch (e) {\n      //error handling\n      setError(\"Error\");\n      console.log(e.message);\n    }\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  // const handlePhoneNumberChange = (e) => {\n  //   setPhoneNumber(e.target.value);\n  // };\n\n  const handleAlertLimitChange = (e) => {\n    setAlertLimit(e.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleSignup}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={handleEmailChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={handleUsernameChange}\n          />\n        </Form.Group>\n        {/* <Form.Group controlId=\"formPhoneNumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            pattern={\"\"}\n            placeholder=\"Such as: +972501234567\"\n            onChange={handlePhoneNumberChange}\n          />\n        </Form.Group> */}\n        <Form.Group controlId=\"formAlertLimitNumber\">\n          <Form.Label>Alert Limit</Form.Label>\n          <Form.Control\n            type=\"number\"\n            min={0}\n            placeholder=\"Max amount of min to be notified\"\n            onChange={handleAlertLimitChange}\n          />\n        </Form.Group>\n        <SignupFormButtons error={error} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/api/preferences\";\n\n// Set User Preference\nexport const setPreference = async (\n  probability,\n  baseAssetName,\n  quoteAssetName\n) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.post(\n    path,\n    {\n      probability,\n      baseAssetName,\n      quoteAssetName\n    },\n    config\n  );\n};\n\n// Delete User Preference\nexport const deletePreference = async PreferenceDto => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.delete(\n    path +\n      \"?baseAssetName=\" +\n      PreferenceDto.baseAssetName +\n      \"&quoteAssetName=\" +\n      PreferenceDto.quoteAssetName,\n    config\n  );\n};\n\n// Get User Preference\nexport const getPreferences = async () => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.get(path, config);\n};\n","import React, { Component } from \"react\";\nimport { Col, Card, Form, Button } from \"react-bootstrap\";\nimport * as PreferencesConnector from \"../../connectors/preferenceConnector\";\n\nclass Preference extends Component {\n  state = {\n    preference: {},\n    edit: true,\n    originalValues: {},\n  };\n\n  constructor(props) {\n    super(props);\n    const originalValues = Object.assign({}, this.props.preference);\n    const preference = Object.assign({}, this.props.preference);\n    const edit = this.props.editing;\n    this.state = {\n      edit,\n      preference,\n      originalValues,\n    };\n  }\n\n  calculateProbabilities = () => {\n    let probs = [];\n    for (let i = 10; i <= 90; i += 10) {\n      probs.push(i);\n    }\n    return probs;\n  };\n\n  handleEditPreference = async (idx) => {\n    let tempEditing = this.state.edit;\n    tempEditing = !tempEditing;\n\n    if (!tempEditing) {\n      // if in Save mode\n      // check that only valid inputs are in\n      if (\n        this.state.preference.baseAssetName === \"Base Coin\" ||\n        this.state.preference.quoteAssetName === \"Quote Coin\" ||\n        this.state.preference.probability === \"Probability\"\n      ) {\n        tempEditing = !tempEditing; //if invalids then change to true\n        //make some error that saying that there are invalid inputs\n        this.props.onEditChange(idx, tempEditing);\n        console.log(\"preferenced could not be saved\");\n      }\n      if (!tempEditing) {\n        if (\n          this.state.originalValues.baseAssetName === \"Base Coin\" &&\n          this.state.originalValues.quoteAssetName === \"Quote Coin\" &&\n          this.state.originalValues.probability === \"Probability\"\n        ) {\n          // if its a new preference then save it\n          await PreferencesConnector.setPreference(\n            parseFloat(this.state.preference.probability) / 100,\n            this.state.preference.baseAssetName,\n            this.state.preference.quoteAssetName\n          );\n        } else {\n          // editing an already-exist preference\n          if (\n            this.state.preference.baseAssetName !==\n              this.state.originalValues.baseAssetName ||\n            this.state.preference.quoteAssetName !==\n              this.state.originalValues.quoteAssetName\n          ) {\n            // if different from original\n            // delete the original preference\n            await PreferencesConnector.deletePreference({\n              baseAssetName: this.state.originalValues.baseAssetName,\n              quoteAssetName: this.state.originalValues.quoteAssetName,\n            });\n\n            // add the edited preference to the db\n            await PreferencesConnector.setPreference(\n              parseFloat(this.state.preference.probability) / 100,\n              this.state.preference.baseAssetName,\n              this.state.preference.quoteAssetName\n            );\n          } else {\n            // same as original\n            if (\n              this.state.preference.probability !==\n              this.state.originalValues.probability\n            ) {\n              // if probability changed then save changes in db\n              await PreferencesConnector.setPreference(\n                parseFloat(this.state.preference.probability) / 100,\n                this.state.preference.baseAssetName,\n                this.state.preference.quoteAssetName\n              );\n            }\n          }\n        }\n\n        // refresh the data\n        this.props.refresh();\n        console.log(\"preference saved\");\n      }\n    }\n    this.props.onEditChange(idx, tempEditing);\n    this.setState({ edit: tempEditing });\n  };\n\n  handlePreferenceChanges = (type, idx, event) => {\n    let tempUserPreferences = this.state.preference;\n    if (type === \"base\") {\n      tempUserPreferences.baseAssetName = event.target.value;\n    } else if (type === \"quote\") {\n      tempUserPreferences.quoteAssetName = event.target.value;\n    } else if (type === \"prob\") {\n      tempUserPreferences.probability = event.target.value;\n    }\n    this.setState({ preference: tempUserPreferences });\n  };\n\n  componentDidMount = () => {};\n\n  getDefaultValue = () => {\n    return this.props.preference.probability === \"Probability\"\n      ? \"Probability\"\n      : this.props.preference.probability * 100;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Form.Row>\n            <Col xs={1}>\n              <Button\n                variant=\"outline-danger\"\n                onClick={() => this.props.onRemovePreference(this.props.index)}\n              >\n                x\n              </Button>\n            </Col>\n            <Col xs={1.2}>\n              <Button\n                id={\"preference_\" + this.props.index}\n                variant=\"outline-info\"\n                onClick={() => this.handleEditPreference(this.props.index)}\n              >\n                {this.state.edit === false ? \"Edit\" : \"Save\"}\n              </Button>\n            </Col>\n            <Col>\n              <Form.Control\n                defaultValue={this.props.preference.baseAssetName}\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"base\", this.props.index, e)\n                }\n              >\n                <option>Base Coin</option>\n                {this.props.baseCoins.map((coin) => {\n                  return (\n                    <option key={\"option_\" + coin} value={coin}>\n                      {coin}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} xs={1}>\n              {\"/\"}\n            </Col>\n            <Col>\n              <Form.Control\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"quote\", this.props.index, e)\n                }\n                defaultValue={this.props.preference.quoteAssetName}\n              >\n                <option>Quote Coin</option>\n                {this.props.quoteCoins.map((coin) => {\n                  return (\n                    <option key={\"option_\" + coin} value={coin}>\n                      {coin}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n            <Col>\n              <Form.Control\n                defaultValue={this.getDefaultValue()}\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"prob\", this.props.index, e)\n                }\n              >\n                <option key={\"option_new\"} value={\"Probability\"}>\n                  Probability\n                </option>\n                {this.calculateProbabilities().map((n) => {\n                  let num = parseInt(n);\n                  return (\n                    <option key={\"option_\" + num} value={num}>\n                      {num + \"%\"}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n          </Form.Row>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preference;\n","import React, { Component } from \"react\";\nimport * as PreferencesConnector from \"../../connectors/preferenceConnector\";\nimport { Form, Button, ButtonToolbar } from \"react-bootstrap\";\nimport Preference from \"./Preference\";\n\nclass Preferences extends Component {\n  state = {\n    userPreferences: [],\n    editing: [],\n    baseCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\n    quoteCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\n  };\n\n  handleNewUserPreferences = () => {\n    this.setState({\n      userPrefences: this.state.userPreferences.push({\n        probability: \"Probability\",\n        baseAssetName: \"Base Coin\",\n        quoteAssetName: \"Quote Coin\",\n      }),\n      editing: [...this.state.editing, true],\n    });\n  };\n\n  handleRemovePreference = async (idx) => {\n    if (\n      this.state.userPreferences[idx].baseAssetName === \"Base Coin\" ||\n      this.state.userPreferences[idx].quoteAssetName === \"Quote Coin\" ||\n      this.state.userPreferences[idx].probability === \"Probability\"\n    )\n      this.refreshData();\n    let tempUserPreferences = this.state.userPreferences;\n    await PreferencesConnector.deletePreference({\n      baseAssetName: tempUserPreferences[idx].baseAssetName,\n      quoteAssetName: tempUserPreferences[idx].quoteAssetName,\n    });\n\n    this.refreshData();\n  };\n\n  refreshData = async () => {\n    let userPreferences = await PreferencesConnector.getPreferences();\n    let editing = [];\n    for (let i = 0; i < userPreferences.data.length; i++) {\n      editing.push(false);\n    }\n    this.setState({ userPreferences: userPreferences.data, editing });\n  };\n\n  handleEditingChange = (idx, saveMode) => {\n    let temp = this.state.editing;\n    temp[idx] = saveMode;\n    this.setState({ editing: temp });\n  };\n\n  componentDidMount = async () => {\n    await this.refreshData();\n  };\n\n  render() {\n    let preferences;\n    try {\n      preferences = this.state.userPreferences.map((preference, idx) => {\n        return (\n          <Preference\n            key={\"preference_\" + idx}\n            index={idx}\n            preference={preference}\n            editing={this.state.editing[idx]}\n            onRemovePreference={this.handleRemovePreference}\n            baseCoins={this.state.baseCoins}\n            quoteCoins={this.state.quoteCoins}\n            refresh={this.refreshData}\n            onEditChange={this.handleEditingChange}\n          />\n        );\n      });\n    } catch (error) {\n      preferences = null;\n    }\n\n    return (\n      <React.Fragment>\n        <h1>\n          Hi,{\" \"}\n          {localStorage.getItem(\"username\")\n            ? localStorage.getItem(\"username\")\n            : \"Guest\"}\n        </h1>\n        <span>In this page you can edit your preferred coins.</span>\n        <br />\n        <span>\n          You will get notifications on the crypto coins that are shown here.\n        </span>\n        <br />\n        <br />\n        <Form onSubmit={this.handleSaveChanges}>\n          {preferences}\n          <br />\n          <ButtonToolbar className=\"justify-content-center\">\n            <Button\n              variant=\"outline-primary\"\n              onClick={this.handleNewUserPreferences}\n            >\n              Add New Preference\n            </Button>\n          </ButtonToolbar>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preferences;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home(props) {\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem(\"jwt\")) {\n      history.push(\"/coin-trend-notifier-website/trends\");\n    } else {\n      history.push(\"/coin-trend-notifier-website/login\");\n    }\n  });\n\n  return <React.Fragment />;\n}\n","import React from \"react\";\nimport HomepageNavbar from \"./components/Navbar/HomepageNavbar\";\nimport TrendsContainer from \"./components/Trends/TrendsContainer\";\nimport Trend from \"./components/Trends/Trend\";\nimport LoginForm from \"./components/Login/LoginForm\";\nimport SettingsPage from \"./components/Settings/ChangeSettings/SettingsPage\";\nimport ChangePasswordForm from \"./components/Settings/ChangePassword/ChangePasswordForm\";\nimport SignupForm from \"./components/Signup/SignupForm\";\nimport Preferences from \"./components/Preferences/Preferences\";\nimport Home from \"./components/Home\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nexport default function App(props) {\n  const app = \"/coin-trend-notifier-website/\";\n\n  const whatDoDisplay = () => {\n    return (\n      <Router>\n        <div>\n          <HomepageNavbar />\n\n          <Switch>\n            <Route path={app + \"trends/:id\"} component={Trend}></Route>\n\n            <Route path={app + \"login\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <LoginForm />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path={app + \"trends\"}>\n              <div\n                style={{\n                  position: \"relative\",\n                  maxWidth: \"960px\",\n                  margin: \"auto\",\n                }}\n                className=\"HomepageBody\"\n              >\n                <TrendsContainer />\n              </div>\n            </Route>\n            <Route path={app + \"signup\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <SignupForm />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path={app + \"settings/pass\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <ChangePasswordForm />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n\n            <Route path={app + \"settings\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <SettingsPage />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path={app + \"preferences\"}>\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={8}\n                    xs={10}\n                  >\n                    <Preferences />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path={app + \"about\"}>\n              <React.Fragment></React.Fragment>\n            </Route>\n            <Route path={app + \"\"}>\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  };\n\n  return whatDoDisplay();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n/* istanbul ignore next */\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n/* istanbul ignore next */\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n/* istanbul ignore next */\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n/* istanbul ignore next */\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n/* istanbul ignore next */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.6d974881.png\";"],"sourceRoot":""}