{"version":3,"sources":["assets/logo.png","components/HomepageNavbar.jsx","components/Arrow.jsx","components/SingleTrendContainer.jsx","connectors/eventConnector.js","components/TrendsContainer.jsx","connectors/usersConnector.js","components/LoginForm.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomepageNavbar","Fragment","Navbar","collapseOnSelect","expand","bg","variant","style","marginBottom","Container","maxWidth","margin","Brand","href","src","logo","width","className","alt","marginLeft","Toggle","aria-controls","Collapse","id","Nav","Link","Arrow","color","rest","compAngle","angle","icon","faLongArrowAltUp","size","transform","SingleTrendContainer","verticalCenterStyle","minHeight","display","alignItems","verticalCenterMarginzStyle","borderStyle","padding","textAlign","Card","fluid","this","Row","noGutters","Col","xs","props","indx","Badge","type","base","quote","chance","url","Component","axios","require","default","path","getEvents","amount","token","localStorage","getItem","config","headers","Authorization","get","TrendsContainer","state","allTrends","handleAllTrends","a","eventConnector","res","console","log","e","map","trend","index","key","createNewUser","email","password","username","phoneNumber","alertLimit","post","data","loginUser","LoginForm","signup","error","handleErrorChange","setState","handleEmailChange","target","value","handlePasswordChange","handleUsernameChange","handlePhoneNumberChange","handleAlertLimitChange","handleLogin","event","preventDefault","usersConnector","setItem","jwt","onLogin","message","handleChangeSignup","handleSignup","parseInt","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Button","onClick","active","position","md","App","loggedIn","handleLoggedInChange","border","top","boxShadow","borderRadius","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.551c2d85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6d974881.png\";","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport logo from \"../assets/logo.png\";\n\nconst HomepageNavbar = () => {\n  return (\n    <React.Fragment>\n      <Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        bg=\"dark\"\n        variant=\"dark\"\n        style={{ marginBottom: \"30px\" }}\n      >\n        <Container style={{ maxWidth: \"1020px\", margin: \"auto\" }}>\n          <Navbar.Brand href=\"#home\">\n            <img\n              src={logo}\n              width=\"90px\"\n              className=\"d-inline-block align-top\"\n              alt=\"logo\"\n              style={{ marginLeft: \"15px\" }}\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#about\">About</Nav.Link>\n              </Nav>\n            </Nav>\n            <Nav className=\"mr-sm-2\" variant=\"dark\">\n              <Nav.Link href=\"#account\">Account</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </React.Fragment>\n  );\n};\n\nexport default HomepageNavbar;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Arrow = ({ color, ...rest }) => {\n  var angle = 45;\n  const compAngle = color === \"green\" ? angle : angle + 90;\n  return (\n    <FontAwesomeIcon\n      icon={faLongArrowAltUp}\n      size=\"2x\"\n      style={{\n        color: color,\n        transform: \"rotate(\" + compAngle + \"deg)\",\n        marginLeft:\n          (color === \"green\" ? angle * 2 : (90 - angle) * 2) / 90 + \"rem\"\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport { Container, Row, Col, Badge, Card } from \"react-bootstrap\";\n// import BorderedBox from \"./BordredBox\";\nimport { Component } from \"react\";\nimport Arrow from \"./Arrow\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass SingleTrendContainer extends Component {\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\"\n  };\n  verticalCenterMarginzStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"0px\",\n    color: \"lightslategrey\"\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\"\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h3 style={this.verticalCenterMarginzStyle}>\n                  {this.props.indx}\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>\n                  <Badge\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\n                  >\n                    {this.props.base + \"/\" + this.props.quote}\n                  </Badge>\n                </h3>\n              </Col>\n              <Col\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}\n              >\n                <h3>\n                  {this.props.type === \"up\" ? (\n                    <Arrow color=\"green\" />\n                  ) : (\n                    <Arrow color=\"red\" />\n                  )}\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>\n                  <Badge\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\n                  >\n                    {this.props.chance + \"%\"}\n                  </Badge>\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>{this.props.url}</h3>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SingleTrendContainer;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\n// Get Events' History\nexport const getEvents = amount => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return axios.get(path + \"api/events\", config);\n};\n\n// Get all Events' History By ID\nexport const getEventsByID = () => {\n  let token = localStorage.getItem(\"jwt\");\n  return axios.get(path + `api/events/${token}`);\n};\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport SingleTrendContainer from \"./SingleTrendContainer\";\nimport * as eventConnector from \"../connectors/eventConnector\";\n\nclass TrendsContainer extends Component {\n  state = {\n    allTrends: [\n      { base: \"BTC\", quote: \"USDT\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"ETH\", quote: \"USDT\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"TRX\", quote: \"USDT\", type: \"down\", chance: 30, url: \"#href\" },\n      { base: \"ETH\", quote: \"BTC\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"TRX\", quote: \"BTC\", type: \"down\", chance: 30, url: \"#href\" }\n    ]\n  };\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"lightslategrey\"\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\"\n  };\n\n  handleAllTrends = async () => {\n    let res = await eventConnector.getEvents();\n    //need to load the allTrends in the state from the res\n    console.log(res);\n  };\n\n  componentDidMount() {\n    try {\n      this.handleAllTrends();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h4 style={this.verticalCenterStyle}>#</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Asset</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Expected to</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Possibilty</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>More info</h4>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n        {this.state.allTrends.map((trend, index) => {\n          return (\n            <SingleTrendContainer\n              indx={index + 1}\n              key={\"STD\" + index}\n              base={trend.base}\n              quote={trend.quote}\n              type={trend.type}\n              chance={trend.chance}\n              url={trend.url}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TrendsContainer;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\nexport const createNewUser = async (\n  email,\n  password,\n  username,\n  phoneNumber,\n  alertLimit\n) => {\n  return (\n    await axios.post(path + \"api/users\", {\n      email,\n      password,\n      username,\n      phoneNumber,\n      alertLimit\n    })\n  ).data;\n};\n\n// Update a user\nexport const updateUser = async (\n  email,\n  password,\n  username,\n  phoneNumber,\n  alertLimit\n) => {\n  return await axios.put(path + \"api/users\", {\n    email,\n    password,\n    username,\n    phoneNumber,\n    alertLimit\n  }).data;\n};\n\n// Login a user\nexport const loginUser = async (email, password) => {\n  const res = await axios.post(path + \"api/users/login\", { email, password });\n  return res.data;\n};\n\n// Change user password\nexport const changeUserPassword = async (oldPassword, newPassword) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.patch(path + \"api/users/password\", {\n    oldPassword,\n    newPassword,\n    config\n  });\n};\n","import React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport * as usersConnector from \"../connectors/usersConnector\";\n\nconst styleMargin = \"m-3\";\n\nexport default class LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    phoneNumber: \"\",\n    alertLimit: \"0\",\n    signup: false,\n    error: \"\"\n  };\n\n  handleErrorChange = () => {\n    this.setState({\n      error: \"User does not exist or Password does not match. Try again.\"\n    });\n  };\n\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  handleUsernameChange = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  handlePhoneNumberChange = e => {\n    this.setState({ phoneNumber: e.target.value });\n  };\n\n  handleAlertLimitChange = e => {\n    this.setState({ alertLimit: e.target.value });\n  };\n\n  handleLogin = async event => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      // login\n      let res = await usersConnector.loginUser(\n        this.state.email,\n        this.state.password\n      );\n      // save token in localStorage\n      localStorage.setItem(\"jwt\", res.jwt);\n      console.log(\"token saved\");\n\n      // change state to loggedIn=true;\n      this.props.onLogin();\n    } catch (e) {\n      // error handling\n      this.handleErrorChange();\n      console.log(e.message);\n    }\n  };\n\n  handleChangeSignup = () => {\n    this.setState({ signup: !this.state.signup });\n  };\n\n  handleSignup = async event => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      let res = await usersConnector.createNewUser(\n        this.state.email,\n        this.state.password,\n        this.state.username,\n        this.state.phoneNumber,\n        parseInt(this.state.alertLimit)\n      );\n      console.log(res);\n    } catch (e) {\n      //error handling\n      console.log(e.message);\n    }\n  };\n\n  render() {\n    if (this.state.signup) {\n      return (\n        <React.Fragment>\n          <Form onSubmit={this.handleSignup}>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email\"\n                onChange={this.handleEmailChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handlePasswordChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"username\"\n                placeholder=\"Username\"\n                onChange={this.handleUsernameChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPhoneNumber\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                type=\"phoneNumber\"\n                placeholder=\"Such as: +972501234567\"\n                onChange={this.handlePhoneNumberChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAlertLimitNumber\">\n              <Form.Label>Alert Limit</Form.Label>\n              <Form.Control\n                type=\"alertLimit\"\n                placeholder=\"AlertLimit\"\n                onChange={this.handleAlertLimitChange}\n              />\n            </Form.Group>\n            <Container>\n              <Row className=\"justify-content-md-center\">\n                <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n                  <Button\n                    onClick={this.handleSignup}\n                    variant=\"primary\"\n                    size=\"lg\"\n                    active\n                    type=\"submit\"\n                    style={{ position: \"relative\", margin: \"auto\" }}\n                  >\n                    Signup\n                  </Button>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col\n                  md={5}\n                  xs={10}\n                  style={{ textAlign: \"center\" }}\n                  className={styleMargin}\n                >\n                  <Button\n                    onClick={this.handleChangeSignup}\n                    variant=\"outline-primary\"\n                  >\n                    Cancel\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </Form>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Form onSubmit={this.handleLogin}>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email\"\n                onChange={this.handleEmailChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handlePasswordChange}\n              />\n            </Form.Group>\n            {/*need to add functionality for next 3 buttons: */}\n            <Container>\n              <Row className=\"justify-content-md-center\">\n                <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n                  <Button\n                    variant=\"primary\"\n                    size=\"lg\"\n                    active\n                    type=\"submit\"\n                    style={{ position: \"relative\", margin: \"auto\" }}\n                  >\n                    Login\n                  </Button>\n                </Col>\n              </Row>\n              {this.state.error !== \"\" && (\n                <Row className=\"justify-content-md-center\">\n                  <Col\n                    md={11}\n                    xs={10}\n                    style={{ textAlign: \"center\" }}\n                    className={styleMargin}\n                  >\n                    {this.state.error}\n                  </Col>\n                </Row>\n              )}\n              <Row className=\"justify-content-md-center\">\n                <Col\n                  md={5}\n                  xs={10}\n                  style={{ textAlign: \"center\" }}\n                  className={styleMargin}\n                >\n                  <Button\n                    onClick={this.handleChangeSignup}\n                    variant=\"outline-primary\"\n                  >\n                    Click here for Signup\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </Form>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport HomepageNavbar from \"./components/HomepageNavbar\";\nimport TrendsContainer from \"./components/TrendsContainer\";\nimport LoginForm from \"./components/LoginForm\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport default class App extends Component {\n  state = {\n    loggedIn: false\n  };\n\n  handleLoggedInChange = () => {\n    this.setState({ loggedIn: true });\n  };\n\n  render() {\n    if (this.state.loggedIn) {\n      return (\n        <React.Fragment>\n          <HomepageNavbar />\n          <div\n            style={{\n              position: \"relative\",\n              maxWidth: \"960px\",\n              margin: \"auto\"\n            }}\n            className=\"HomepageBody\"\n          >\n            <TrendsContainer />\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <HomepageNavbar />\n          <Container fluid className=\"HomepageBody\">\n            <Row>\n              <Col\n                style={{\n                  border: \"1px solid gray\",\n                  padding: \"50px\",\n                  position: \"relative\",\n                  top: \"10%\",\n                  margin: \"auto\",\n                  boxShadow: \"0px 0px 10px -2px\",\n                  borderRadius: \"1%\"\n                }}\n                md={5}\n                xs={10}\n              >\n                <LoginForm onLogin={this.handleLoggedInChange} />\n              </Col>\n            </Row>\n          </Container>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n/* istanbul ignore next */\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n/* istanbul ignore next */\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n/* istanbul ignore next */\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n/* istanbul ignore next */\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n/* istanbul ignore next */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nserviceWorker.unregister();\n"],"sourceRoot":""}