{"version":3,"sources":["assets/logo.png","components/HomepageNavbar.jsx","components/Arrow.jsx","components/SingleTrendContainer.jsx","components/TrendsContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomepageNavbar","Fragment","Navbar","collapseOnSelect","expand","bg","variant","style","marginBottom","Container","maxWidth","margin","Brand","href","src","logo","width","className","alt","marginLeft","Toggle","aria-controls","Collapse","id","Nav","Link","Arrow","color","rest","compAngle","angle","icon","faLongArrowAltUp","size","transform","SingleTrendContainer","verticalCenterStyle","minHeight","display","alignItems","verticalCenterMarginzStyle","borderStyle","padding","textAlign","Card","fluid","this","Row","noGutters","Col","xs","props","indx","Badge","type","base","quote","chance","url","Component","TrendsContainer","state","allTrends","map","trend","index","key","App","position","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21bb615a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6d974881.png\";","import React from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nconst HomepageNavbar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        style={{ marginBottom: \"30px\" }}\r\n      >\r\n        <Container style={{ maxWidth: \"1020px\", margin: \"auto\" }}>\r\n          <Navbar.Brand href=\"#home\">\r\n            <img\r\n              src={logo}\r\n              width=\"90px\"\r\n              className=\"d-inline-block align-top\"\r\n              alt=\"logo\"\r\n              style={{ marginLeft: \"15px\" }}\r\n            />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                <Nav.Link href=\"#about\">About</Nav.Link>\r\n              </Nav>\r\n            </Nav>\r\n            <Nav className=\"mr-sm-2\" variant=\"dark\">\r\n              <Nav.Link href=\"#account\">Account</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HomepageNavbar;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Arrow = ({ color, ...rest }) => {\r\n  var angle = 45;\r\n  const compAngle = color === \"green\" ? angle : angle + 90;\r\n  return (\r\n    <FontAwesomeIcon\r\n      icon={faLongArrowAltUp}\r\n      size=\"2x\"\r\n      style={{\r\n        color: color,\r\n        transform: \"rotate(\" + compAngle + \"deg)\",\r\n        marginLeft:\r\n          (color === \"green\" ? angle * 2 : (90 - angle) * 2) / 90 + \"rem\"\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Badge, Card } from \"react-bootstrap\";\r\n// import BorderedBox from \"./BordredBox\";\r\nimport { Component } from \"react\";\r\nimport Arrow from \"./Arrow\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass SingleTrendContainer extends Component {\r\n  verticalCenterStyle = {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  };\r\n  verticalCenterMarginzStyle = {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"0px\",\r\n    color: \"lightslategrey\"\r\n  };\r\n  borderStyle = {\r\n    padding: \"5px\",\r\n    textAlign: \"center\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <Container fluid=\"true\" style={this.borderStyle}>\r\n            <Row noGutters=\"true\">\r\n              <Col xs={1}>\r\n                <h3 style={this.verticalCenterMarginzStyle}>\r\n                  {this.props.indx}\r\n                </h3>\r\n              </Col>\r\n              <Col>\r\n                <h3 style={this.verticalCenterStyle}>\r\n                  <Badge\r\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\r\n                  >\r\n                    {this.props.base + \"/\" + this.props.quote}\r\n                  </Badge>\r\n                </h3>\r\n              </Col>\r\n              <Col\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\"\r\n                }}\r\n              >\r\n                <h3>\r\n                  {this.props.type === \"up\" ? (\r\n                    <Arrow color=\"green\" />\r\n                  ) : (\r\n                    <Arrow color=\"red\" />\r\n                  )}\r\n                </h3>\r\n              </Col>\r\n              <Col>\r\n                <h3 style={this.verticalCenterStyle}>\r\n                  <Badge\r\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\r\n                  >\r\n                    {this.props.chance + \"%\"}\r\n                  </Badge>\r\n                </h3>\r\n              </Col>\r\n              <Col>\r\n                <h3 style={this.verticalCenterStyle}>{this.props.url}</h3>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleTrendContainer;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport SingleTrendContainer from \"./SingleTrendContainer\";\r\n\r\nclass TrendsContainer extends Component {\r\n  state = {\r\n    allTrends: [\r\n      { base: \"BTC\", quote: \"USDT\", type: \"up\", chance: 30, url: \"#href\" },\r\n      { base: \"ETH\", quote: \"USDT\", type: \"up\", chance: 30, url: \"#href\" },\r\n      { base: \"TRX\", quote: \"USDT\", type: \"down\", chance: 30, url: \"#href\" },\r\n      { base: \"ETH\", quote: \"BTC\", type: \"up\", chance: 30, url: \"#href\" },\r\n      { base: \"TRX\", quote: \"BTC\", type: \"down\", chance: 30, url: \"#href\" }\r\n    ]\r\n  };\r\n  verticalCenterStyle = {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    color: \"lightslategrey\"\r\n  };\r\n  borderStyle = {\r\n    padding: \"5px\",\r\n    textAlign: \"center\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <Container fluid=\"true\" style={this.borderStyle}>\r\n            <Row noGutters=\"true\">\r\n              <Col xs={1}>\r\n                <h4 style={this.verticalCenterStyle}>#</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 style={this.verticalCenterStyle}>Asset</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 style={this.verticalCenterStyle}>Expected to</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 style={this.verticalCenterStyle}>Possibilty</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 style={this.verticalCenterStyle}>More info</h4>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Card>\r\n        {this.state.allTrends.map((trend, index) => {\r\n          return (\r\n            <SingleTrendContainer\r\n              indx={index + 1}\r\n              key={\"STD\" + index}\r\n              base={trend.base}\r\n              quote={trend.quote}\r\n              type={trend.type}\r\n              chance={trend.chance}\r\n              url={trend.url}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrendsContainer;\r\n","import React, { Component } from \"react\";\r\nimport HomepageNavbar from \"./components/HomepageNavbar\";\r\nimport TrendsContainer from \"./components/TrendsContainer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NotRegister\">\r\n        <HomepageNavbar />\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            maxWidth: \"960px\",\r\n            margin: \"auto\"\r\n          }}\r\n          className=\"HomepageBody\"\r\n        >\r\n          <TrendsContainer />\r\n        </div>\r\n        {/* <div style={{ position: \"relative\", top: \"50px\" }}>\r\n          <Arrow color={\"green\"} angle={45} />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n/* istanbul ignore next */\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n/* istanbul ignore next */\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n/* istanbul ignore next */\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n/* istanbul ignore next */\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n/* istanbul ignore next */\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n/* istanbul ignore next */\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n/* istanbul ignore next */\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}