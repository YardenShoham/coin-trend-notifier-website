{"version":3,"sources":["assets/logo.png","components/HomepageNavbar.jsx","components/Arrow.jsx","components/SingleTrendContainer.jsx","connectors/eventConnector.js","components/TrendsContainer.jsx","connectors/usersConnector.js","components/LoginForm.jsx","components/AccountWindow.jsx","components/SignupForm.jsx","connectors/preferenceConnector.js","components/Preferences.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomepageNavbar","Fragment","Navbar","collapseOnSelect","expand","bg","variant","style","marginBottom","Container","maxWidth","margin","Brand","href","src","logo","width","className","alt","marginLeft","Toggle","aria-controls","Collapse","id","Nav","Link","Item","color","onClick","props","onAccountWindowChange","Component","Arrow","rest","compAngle","angle","icon","faLongArrowAltUp","size","transform","SingleTrendContainer","verticalCenterStyle","minHeight","display","alignItems","verticalCenterMarginzStyle","borderStyle","padding","textAlign","Card","fluid","this","Row","noGutters","Col","xs","indx","Badge","type","base","quote","chance","url","axios","require","default","path","getEvents","amount","token","localStorage","getItem","config","headers","Authorization","get","TrendsContainer","state","allTrends","handleAllTrends","a","eventConnector","res","console","log","e","map","trend","index","key","createNewUser","email","password","username","phoneNumber","alertLimit","post","data","loginUser","setItem","jwt","LoginForm","error","styleMargin","handleErrorChange","setState","handleEmailChange","target","value","handlePasswordChange","handleLogin","event","preventDefault","usersConnector","onPageToDisplayChange","message","changePageToSignup","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Button","active","position","md","AccountWindow","ListGroup","top","right","visible","zIndex","backgroundColor","isSignedIn","action","SignupForm","signup","handleSignup","parseInt","changeToLogin","handleUsernameChange","handlePhoneNumberChange","handleAlertLimitChange","setPreference","probability","baseAssetName","quoteAssetName","deletePreference","PreferenceDto","delete","getPreferences","Preferences","userPreferences","editing","baseCoins","quoteCoins","handlePreferenceChanges","idx","tempUserPreferences","handleNewUserPreferences","userPrefences","push","handleEditPreference","tempEditing","PreferencesConnector","parseFloat","refreshData","handleSavePreferenceChanges","handleRemovePreference","i","length","componentDidMount","calculateProbabilities","probs","handleSaveChanges","preference","disabled","as","coin","selected","num","ButtonToolbar","App","loggedIn","accountWindow","pageToDisplay","handlePageToDisplay","pageName","handleLoggedInChange","handleAccountWindow","whatDoDisplay","border","boxShadow","borderRadius","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b3929e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6d974881.png\";","import React, { Component } from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport logo from \"../assets/logo.png\";\n\nclass HomepageNavbar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar\n          collapseOnSelect\n          expand=\"lg\"\n          bg=\"dark\"\n          variant=\"dark\"\n          style={{ marginBottom: \"30px\" }}\n        >\n          <Container style={{ maxWidth: \"1020px\", margin: \"auto\" }}>\n            <Navbar.Brand href=\"#home\">\n              <img\n                src={logo}\n                width=\"90px\"\n                className=\"d-inline-block align-top\"\n                alt=\"logo\"\n                style={{ marginLeft: \"15px\" }}\n              />\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#about\">About</Nav.Link>\n              </Nav>\n              <Nav className=\"mr-sm-2\" variant=\"dark\">\n                <Nav.Item\n                  style={{ color: \"rgba(255,255,255,.5)\" }}\n                  onClick={() => this.props.onAccountWindowChange()}\n                >\n                  Account\n                </Nav.Item>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default HomepageNavbar;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Arrow = ({ color, ...rest }) => {\n  var angle = 45;\n  const compAngle = color === \"green\" ? angle : angle + 90;\n  return (\n    <FontAwesomeIcon\n      icon={faLongArrowAltUp}\n      size=\"2x\"\n      style={{\n        color: color,\n        transform: \"rotate(\" + compAngle + \"deg)\",\n        marginLeft:\n          (color === \"green\" ? angle * 2 : (90 - angle) * 2) / 90 + \"rem\"\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport { Container, Row, Col, Badge, Card } from \"react-bootstrap\";\n// import BorderedBox from \"./BordredBox\";\nimport { Component } from \"react\";\nimport Arrow from \"./Arrow\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass SingleTrendContainer extends Component {\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\"\n  };\n  verticalCenterMarginzStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"0px\",\n    color: \"lightslategrey\"\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\"\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h3 style={this.verticalCenterMarginzStyle}>\n                  {this.props.indx}\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>\n                  <Badge\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\n                  >\n                    {this.props.base + \"/\" + this.props.quote}\n                  </Badge>\n                </h3>\n              </Col>\n              <Col\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}\n              >\n                <h3>\n                  {this.props.type === \"up\" ? (\n                    <Arrow color=\"green\" />\n                  ) : (\n                    <Arrow color=\"red\" />\n                  )}\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>\n                  <Badge\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\n                  >\n                    {this.props.chance + \"%\"}\n                  </Badge>\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>{this.props.url}</h3>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SingleTrendContainer;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\n// Get Events' History\nexport const getEvents = amount => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return axios.get(path + \"api/events\", config);\n};\n\n// Get all Events' History By ID\nexport const getEventsByID = () => {\n  let token = localStorage.getItem(\"jwt\");\n  return axios.get(path + `api/events/${token}`);\n};\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport SingleTrendContainer from \"./SingleTrendContainer\";\nimport * as eventConnector from \"../connectors/eventConnector\";\n\nclass TrendsContainer extends Component {\n  state = {\n    allTrends: [\n      { base: \"BTC\", quote: \"USDT\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"ETH\", quote: \"USDT\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"TRX\", quote: \"USDT\", type: \"down\", chance: 30, url: \"#href\" },\n      { base: \"ETH\", quote: \"BTC\", type: \"up\", chance: 30, url: \"#href\" },\n      { base: \"TRX\", quote: \"BTC\", type: \"down\", chance: 30, url: \"#href\" }\n    ]\n  };\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"lightslategrey\"\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\"\n  };\n\n  handleAllTrends = async () => {\n    let res = await eventConnector.getEvents();\n    //need to load the allTrends in the state from the res\n    console.log(res);\n  };\n\n  componentDidMount() {\n    try {\n      this.handleAllTrends();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h4 style={this.verticalCenterStyle}>#</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Asset</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Expected to</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Possibilty</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>More info</h4>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n        {this.state.allTrends.map((trend, index) => {\n          return (\n            <SingleTrendContainer\n              indx={index + 1}\n              key={\"STD\" + index}\n              base={trend.base}\n              quote={trend.quote}\n              type={trend.type}\n              chance={trend.chance}\n              url={trend.url}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TrendsContainer;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\nexport const createNewUser = async (\n  email,\n  password,\n  username,\n  phoneNumber,\n  alertLimit\n) => {\n  return (\n    await axios.post(path + \"api/users\", {\n      email,\n      password,\n      username,\n      phoneNumber,\n      alertLimit\n    })\n  ).data;\n};\n\n// Update a user\nexport const updateUser = async (\n  email,\n  password,\n  username,\n  phoneNumber,\n  alertLimit\n) => {\n  return await axios.put(path + \"api/users\", {\n    email,\n    password,\n    username,\n    phoneNumber,\n    alertLimit\n  }).data;\n};\n\n// Login a user\nexport const loginUser = async (email, password) => {\n  const res = await axios.post(path + \"api/users/login\", { email, password });\n  localStorage.setItem(\"jwt\", res.data.jwt);\n};\n\n// Change user password\nexport const changeUserPassword = async (oldPassword, newPassword) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.patch(path + \"api/users/password\", {\n    oldPassword,\n    newPassword,\n    config\n  });\n};\n","import React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport * as usersConnector from \"../connectors/usersConnector\";\n\nexport default class LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  styleMargin = \"m-3\";\n\n  handleErrorChange = () => {\n    this.setState({\n      error: \"User does not exist or Password does not match. Try again.\"\n    });\n  };\n\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  handleLogin = async event => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      // login\n      await usersConnector.loginUser(this.state.email, this.state.password);\n\n      // succesfully logged in;\n      this.props.onPageToDisplayChange(\"trendsContainer\");\n    } catch (e) {\n      // error handling\n      this.handleErrorChange();\n      console.log(e.message);\n    }\n  };\n\n  changePageToSignup = () => {\n    this.props.onPageToDisplayChange(\"signupForm\");\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Form onSubmit={this.handleLogin}>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={this.handleEmailChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handlePasswordChange}\n            />\n          </Form.Group>\n          {/*need to add functionality for next 3 buttons: */}\n          <Container>\n            <Row className=\"justify-content-md-center\">\n              <Col style={{ textAlign: \"center\" }} className={this.styleMargin}>\n                <Button\n                  variant=\"primary\"\n                  size=\"lg\"\n                  active\n                  type=\"submit\"\n                  style={{ position: \"relative\", margin: \"auto\" }}\n                >\n                  Login\n                </Button>\n              </Col>\n            </Row>\n            {this.state.error !== \"\" && (\n              <Row className=\"justify-content-md-center\">\n                <Col\n                  md={11}\n                  xs={10}\n                  style={{ textAlign: \"center\" }}\n                  className={this.styleMargin}\n                >\n                  {this.state.error}\n                </Col>\n              </Row>\n            )}\n            <Row className=\"justify-content-md-center\">\n              <Col\n                md={5}\n                xs={10}\n                style={{ textAlign: \"center\" }}\n                className={this.styleMargin}\n              >\n                <Button\n                  onClick={this.changePageToSignup}\n                  variant=\"outline-primary\"\n                >\n                  Click here for Signup\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\nclass AccountWindow extends Component {\n  state = {};\n\n  render() {\n    return (\n      <React.Fragment>\n        <ListGroup\n          style={{\n            top: \"7%\",\n            width: \"18%\",\n            position: \"absolute\",\n            right: \"3px\",\n            display: this.props.visible ? \"block\" : \"none\",\n            zIndex: \"1\"\n          }}\n        >\n          <ListGroup.Item\n            style={{\n              backgroundColor: \"#343a40\",\n              color: \"white\"\n            }}\n          >\n            Hi {this.props.isSignedIn === true ? \"Username\" : \"Guest\"}\n          </ListGroup.Item>\n          <ListGroup.Item\n            style={{\n              backgroundColor: \"#343a40\",\n              color: \"rgba(255,255,255,.5)\"\n            }}\n            action\n            onClick={() => this.props.onPageToDisplayChange(\"preferences\")}\n          >\n            My Preferences\n          </ListGroup.Item>\n          <ListGroup.Item\n            style={{\n              backgroundColor: \"#343a40\",\n              color: \"rgba(255,255,255,.5)\"\n            }}\n            action\n            href=\"#Account Settiings\"\n            onClick={() => this.props.onPageToDisplayChange(\"settings\")}\n          >\n            Account Settings\n          </ListGroup.Item>\n        </ListGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AccountWindow;\n","import React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport * as usersConnector from \"../connectors/usersConnector\";\n\nclass SignupForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    phoneNumber: \"\",\n    alertLimit: \"0\",\n    signup: false,\n    error: \"\"\n  };\n\n  styleMargin = \"m-3\";\n\n  handleSignup = async event => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      await usersConnector.createNewUser(\n        this.state.email,\n        this.state.password,\n        this.state.username,\n        this.state.phoneNumber,\n        parseInt(this.state.alertLimit)\n      );\n      this.changeToLogin();\n    } catch (e) {\n      //error handling\n      console.log(e.message);\n    }\n  };\n\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  handleUsernameChange = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  handlePhoneNumberChange = e => {\n    this.setState({ phoneNumber: e.target.value });\n  };\n\n  handleAlertLimitChange = e => {\n    this.setState({ alertLimit: e.target.value });\n  };\n\n  changeToLogin = () => {\n    this.props.onPageToDisplayChange(\"loginForm\");\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Form onSubmit={this.handleSignup}>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={this.handleEmailChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handlePasswordChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"username\"\n              placeholder=\"Username\"\n              onChange={this.handleUsernameChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPhoneNumber\">\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              type=\"phoneNumber\"\n              placeholder=\"Such as: +972501234567\"\n              onChange={this.handlePhoneNumberChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAlertLimitNumber\">\n            <Form.Label>Alert Limit</Form.Label>\n            <Form.Control\n              type=\"alertLimit\"\n              placeholder=\"AlertLimit\"\n              onChange={this.handleAlertLimitChange}\n            />\n          </Form.Group>\n          <Container>\n            <Row className=\"justify-content-md-center\">\n              <Col style={{ textAlign: \"center\" }} className={this.styleMargin}>\n                <Button\n                  variant=\"primary\"\n                  size=\"lg\"\n                  active\n                  type=\"submit\"\n                  style={{ position: \"relative\", margin: \"auto\" }}\n                >\n                  Signup\n                </Button>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              <Col\n                md={5}\n                xs={10}\n                style={{ textAlign: \"center\" }}\n                className={this.styleMargin}\n              >\n                <Button onClick={this.changeToLogin} variant=\"outline-primary\">\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SignupForm;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/api/preferences\";\n\n// Set User Preference\nexport const setPreference = async (\n  probability,\n  baseAssetName,\n  quoteAssetName\n) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.post(\n    path,\n    {\n      probability,\n      baseAssetName,\n      quoteAssetName\n    },\n    config\n  );\n};\n\n// Delete User Preference\nexport const deletePreference = async PreferenceDto => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.delete(\n    path +\n      \"?baseAssetName=\" +\n      PreferenceDto.baseAssetName +\n      \"&quoteAssetName=\" +\n      PreferenceDto.quoteAssetName,\n    config\n  );\n};\n\n// Get User Preference\nexport const getPreferences = async () => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.get(path, config);\n};\n","import React, { Component } from \"react\";\nimport * as PreferencesConnector from \"../connectors/preferenceConnector\";\nimport { Col, Card, Form, Button, ButtonToolbar } from \"react-bootstrap\";\n\nclass Preferences extends Component {\n  state = {\n    userPreferences: [],\n    editing: [],\n    baseCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\n    quoteCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"]\n  };\n\n  handlePreferenceChanges = (type, idx, event) => {\n    let tempUserPreferences = this.state.userPreferences;\n    if (type === \"base\") {\n      tempUserPreferences[idx].baseAssetName = event.target.value;\n      this.setState({ userPreferences: tempUserPreferences });\n    } else if (type === \"quote\") {\n      tempUserPreferences[idx].quoteAssetName = event.target.value;\n      this.setState({ userPreferences: tempUserPreferences });\n    } else if (type === \"prob\") {\n      tempUserPreferences[idx].probability = event.target.value;\n      this.setState({ userPreferences: tempUserPreferences });\n    }\n  };\n\n  handleNewUserPreferences = () => {\n    this.setState({\n      userPrefences: this.state.userPreferences.push({\n        probability: \"Probability\",\n        baseAssetName: \"Base Coin\",\n        quoteAssetName: \"Quote Coin\"\n      }),\n      editing: [...this.state.editing, true]\n    });\n  };\n\n  handleEditPreference = async idx => {\n    let tempEditing = this.state.editing; //all are false\n    tempEditing[idx] = !tempEditing[idx]; //change current to true\n    if (!tempEditing[idx]) {\n      //if current is false\n      // check that only valid inputs are in\n      if (\n        this.state.userPreferences[idx].baseAssetName === \"Base Coin\" ||\n        this.state.userPreferences[idx].quoteAssetName === \"Quote Coin\" ||\n        this.state.userPreferences[idx].probability === \"Probability\"\n      ) {\n        tempEditing[idx] = !tempEditing[idx]; //if invalids then change to true\n        //make some error that saying that there are invalid inputs\n        console.log(\"preferenced could not be saved\");\n      }\n\n      if (!tempEditing[idx]) {\n        // save this preference in the server\n        await PreferencesConnector.setPreference(\n          parseFloat(this.state.userPreferences[idx].probability),\n          this.state.userPreferences[idx].baseAssetName,\n          this.state.userPreferences[idx].quoteAssetName\n        );\n\n        // refresh the data\n        this.refreshData();\n        console.log(\"preference saved\");\n      }\n    }\n    this.setState({ editing: tempEditing });\n  };\n\n  handleSavePreferenceChanges = idx => {};\n\n  handleRemovePreference = async idx => {\n    let tempUserPreferences = this.state.userPreferences;\n    console.log(typeof idx);\n    await PreferencesConnector.deletePreference({\n      baseAssetName: tempUserPreferences[idx].baseAssetName,\n      quoteAssetName: tempUserPreferences[idx].quoteAssetName\n    });\n\n    this.refreshData();\n  };\n\n  refreshData = async () => {\n    let userPreferences = await PreferencesConnector.getPreferences();\n    //deal with if empty\n    let editing = [];\n    for (let i = 0; i < userPreferences.data.length; i++) {\n      editing.push(false);\n    }\n    this.setState({ userPreferences: userPreferences.data, editing });\n  };\n\n  componentDidMount = async () => {\n    await this.refreshData();\n  };\n\n  calculateProbabilities = () => {\n    let probs = [];\n    for (let i = -100; i <= 100; i += 10) {\n      probs.push(i / 100);\n    }\n    return probs;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Hi, {\"Username\"}</h1>\n        <span>In this page you can edit your preferred coins.</span>\n        <br />\n        <span>\n          You will get notifications on the crypto coins that are shown here.\n        </span>\n        <br />\n        <br />\n        <Form onSubmit={this.handleSaveChanges}>\n          {this.state.userPreferences.map((preference, idx) => {\n            return (\n              <Card>\n                <Form.Row>\n                  <Col xs={1}>\n                    <Button\n                      variant=\"outline-danger\"\n                      onClick={() => this.handleRemovePreference(idx)}\n                    >\n                      x\n                    </Button>\n                  </Col>\n                  <Col xs={1.2}>\n                    <Button\n                      id={\"preference_\" + idx}\n                      variant=\"outline-info\"\n                      onClick={() => this.handleEditPreference(idx)}\n                    >\n                      {this.state.editing[idx] === false ? \"Edit\" : \"Save\"}\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Form.Control\n                      disabled={!this.state.editing[idx]}\n                      as=\"select\"\n                      onChange={e =>\n                        this.handlePreferenceChanges(\"base\", idx, e)\n                      }\n                    >\n                      <option>Base Coin</option>\n                      {this.state.baseCoins.map(coin => {\n                        if (coin === preference.baseAssetName)\n                          return (\n                            <option value={coin} selected>\n                              {coin}\n                            </option>\n                          );\n                        return <option value={coin}>{coin}</option>;\n                      })}\n                    </Form.Control>\n                  </Col>\n                  <Col style={{ textAlign: \"center\" }} xs={1}>\n                    {\"/\"}\n                  </Col>\n                  <Col>\n                    <Form.Control\n                      disabled={!this.state.editing[idx]}\n                      as=\"select\"\n                      onChange={e =>\n                        this.handlePreferenceChanges(\"quote\", idx, e)\n                      }\n                    >\n                      <option>Quote Coin</option>\n                      {this.state.quoteCoins.map(coin => {\n                        if (coin === preference.quoteAssetName) {\n                          return (\n                            <option value={coin} selected>\n                              {coin}\n                            </option>\n                          );\n                        }\n                        return <option value={coin}>{coin}</option>;\n                      })}\n                    </Form.Control>\n                  </Col>\n                  <Col>\n                    <Form.Control\n                      disabled={!this.state.editing[idx]}\n                      as=\"select\"\n                      onChange={e =>\n                        this.handlePreferenceChanges(\"prob\", idx, e)\n                      }\n                    >\n                      <option>Probability</option>\n                      {this.calculateProbabilities().map(num => {\n                        if (num === preference.probability)\n                          return (\n                            <option value={num} selected>\n                              {num}\n                            </option>\n                          );\n                        return <option value={num}>{num}</option>;\n                      })}\n                    </Form.Control>\n                  </Col>\n                </Form.Row>\n              </Card>\n            );\n          })}\n          <br />\n          <ButtonToolbar className=\"justify-content-center\">\n            {/* <Button type=\"submit\">Save Changes</Button>{\" \"} */}\n            <Button\n              variant=\"outline-primary\"\n              onClick={this.handleNewUserPreferences}\n            >\n              Add New Preference\n            </Button>\n          </ButtonToolbar>\n          {}\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preferences;\n","import React, { Component } from \"react\";\nimport HomepageNavbar from \"./components/HomepageNavbar\";\nimport TrendsContainer from \"./components/TrendsContainer\";\nimport LoginForm from \"./components/LoginForm\";\nimport AccountWindow from \"./components/AccountWindow\";\nimport SignupForm from \"./components/SignupForm\";\nimport Preferences from \"./components/Preferences\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport default class App extends Component {\n  state = {\n    loggedIn: false,\n    accountWindow: false,\n    pageToDisplay: \"loginForm\"\n  };\n\n  handlePageToDisplay = pageName => {\n    this.setState({ pageToDisplay: pageName });\n  };\n\n  handleLoggedInChange = () => {\n    this.setState({ pageToDisplay: \"trendsContainer\" });\n    this.setState({ loggedIn: true });\n  };\n\n  handleAccountWindow = () => {\n    this.setState({ accountWindow: !this.state.accountWindow });\n  };\n\n  whatDoDisplay = () => {\n    switch (this.state.pageToDisplay) {\n      case \"loginForm\":\n        return (\n          <React.Fragment>\n            <HomepageNavbar onAccountWindowChange={this.handleAccountWindow} />\n            <AccountWindow\n              visible={this.state.accountWindow}\n              onPageToDisplayChange={this.handlePageToDisplay}\n              isSignedIn={this.state.loggedIn}\n            />\n            <Container fluid className=\"HomepageBody\">\n              <Row>\n                <Col\n                  style={{\n                    border: \"1px solid gray\",\n                    padding: \"50px\",\n                    position: \"relative\",\n                    top: \"10%\",\n                    margin: \"auto\",\n                    boxShadow: \"0px 0px 8px -2px\",\n                    borderRadius: \"1%\"\n                  }}\n                  md={5}\n                  xs={10}\n                >\n                  <LoginForm onPageToDisplayChange={this.handlePageToDisplay} />\n                </Col>\n              </Row>\n            </Container>\n          </React.Fragment>\n        );\n      case \"trendsContainer\":\n        return (\n          <React.Fragment>\n            <HomepageNavbar onAccountWindowChange={this.handleAccountWindow} />\n            <AccountWindow\n              visible={this.state.accountWindow}\n              onPageToDisplayChange={this.handlePageToDisplay}\n              isSignedIn={this.state.loggedIn}\n            />\n            <div\n              style={{\n                position: \"relative\",\n                maxWidth: \"960px\",\n                margin: \"auto\"\n              }}\n              className=\"HomepageBody\"\n            >\n              <TrendsContainer />\n            </div>\n          </React.Fragment>\n        );\n      case \"signupForm\":\n        return (\n          <React.Fragment>\n            <HomepageNavbar onAccountWindowChange={this.handleAccountWindow} />\n            <AccountWindow\n              visible={this.state.accountWindow}\n              onPageToDisplayChange={this.handlePageToDisplay}\n              isSignedIn={this.state.loggedIn}\n            />\n            <Container fluid className=\"HomepageBody\">\n              <Row>\n                <Col\n                  style={{\n                    border: \"1px solid gray\",\n                    padding: \"50px\",\n                    position: \"relative\",\n                    top: \"10%\",\n                    margin: \"auto\",\n                    boxShadow: \"0px 0px 8px -2px\",\n                    borderRadius: \"1%\"\n                  }}\n                  md={5}\n                  xs={10}\n                >\n                  <SignupForm\n                    onPageToDisplayChange={this.handlePageToDisplay}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          </React.Fragment>\n        );\n      case \"settings\":\n        return <React.Fragment></React.Fragment>;\n      case \"preferences\":\n        return (\n          <React.Fragment>\n            <HomepageNavbar onAccountWindowChange={this.handleAccountWindow} />\n            <AccountWindow\n              visible={this.state.accountWindow}\n              onPageToDisplayChange={this.handlePageToDisplay}\n              isSignedIn={this.state.loggedIn}\n            />\n            <Container fluid className=\"HomepageBody\">\n              <Row>\n                <Col\n                  style={{\n                    border: \"1px solid gray\",\n                    padding: \"50px\",\n                    position: \"relative\",\n                    top: \"10%\",\n                    margin: \"auto\",\n                    boxShadow: \"0px 0px 8px -2px\",\n                    borderRadius: \"1%\"\n                  }}\n                  md={8}\n                  xs={10}\n                >\n                  <Preferences />\n                </Col>\n              </Row>\n            </Container>\n          </React.Fragment>\n        );\n      case \"about\":\n        return <React.Fragment></React.Fragment>;\n      default:\n        return <div>ERROR</div>;\n    }\n  };\n\n  render() {\n    return this.whatDoDisplay();\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n/* istanbul ignore next */\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n/* istanbul ignore next */\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n/* istanbul ignore next */\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n/* istanbul ignore next */\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n/* istanbul ignore next */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nserviceWorker.unregister();\n"],"sourceRoot":""}