{"version":3,"sources":["components/Navbar/AccountWindow.jsx","components/Navbar/HomepageNavbar.jsx","components/About/AboutPage.jsx","components/Trends/Arrow.jsx","components/Trends/SingleTrendContainer.jsx","connectors/eventConnector.js","components/Trends/TrendsContainer.jsx","components/Trends/Trend.jsx","connectors/usersConnector.js","components/Login/LoginFormButtons.jsx","components/Login/LoginForm.jsx","components/Settings/ChangeSettings/SettingsPageButtons.jsx","components/Settings/ChangeSettings/SettingsPage.jsx","components/Settings/ChangePassword/ChangePassButtons.jsx","components/Settings/ChangePassword/ChangePasswordForm.jsx","components/Signup/SignupFormButtons.jsx","components/Signup/SignupForm.jsx","connectors/preferenceConnector.js","components/Preferences/Preference.jsx","components/Preferences/Preferences.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["AccountWindow","props","history","useHistory","Fragment","ListGroup","id","style","top","width","position","right","display","visible","zIndex","Item","backgroundColor","color","localStorage","getItem","onClick","onAccountWindowChange","to","Button","variant","size","setItem","push","HomepageNavbar","useState","accountWindow","setAccountWindow","handleAccountWindowChange","changepage","pageName","Navbar","collapseOnSelect","expand","bg","marginBottom","Container","maxWidth","margin","Brand","href","src","logo","className","alt","marginLeft","Toggle","aria-controls","Collapse","Nav","Link","AboutPage","fluid","Row","Col","border","padding","boxShadow","borderRadius","md","xs","Card","Header","Body","Title","Text","Footer","Arrow","rest","compAngle","angle","icon","faLongArrowAltUp","transform","SingleTrendContainer","verticalCenterStyle","minHeight","alignItems","textAlign","noGutters","indx","Badge","type","base","quote","Math","abs","chance","axios","require","default","path","getEvents","amount","token","config","headers","Authorization","get","getEventByID","TrendsContainer","state","allTrends","borderStyle","handleAllTrends","a","eventConnector","res","data","setState","map","event","baseAssetName","quoteAssetName","probability","round","url","_id","firedAt","this","e","console","log","trend","index","key","Component","Trend","setProbability","setFiredAt","baseAsset","setBaseAsset","quoteAsset","setQuoteAsset","useEffect","match","params","fetchData","createNewUser","email","password","username","alertLimit","post","updateUser","put","loginUser","jwt","changeUserPassword","oldPassword","newPassword","patch","getUser","LoginFormButtons","active","error","LoginForm","setEmail","setPassword","setError","handleLogin","preventDefault","usersConnector","user","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","target","value","SettingsPageButtons","refresh","SettingsPage","setUsername","setAlertLimit","showHover","setShowHover","emailRef","useRef","usernameRef","alertRef","handleUpdateUser","parseInt","message","getAndSetUser","useCallback","current","ref","Overlay","show","placement","Tooltip","min","onMouseOver","onMouseOut","ChangePassButtons","backToSettings","ChangePasswordForm","setOldPassword","newPass1","setNewPass1","newPass2","setNewPass2","handlePasswordChange","setTimeout","Error","length","includes","SignupFormButtons","SignupForm","handleSignup","setPreference","deletePreference","PreferenceDto","delete","getPreferences","Preference","preference","edit","originalValues","calculateProbabilities","probs","i","handleEditPreference","idx","tempEditing","onEditChange","PreferencesConnector","parseFloat","handlePreferenceChanges","tempUserPreferences","componentDidMount","getDefaultValue","Object","assign","editing","onRemovePreference","defaultValue","disabled","as","baseCoins","coin","quoteCoins","n","num","Preferences","userPreferences","handleNewUserPreferences","userPrefences","handleRemovePreference","refreshData","handleEditingChange","saveMode","temp","preferences","handleSaveChanges","ButtonToolbar","Home","App","app","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"wVAIe,SAASA,EAAcC,GACpC,IAAMC,EAAUC,cAEhB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,gBACHC,MAAO,CACLC,IAAK,OACLC,MAAO,MACPC,SAAU,WACVC,MAAO,MACPC,QAASX,EAAMY,QAAU,QAAU,OACnCC,OAAQ,MAGV,kBAACT,EAAA,EAAUU,KAAX,CACER,MAAO,CACLS,gBAAiB,UACjBC,MAAO,yBAHX,KAMK,IACFC,aAAaC,QAAQ,YAClBD,aAAaC,QAAQ,YACrB,SAEN,kBAACd,EAAA,EAAUU,KAAX,CACER,MAAO,CACLS,gBAAiB,UACjBC,MAAO,yBAGT,kBAAC,IAAD,CACEG,QAASnB,EAAMoB,sBACfC,GAAG,4CAFL,mBAOF,kBAACjB,EAAA,EAAUU,KAAX,CACER,MAAO,CACLS,gBAAiB,UACjBC,MAAO,yBAGT,kBAAC,IAAD,CACEG,QAASnB,EAAMoB,sBACfC,GAAG,yCAFL,qBAOF,kBAACjB,EAAA,EAAUU,KAAX,CACER,MAAO,CACLS,gBAAiB,UACjBC,MAAO,yBAGT,kBAACM,EAAA,EAAD,CACEC,QAAQ,iBACRC,KAAK,KACLlB,MAAO,CAAEU,MAAO,wBAChBG,QAAS,WACPF,aAAaQ,QAAQ,MAAO,IAC5BzB,EAAMoB,wBACNnB,EAAQyB,KAAK,uCAPjB,aCzDK,SAASC,EAAe3B,GAAQ,IAAD,EACF4B,oBAAS,GADP,mBACrCC,EADqC,KACtBC,EADsB,KAGtCC,EAA4B,WAChCD,GAAkBD,IAGd5B,EAAUC,cAEV8B,EAAa,SAACC,GAClBhC,EAAQyB,KAAR,uCAA6CO,KAG/C,OACE,kBAAC,IAAM9B,SAAP,KACE,kBAAC+B,EAAA,EAAD,CACEC,kBAAgB,EAChBC,OAAO,KACPC,GAAG,OACHd,QAAQ,OACRjB,MAAO,CAAEgC,aAAc,OAAQ7B,SAAU,aAEzC,kBAAC8B,EAAA,EAAD,CAAWjC,MAAO,CAAEkC,SAAU,SAAUC,OAAQ,SAC9C,kBAACP,EAAA,EAAOQ,MAAR,CAAcC,KAAK,SACjB,yBACEC,IAAKC,IACLrC,MAAM,OACNsC,UAAU,2BACVC,IAAI,OACJzC,MAAO,CAAE0C,WAAY,WAGzB,kBAACd,EAAA,EAAOe,OAAR,CAAeC,gBAAc,0BAC7B,kBAAChB,EAAA,EAAOiB,SAAR,CAAiB9C,GAAG,yBAClB,kBAAC+C,EAAA,EAAD,CAAKN,UAAU,WACb,kBAACM,EAAA,EAAIC,KAAL,CACElC,QAAS,WACHU,GAAeE,IACnBC,EAAW,MAHf,QAQA,kBAACoB,EAAA,EAAIC,KAAL,CACElC,QAAS,WACHU,GAAeE,IACnBC,EAAW,WAHf,UASF,kBAACoB,EAAA,EAAD,CAAKN,UAAU,UAAUvB,QAAQ,QAC/B,kBAAC6B,EAAA,EAAIC,KAAL,CACE/C,MAAO,CAAEU,MAAO,wBAChBG,QAAS,kBAAMY,MAFjB,cASN,kBAAChC,EAAD,CACEa,QAASiB,EACTT,sBAAuBW,M,8BCnElB,SAASuB,EAAUtD,GAChC,OACE,kBAAC,IAAMG,SAAP,KACE,kBAACoC,EAAA,EAAD,CAAWgB,OAAK,EAACT,UAAU,gBACzB,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEnD,MAAO,CACLoD,OAAQ,iBACRC,QAAS,OACTlD,SAAU,WACVF,IAAK,MACLkC,OAAQ,OACRmB,UAAW,mBACXC,aAAc,MAEhBC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CAAMlB,UAAU,eACd,kBAACkB,EAAA,EAAKC,OAAN,iBACA,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,4BACA,kBAACH,EAAA,EAAKI,KAAN,8HAIA,kBAACJ,EAAA,EAAKG,MAAN,qBACA,kBAACH,EAAA,EAAKI,KAAN,4HAIA,kBAACJ,EAAA,EAAKI,KAAN,oHAIA,kBAACJ,EAAA,EAAKG,MAAN,8BACA,kBAACH,EAAA,EAAKI,KAAN,qJAMF,kBAACJ,EAAA,EAAKK,OAAN,CAAavB,UAAU,cAAvB,0C,oGCtBCwB,EAlBD,SAAC,GAAwB,IAAtBtD,EAAqB,EAArBA,MAAUuD,EAAW,yBAE9BC,EAAsB,UAAVxD,EADN,GACkCyD,IAC9C,OACE,kBAAC,IAAD,eACEC,KAAMC,IACNnD,KAAK,KACLlB,MAAO,CACLU,MAAOA,EACP4D,UAAW,UAAYJ,EAAY,OACnCxB,WACE,SAEAuB,KCdK,SAASM,EAAqB7E,GAC3C,IAAM8E,EAAsB,CAC1BC,UAAW,OACXpE,QAAS,OACTqE,WAAY,UAcd,OACE,kBAAC,IAAM7E,SAAP,KACE,kBAAC6D,EAAA,EAAD,KACE,kBAACzB,EAAA,EAAD,CAAWgB,MAAM,OAAOjD,MARV,CAClBqD,QAAS,MACTsB,UAAW,WAOL,kBAACzB,EAAA,EAAD,CAAK0B,UAAU,QACb,kBAACzB,EAAA,EAAD,CAAKM,GAAI,GACP,wBAAIzD,MAlBmB,CACjCyE,UAAW,OACXpE,QAAS,OACTqE,WAAY,SACZxE,MAAO,MACPQ,MAAO,mBAa2ChB,EAAMmF,OAEhD,kBAAC1B,EAAA,EAAD,KACE,wBAAInD,MAAOwE,GACT,kBAACM,EAAA,EAAD,CAAO7D,QAAwB,OAAfvB,EAAMqF,KAAgB,UAAY,UAC/CrF,EAAMsF,KAAO,IAAMtF,EAAMuF,SAIhC,kBAAC9B,EAAA,EAAD,CACEnD,MAAO,CACLK,QAAS,OACTqE,WAAY,WAGd,4BACkB,OAAfhF,EAAMqF,KACL,kBAAC,EAAD,CAAOrE,MAAM,UAEb,kBAAC,EAAD,CAAOA,MAAM,UAInB,kBAACyC,EAAA,EAAD,KACE,wBAAInD,MAAOwE,GACT,kBAACM,EAAA,EAAD,CAAO7D,QAAwB,OAAfvB,EAAMqF,KAAgB,UAAY,UAC/CG,KAAKC,IAAIzF,EAAM0F,QAAU,OAIhC,kBAACjC,EAAA,EAAD,KACE,kBAACnC,EAAA,EAAD,CACEhB,MAAOwE,EACPvD,QAAQ,OACRoB,KAAI,8CAAyC3C,EAAMK,KAHrD,uBC3Dd,IAAMsF,EAAQC,EAAQ,IAASC,QAEzBC,EAAO,iDAGAC,EAAY,SAACC,GACxB,IAAIC,EAAQhF,aAAaC,QAAQ,OAC7BgF,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KACnD,OAAON,EAAMU,IAAIP,EAAI,4BAAwBE,GAAUE,IAI5CI,EAAe,SAACjG,GAC3B,OAAOsF,EAAMU,IAAIP,EAAI,qBAAiBzF,KC8EzBkG,E,4MArFbC,MAAQ,CACNC,UAAW,GACXT,OAAQ,I,EAEVlB,oBAAsB,CACpBC,UAAW,OACXpE,QAAS,OACTqE,WAAY,SACZhE,MAAO,kB,EAET0F,YAAc,CACZ/C,QAAS,MACTsB,UAAW,U,EAGb0B,gB,sBAAkB,8BAAAC,EAAA,sEACUC,EAAyB,EAAKL,MAAMR,QAD9C,gBACJc,EADI,EACVC,KAEN,EAAKC,SAAS,CACZP,UAAWK,EAAIG,KAAI,SAACC,GAClB,MAAO,CACL5B,KAAM4B,EAAMC,cACZ5B,MAAO2B,EAAME,eACb/B,KAAM6B,EAAMG,YAAc,EAAI,KAAO,OACrC3B,OAAQF,KAAK8B,MAA0B,IAApBJ,EAAMG,aACzBE,IAAK,uCAAyCL,EAAMM,IACpDC,QAASP,EAAMO,QACfpH,GAAI6G,EAAMM,UAZA,2C,kEAmBhB,IACEE,KAAKf,kBACL,MAAOgB,GACPC,QAAQC,IAAIF,M,+BAKd,OACE,kBAAC,IAAMxH,SAAP,KACE,kBAAC6D,EAAA,EAAD,KACE,kBAACzB,EAAA,EAAD,CAAWgB,MAAM,OAAOjD,MAAOoH,KAAKhB,aAClC,kBAAClD,EAAA,EAAD,CAAK0B,UAAU,QACb,kBAACzB,EAAA,EAAD,CAAKM,GAAI,GACP,wBAAIzD,MAAOoH,KAAK5C,qBAAhB,MAEF,kBAACrB,EAAA,EAAD,KACE,wBAAInD,MAAOoH,KAAK5C,qBAAhB,UAEF,kBAACrB,EAAA,EAAD,KACE,wBAAInD,MAAOoH,KAAK5C,qBAAhB,gBAEF,kBAACrB,EAAA,EAAD,KACE,wBAAInD,MAAOoH,KAAK5C,qBAAhB,gBAEF,kBAACrB,EAAA,EAAD,KACE,wBAAInD,MAAOoH,KAAK5C,qBAAhB,iBAKP4C,KAAKlB,MAAMC,UAAUQ,KAAI,SAACa,EAAOC,GAChC,OACE,kBAAClD,EAAD,CACEM,KAAM4C,EAAQ,EACdC,IAAK,MAAQD,EACbzC,KAAMwC,EAAMxC,KACZC,MAAOuC,EAAMvC,MACbF,KAAMyC,EAAMzC,KACZK,OAAQoC,EAAMpC,OACd6B,IAAKO,EAAMP,IACXE,QAASK,EAAML,QACfpH,GAAIyH,EAAMzH,a,GA7EM4H,aCDf,SAASC,EAAMlI,GAAQ,IAAD,EACG4B,mBAAS,IADZ,mBAC5ByF,EAD4B,KACfc,EADe,OAELvG,mBAAS,IAFJ,mBAE5B6F,EAF4B,KAEnBW,EAFmB,OAGDxG,mBAAS,IAHR,mBAG5ByG,EAH4B,KAGjBC,EAHiB,OAIC1G,mBAAS,IAJV,mBAI5B2G,EAJ4B,KAIhBC,EAJgB,KAmBnC,OAbAC,qBAAU,WAAM,4CACd,8BAAA7B,EAAA,sEAC8BC,EAC1B7G,EAAM0I,MAAMC,OAAOtI,IAFvB,gBACgByG,EADhB,EACUC,KAGRoB,EAAerB,EAAIO,aACnBe,EAAWtB,EAAIW,SACfa,EAAaxB,EAAIK,eACjBqB,EAAc1B,EAAIM,gBAPpB,4CADc,uBAAC,WAAD,wBAUdwB,KACC,CAAC5I,IAGF,kBAAC,IAAMG,SAAP,KACE,6BACE,sCAAYH,EAAM0I,MAAMC,OAAOtI,IAC/B,+CAAqBgH,GACrB,6CAAmBI,GACnB,sCAAYY,EAAY,IAAME,K,aC7BhC5C,EAAQC,EAAQ,IAASC,QAEzBC,EAAO,iDAEA+C,EAAa,uCAAG,WAC3BC,EACAC,EACAC,EAEAC,GAL2B,SAAArC,EAAA,sEAQnBjB,EAAMuD,KAAKpD,EAAO,YAAa,CACnCgD,QACAC,WACAC,WAEAC,eAbuB,uCAezBlC,MAfyB,2CAAH,4DAmBboC,EAAU,uCAAG,WACxBL,EACAE,EAEAC,GAJwB,iBAAArC,EAAA,6DAMpBX,EAAQhF,aAAaC,QAAQ,OAC7BgF,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KARd,SAWXN,EAAMyD,IACjBtD,EAAO,YACP,CACEgD,QACAE,WAEAC,cAEF/C,GACAa,KApBsB,mFAAH,0DAwBVsC,EAAS,uCAAG,WAAOP,EAAOC,GAAd,eAAAnC,EAAA,sEACLjB,EAAMuD,KAAKpD,EAAO,kBAAmB,CAAEgD,QAAOC,aADzC,OACjBjC,EADiB,OAEvB7F,aAAaQ,QAAQ,MAAOqF,EAAIC,KAAKuC,KAFd,2CAAH,wDAMTC,EAAkB,uCAAG,WAAOC,EAAaC,GAApB,iBAAA7C,EAAA,6DAC5BX,EAAQhF,aAAaC,QAAQ,OAC7BgF,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAFnB,SAGnBN,EAAM+D,MACjB5D,EAAO,qBACP,CACE0D,cACAC,eAEFvD,GAT8B,mFAAH,wDAclByD,EAAO,uCAAG,8BAAA/C,EAAA,6DACjBX,EAAQhF,aAAaC,QAAQ,OAC7BgF,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAF9B,SAGRN,EAAMU,IAAIP,EAAO,YAAaI,GAHtB,mFAAH,qDC/DL,SAAS0D,EAAiB5J,GACvC,IACMC,EAAUC,cAMhB,OACE,kBAACqC,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CAAKnD,MAAO,CAAE2E,UAAW,UAAYnC,UAVvB,OAWZ,kBAACxB,EAAA,EAAD,CACEC,QAAQ,UACRC,KAAK,KACLqI,QAAM,EACNxE,KAAK,SACL/E,MAAO,CAAEG,SAAU,WAAYgC,OAAQ,SALzC,WAWa,KAAhBzC,EAAM8J,OACL,kBAACtG,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CACEK,GAAI,GACJC,GAAI,GACJzD,MAAO,CAAE2E,UAAW,UACpBnC,UA5BU,OA8BT9C,EAAM8J,QAIb,kBAACtG,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CACEK,GAAI,EACJC,GAAI,GACJzD,MAAO,CAAE2E,UAAW,UACpBnC,UAvCY,OAyCZ,kBAACxB,EAAA,EAAD,CAAQH,QAtCW,WACzBlB,EAAQyB,KAAK,wCAqC8BH,QAAQ,mBAA7C,4BCtCK,SAASwI,EAAU/J,GAAQ,IAAD,EACb4B,mBAAS,IADI,mBAChCkH,EADgC,KACzBkB,EADyB,OAEPpI,mBAAS,IAFF,mBAEhCmH,EAFgC,KAEtBkB,EAFsB,OAGbrI,mBAAS,IAHI,mBAGhCkI,EAHgC,KAGzBI,EAHyB,KAiBjCC,EAAW,uCAAG,WAAOjD,GAAP,eAAAN,EAAA,6DAElBM,EAAMkD,iBAFY,kBAKVC,EAAyBvB,EAAOC,GALtB,uBAOEsB,IAPF,OAOZC,EAPY,OAO4BvD,KAE5C9F,aAAaQ,QAAQ,WAAY6I,EAAKtB,UACtC/I,EAAQyB,KAAK,uCAVG,kDAXlBwI,EAAS,8DAWS,0DAAH,sDAkBXjK,EAAUC,cAOhB,OANAuI,qBAAU,WACJxH,aAAaC,QAAQ,QACvBjB,EAAQyB,KAAK,0CAKf,kBAAC,IAAMvB,SAAP,KACE,kBAACoK,EAAA,EAAD,CAAMC,SAAUL,GACd,kBAACI,EAAA,EAAKE,MAAN,CAAYC,UAAU,aACpB,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,QACLwF,YAAY,QACZC,SAzCgB,SAACnD,GACzBqC,EAASrC,EAAEoD,OAAOC,WA2Cd,kBAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,WACLwF,YAAY,WACZC,SA7CmB,SAACnD,GAC5BsC,EAAYtC,EAAEoD,OAAOC,WA+CjB,kBAACpB,EAAD,CAAkBE,MAAOA,M,sBClElB,SAASmB,GAAoBjL,GAG1C,OACE,kBAACuC,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CAAKnD,MAAO,CAAE2E,UAAW,UAAYnC,UALvB,OAMZ,kBAACxB,EAAA,EAAD,CACEC,QAAQ,UACRC,KAAK,KACLqI,QAAM,EACNxE,KAAK,SACL/E,MAAO,CAAEG,SAAU,WAAYgC,OAAQ,SALzC,YAWa,KAAhBzC,EAAM8J,OACL,kBAACtG,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CACEK,GAAI,GACJC,GAAI,GACJzD,MAAO,CAAE2E,UAAW,UACpBnC,UAvBU,OAyBT9C,EAAM8J,QAIb,kBAACtG,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CACEK,GAAI,EACJC,GAAI,GACJzD,MAAO,CAAE2E,UAAW,UACpBnC,UAlCY,OAoCZ,kBAACxB,EAAA,EAAD,CAAQH,QAASnB,EAAMkL,QAAS3J,QAAQ,mBAAxC,cCjCK,SAAS4J,GAAanL,GAAQ,IAAD,EAChB4B,mBAAS,IADO,mBACnCkH,EADmC,KAC5BkB,EAD4B,OAEVpI,mBAAS,IAFC,mBAEnCoH,EAFmC,KAEzBoC,EAFyB,OAINxJ,mBAAS,KAJH,mBAInCqH,EAJmC,KAIvBoC,EAJuB,OAKhBzJ,mBAAS,IALO,mBAKnCkI,EALmC,KAK5BI,EAL4B,OAMRtI,oBAAS,GAND,mBAMnC0J,EANmC,KAMxBC,EANwB,KAOpCC,EAAWC,iBAAO,MAClBC,EAAcD,iBAAO,MACrBE,EAAWF,iBAAO,MAClBxL,EAAUC,cAEV0L,EAAgB,uCAAG,WAAO1E,GAAP,SAAAN,EAAA,6DAEvBM,EAAMkD,iBAFiB,kBAIfC,EACJvB,EACAE,EAEuB,GAAvB6C,SAAS5C,IARU,uDAarBiB,EAAS,SACTtC,QAAQC,IAAI,KAAEiE,SAdO,yDAAH,sDA4ChBC,EAAgBC,sBAAW,sBAAC,4BAAApF,EAAA,6DALhC4E,EAASS,QAAQjB,MAAQ,GACzBU,EAAYO,QAAQjB,MAAQ,GAC5BW,EAASM,QAAQjB,MAAQ,EAGO,SAEdX,IAFc,OAE5BC,EAF4B,OAEYvD,KAC5CiD,EAASM,EAAKxB,OACdsC,EAAYd,EAAKtB,UACjBqC,EAAcf,EAAKrB,WAAa,IALA,2CAM/B,IAUH,OAJAR,qBAAU,WACRsD,MACC,CAACA,IAGF,kBAAC,IAAM5L,SAAP,KACE,kBAACoK,EAAA,EAAD,CAAMC,SAAUoB,GACd,kBAACrB,EAAA,EAAKE,MAAN,CAAYC,UAAU,aACpB,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,QACL6G,IAAKV,EACLX,YAAa/B,EACbgC,SAnDgB,SAACnD,GACF,KAAnBA,EAAEoD,OAAOC,OAAce,IAC3B/B,EAASrC,EAAEoD,OAAOC,WAoDd,kBAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,OACL6G,IAAKR,EACLb,YAAa7B,EACb8B,SAvDmB,SAACnD,GACL,KAAnBA,EAAEoD,OAAOC,OAAce,IAC3BX,EAAYzD,EAAEoD,OAAOC,WAiEjB,kBAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,wBACpB,kBAACyB,EAAA,EAAD,CAASpB,OAAQY,EAASM,QAASG,KAAMd,EAAWe,UAAU,UAC3D,SAACrM,GAAD,OACC,kBAACsM,EAAA,EAAD,eAASjM,GAAG,iBAAoBL,GAAhC,6CAKJ,kBAACuK,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,SACL6G,IAAKP,EACLY,IAAK,EACLvB,MAAO/B,EACP6B,SAvEqB,SAACnD,GACP,KAAnBA,EAAEoD,OAAOC,OAAce,IAC3BV,EAAc1D,EAAEoD,OAAOC,QAsEfwB,YAAa,kBAAMjB,GAAcD,IACjCmB,WAAY,kBAAMlB,GAAcD,OAGpC,yBAAKhL,MAAO,CAAE2E,UAAW,UAAYnC,UAAW,OAC9C,kBAACxB,EAAA,EAAD,CAAQH,QA1De,WAC7BlB,EAAQyB,KAAK,+CAyDkCH,QAAQ,kBAAjD,oBAIF,kBAAC0J,GAAD,CAAqBnB,MAAOA,EAAOoB,QAASa,MClIrC,SAASW,GAAkB1M,GAGxC,OACE,kBAACuC,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CAAKnD,MAAO,CAAE2E,UAAW,UAAYnC,UALvB,OAMZ,kBAACxB,EAAA,EAAD,CACEC,QAAQ,UACRC,KAAK,KACLqI,QAAM,EACNxE,KAAK,SACL/E,MAAO,CAAEG,SAAU,WAAYgC,OAAQ,SALzC,qBAWa,KAAhBzC,EAAM8J,OACL,kBAACtG,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CACEK,GAAI,GACJC,GAAI,GACJzD,MAAO,CAAE2E,UAAW,UACpBnC,UAvBU,OAyBT9C,EAAM8J,QAIb,kBAACtG,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CACEK,GAAI,EACJC,GAAI,GACJzD,MAAO,CAAE2E,UAAW,UACpBnC,UAlCY,OAoCZ,kBAACxB,EAAA,EAAD,CAAQH,QAASnB,EAAM2M,eAAgBpL,QAAQ,mBAA/C,uBClCK,SAASqL,GAAmB5M,GAAQ,IAAD,EACV4B,mBAAS,IADC,mBACzC4H,EADyC,KAC5BqD,EAD4B,OAEhBjL,mBAAS,IAFO,mBAEzCkL,EAFyC,KAE/BC,EAF+B,OAGhBnL,mBAAS,IAHO,mBAGzCoL,EAHyC,KAG/BC,EAH+B,OAItBrL,mBAAS,IAJa,mBAIzCkI,EAJyC,KAIlCI,EAJkC,KAK1CjK,EAAUC,cAEVgN,EAAoB,uCAAG,WAAOhG,GAAP,SAAAN,EAAA,yDAE3BM,EAAMkD,iBAFqB,SAIrB0C,IAAaE,EAJQ,sBAKvBG,YAAW,WACTjD,EAAS,MACR,KACGkD,MAAM,6BARW,YAUrBJ,EAASK,OAAS,GAVG,sBAWvBF,YAAW,WACTjD,EAAS,MACR,KACGkD,MAAM,sCAdW,wBAgBnB/C,EAAkCb,EAAasD,GAhB5B,8DAoBrB,KAAEhB,QAAQwB,SAAS,OApBE,wBAqBvBpD,EAAS,iCArBc,2BAwBzBA,EAAS,KAAE4B,SAxBc,0DAAH,sDA4C1B,OACE,kBAAC,IAAM3L,SAAP,KACE,kBAACoK,EAAA,EAAD,CAAMC,SAAU0C,GACd,kBAAC3C,EAAA,EAAKE,MAAN,CAAYC,UAAU,mBACpB,kBAACH,EAAA,EAAKI,MAAN,qBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,OACLwF,YAAY,qBACZC,SAxBsB,SAACnD,GAC/BkF,EAAelF,EAAEoD,OAAOC,WA0BpB,kBAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBACpB,kBAACH,EAAA,EAAKI,MAAN,qBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,OACLwF,YAAY,qBACZC,SA5BmB,SAACnD,GAC5BoF,EAAYpF,EAAEoD,OAAOC,WA8BjB,kBAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,OACLwF,YAAY,2BACZC,SAhCmB,SAACnD,GAC5BsF,EAAYtF,EAAEoD,OAAOC,WAkCjB,kBAAC0B,GAAD,CAAmB5C,MAAOA,EAAO6C,eA/Bf,WACtB1M,EAAQyB,KAAK,8CClDF,SAAS6L,GAAkBvN,GACxC,IAAMC,EAAUC,cAMhB,OACE,kBAACqC,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CAAKnD,MAAO,CAAE2E,UAAW,UAAYnC,UARvB,OASZ,kBAACxB,EAAA,EAAD,CACEC,QAAQ,UACRC,KAAK,KACLqI,QAAM,EACNxE,KAAK,SACL/E,MAAO,CAAEG,SAAU,WAAYgC,OAAQ,SALzC,YAWa,KAAhBzC,EAAM8J,OACL,kBAACtG,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CACEK,GAAI,GACJC,GAAI,GACJzD,MAAO,CAAE2E,UAAW,UACpBnC,UA1BU,OA4BT9C,EAAM8J,QAIb,kBAACtG,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CACEK,GAAI,EACJC,GAAI,GACJzD,MAAO,CAAE2E,UAAW,UACpBnC,UArCY,OAuCZ,kBAACxB,EAAA,EAAD,CAAQH,QAtCI,WAClBlB,EAAQyB,KAAK,uCAqCyBH,QAAQ,mBAAxC,aCtCK,SAASiM,GAAWxN,GAAQ,IAAD,EACd4B,mBAAS,IADK,mBACjCkH,EADiC,KAC1BkB,EAD0B,OAERpI,mBAAS,IAFD,mBAEjCmH,EAFiC,KAEvBkB,EAFuB,OAGRrI,mBAAS,IAHD,mBAGjCoH,EAHiC,KAGvBoC,EAHuB,OAKJxJ,mBAAS,KALL,mBAKjCqH,EALiC,KAKrBoC,EALqB,OAMdzJ,mBAAS,IANK,mBAMjCkI,EANiC,KAM1BI,EAN0B,KAQlCjK,EAAUC,cAIVuN,EAAY,uCAAG,WAAOvG,GAAP,SAAAN,EAAA,6DAEnBM,EAAMkD,iBAFa,kBAIXC,EACJvB,EACAC,EACAC,EAEuB,GAAvB6C,SAAS5C,IATM,OAFnBhJ,EAAQyB,KAAK,sCAEM,gDAcjBwI,EAAS,SACTtC,QAAQC,IAAI,KAAEiE,SAfG,yDAAH,sDAuClB,OACE,kBAAC,IAAM3L,SAAP,KACE,kBAACoK,EAAA,EAAD,CAAMC,SAAUiD,GACd,kBAAClD,EAAA,EAAKE,MAAN,CAAYC,UAAU,aACpB,kBAACH,EAAA,EAAKI,MAAN,cACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,QACLwF,YAAY,QACZC,SA5BgB,SAACnD,GACzBqC,EAASrC,EAAEoD,OAAOC,WA8Bd,kBAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,WACLwF,YAAY,WACZC,SAhCmB,SAACnD,GAC5BsC,EAAYtC,EAAEoD,OAAOC,WAkCjB,kBAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBACpB,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,OACLwF,YAAY,WACZC,SApCmB,SAACnD,GAC5ByD,EAAYzD,EAAEoD,OAAOC,WA+CjB,kBAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,wBACpB,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEvF,KAAK,SACLkH,IAAK,EACL1B,YAAY,yCACZC,SA9CqB,SAACnD,GAC9B0D,EAAc1D,EAAEoD,OAAOC,WAgDnB,kBAACuC,GAAD,CAAmBzD,MAAOA,M,aCvG5BnE,GAAQC,EAAQ,IAASC,QAEzBC,GAAO,gEAGA4H,GAAa,uCAAG,WAC3BrG,EACAF,EACAC,GAH2B,iBAAAR,EAAA,6DAKvBX,EAAQhF,aAAaC,QAAQ,OAC7BgF,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KANxB,SAOdN,GAAMuD,KACjBpD,GACA,CACEuB,cACAF,gBACAC,kBAEFlB,GAdyB,mFAAH,0DAmBbyH,GAAgB,uCAAG,WAAMC,GAAN,iBAAAhH,EAAA,6DAC1BX,EAAQhF,aAAaC,QAAQ,OAC7BgF,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAFrB,SAGjBN,GAAMkI,OACjB/H,GACE,kBACA8H,EAAczG,cACd,mBACAyG,EAAcxG,eAChBlB,GAT4B,mFAAH,sDAchB4H,GAAc,uCAAG,8BAAAlH,EAAA,6DACxBX,EAAQhF,aAAaC,QAAQ,OAC7BgF,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAFvB,SAGfN,GAAMU,IAAIP,GAAMI,GAHD,mFAAH,qD,UCoLZ6H,G,kDA/Mb,WAAY/N,GAAQ,IAAD,uBACjB,cAAMA,IAPRwG,MAAQ,CACNwH,WAAY,GACZC,MAAM,EACNC,eAAgB,IAGC,EAYnBC,uBAAyB,WAEvB,IADA,IAAIC,EAAQ,GACHC,EAAI,GAAIA,GAAK,GAAIA,GAAK,GAC7BD,EAAM1M,KAAK2M,GAEb,OAAOD,GAjBU,EAoBnBE,qBApBmB,uCAoBI,WAAOC,GAAP,eAAA3H,EAAA,yDAErB4H,IADIA,EAAc,EAAKhI,MAAMyH,MADR,oBAQuB,cAAxC,EAAKzH,MAAMwH,WAAW7G,eACmB,eAAzC,EAAKX,MAAMwH,WAAW5G,gBACgB,gBAAtC,EAAKZ,MAAMwH,WAAW3G,cAEtBmH,GAAeA,EAEf,EAAKxO,MAAMyO,aAAaF,EAAKC,GAC7B5G,QAAQC,IAAI,mCAET2G,EAjBc,oBAmB6B,cAA5C,EAAKhI,MAAM0H,eAAe/G,eACmB,eAA7C,EAAKX,MAAM0H,eAAe9G,gBACgB,gBAA1C,EAAKZ,MAAM0H,eAAe7G,YArBX,iCAwBTqH,GACJC,WAAW,EAAKnI,MAAMwH,WAAW3G,aAAe,IAChD,EAAKb,MAAMwH,WAAW7G,cACtB,EAAKX,MAAMwH,WAAW5G,gBA3BT,kCAgCb,EAAKZ,MAAMwH,WAAW7G,gBACpB,EAAKX,MAAM0H,eAAe/G,eAC5B,EAAKX,MAAMwH,WAAW5G,iBACpB,EAAKZ,MAAM0H,eAAe9G,eAnCf,kCAuCPsH,GAAsC,CAC1CvH,cAAe,EAAKX,MAAM0H,eAAe/G,cACzCC,eAAgB,EAAKZ,MAAM0H,eAAe9G,iBAzC/B,yBA6CPsH,GACJC,WAAW,EAAKnI,MAAMwH,WAAW3G,aAAe,IAChD,EAAKb,MAAMwH,WAAW7G,cACtB,EAAKX,MAAMwH,WAAW5G,gBAhDX,mCAqDX,EAAKZ,MAAMwH,WAAW3G,cACtB,EAAKb,MAAM0H,eAAe7G,YAtDf,kCAyDLqH,GACJC,WAAW,EAAKnI,MAAMwH,WAAW3G,aAAe,IAChD,EAAKb,MAAMwH,WAAW7G,cACtB,EAAKX,MAAMwH,WAAW5G,gBA5Db,QAmEjB,EAAKpH,MAAMkL,UACXtD,QAAQC,IAAI,oBApEK,QAuErB,EAAK7H,MAAMyO,aAAaF,EAAKC,GAC7B,EAAKxH,SAAS,CAAEiH,KAAMO,IAxED,4CApBJ,wDA+FnBI,wBAA0B,SAACvJ,EAAMkJ,EAAKrH,GACpC,IAAI2H,EAAsB,EAAKrI,MAAMwH,WACxB,SAAT3I,EACFwJ,EAAoB1H,cAAgBD,EAAM6D,OAAOC,MAC/B,UAAT3F,EACTwJ,EAAoBzH,eAAiBF,EAAM6D,OAAOC,MAChC,SAAT3F,IACTwJ,EAAoBxH,YAAcH,EAAM6D,OAAOC,OAEjD,EAAKhE,SAAS,CAAEgH,WAAYa,KAxGX,EA2GnBC,kBAAoB,aA3GD,EA6GnBC,gBAAkB,WAChB,MAA6C,gBAAtC,EAAK/O,MAAMgO,WAAW3G,YACzB,cACoC,IAApC,EAAKrH,MAAMgO,WAAW3G,aA9G1B,IAAM6G,EAAiBc,OAAOC,OAAO,GAAI,EAAKjP,MAAMgO,YAC9CA,EAAagB,OAAOC,OAAO,GAAI,EAAKjP,MAAMgO,YAC1CC,EAAO,EAAKjO,MAAMkP,QAJP,OAKjB,EAAK1I,MAAQ,CACXyH,OACAD,aACAE,kBARe,E,qDAmHT,IAAD,OACP,OACE,kBAAC,IAAM/N,SAAP,KACE,kBAAC6D,EAAA,EAAD,KACE,kBAACuG,EAAA,EAAK/G,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKM,GAAI,GACP,kBAACzC,EAAA,EAAD,CACEC,QAAQ,iBACRJ,QAAS,kBAAM,EAAKnB,MAAMmP,mBAAmB,EAAKnP,MAAM+H,SAF1D,MAOF,kBAACtE,EAAA,EAAD,CAAKM,GAAI,KACP,kBAACzC,EAAA,EAAD,CACEjB,GAAI,cAAgBqH,KAAK1H,MAAM+H,MAC/BxG,QAAQ,eACRJ,QAAS,kBAAM,EAAKmN,qBAAqB,EAAKtO,MAAM+H,UAE/B,IAApBL,KAAKlB,MAAMyH,KAAiB,OAAS,SAG1C,kBAACxK,EAAA,EAAD,KACE,kBAAC8G,EAAA,EAAKK,QAAN,CACEwE,aAAc1H,KAAK1H,MAAMgO,WAAW7G,cACpCkI,UAAW3H,KAAKlB,MAAMyH,KACtBqB,GAAG,SACHxE,SAAU,SAACnD,GAAD,OACR,EAAKiH,wBAAwB,OAAQ,EAAK5O,MAAM+H,MAAOJ,KAGzD,6CACCD,KAAK1H,MAAMuP,UAAUtI,KAAI,SAACuI,GACzB,OACE,4BAAQxH,IAAK,UAAYwH,EAAMxE,MAAOwE,GACnCA,QAMX,kBAAC/L,EAAA,EAAD,CAAKnD,MAAO,CAAE2E,UAAW,UAAYlB,GAAI,GACtC,KAEH,kBAACN,EAAA,EAAD,KACE,kBAAC8G,EAAA,EAAKK,QAAN,CACEyE,UAAW3H,KAAKlB,MAAMyH,KACtBqB,GAAG,SACHxE,SAAU,SAACnD,GAAD,OACR,EAAKiH,wBAAwB,QAAS,EAAK5O,MAAM+H,MAAOJ,IAE1DyH,aAAc1H,KAAK1H,MAAMgO,WAAW5G,gBAEpC,8CACCM,KAAK1H,MAAMyP,WAAWxI,KAAI,SAACuI,GAC1B,OACE,4BAAQxH,IAAK,UAAYwH,EAAMxE,MAAOwE,GACnCA,QAMX,kBAAC/L,EAAA,EAAD,KACE,kBAAC8G,EAAA,EAAKK,QAAN,CACEwE,aAAc1H,KAAKqH,kBACnBM,UAAW3H,KAAKlB,MAAMyH,KACtBqB,GAAG,SACHxE,SAAU,SAACnD,GAAD,OACR,EAAKiH,wBAAwB,OAAQ,EAAK5O,MAAM+H,MAAOJ,KAGzD,4BAAQK,IAAK,aAAcgD,MAAO,eAAlC,eAGCtD,KAAKyG,yBAAyBlH,KAAI,SAACyI,GAClC,IAAIC,EAAM9D,SAAS6D,GACnB,OACE,4BAAQ1H,IAAK,UAAY2H,EAAK3E,MAAO2E,GAClCA,EAAM,iB,GAzMJ1H,aC6GV2H,G,4MA3GbpJ,MAAQ,CACNqJ,gBAAiB,GACjBX,QAAS,GACTK,UAAW,CAAC,MAAO,MAAO,MAAO,QACjCE,WAAY,CAAC,MAAO,MAAO,MAAO,S,EAGpCK,yBAA2B,WACzB,EAAK9I,SAAS,CACZ+I,cAAe,EAAKvJ,MAAMqJ,gBAAgBnO,KAAK,CAC7C2F,YAAa,cACbF,cAAe,YACfC,eAAgB,eAElB8H,QAAQ,GAAD,oBAAM,EAAK1I,MAAM0I,SAAjB,EAA0B,O,EAIrCc,uB,uCAAyB,WAAOzB,GAAP,eAAA3H,EAAA,4DAE6B,cAAlD,EAAKJ,MAAMqJ,gBAAgBtB,GAAKpH,eACmB,eAAnD,EAAKX,MAAMqJ,gBAAgBtB,GAAKnH,gBACgB,gBAAhD,EAAKZ,MAAMqJ,gBAAgBtB,GAAKlH,aAEhC,EAAK4I,cACHpB,EAAsB,EAAKrI,MAAMqJ,gBAPd,SAQjBnB,GAAsC,CAC1CvH,cAAe0H,EAAoBN,GAAKpH,cACxCC,eAAgByH,EAAoBN,GAAKnH,iBAVpB,OAavB,EAAK6I,cAbkB,2C,wDAgBzBA,Y,sBAAc,gCAAArJ,EAAA,sEACgB8H,KADhB,OAGZ,IAFImB,EADQ,OAERX,EAAU,GACLb,EAAI,EAAGA,EAAIwB,EAAgB9I,KAAKsG,OAAQgB,IAC/Ca,EAAQxN,MAAK,GAEf,EAAKsF,SAAS,CAAE6I,gBAAiBA,EAAgB9I,KAAMmI,YAN3C,2C,EASdgB,oBAAsB,SAAC3B,EAAK4B,GAC1B,IAAIC,EAAO,EAAK5J,MAAM0I,QACtBkB,EAAK7B,GAAO4B,EACZ,EAAKnJ,SAAS,CAAEkI,QAASkB,K,EAG3BtB,kB,sBAAoB,sBAAAlI,EAAA,sEACZ,EAAKqJ,cADO,2C,uDAIV,IACJI,EADG,OAEP,IACEA,EAAc3I,KAAKlB,MAAMqJ,gBAAgB5I,KAAI,SAAC+G,EAAYO,GACxD,OACE,kBAAC,GAAD,CACEvG,IAAK,cAAgBuG,EACrBxG,MAAOwG,EACPP,WAAYA,EACZkB,QAAS,EAAK1I,MAAM0I,QAAQX,GAC5BY,mBAAoB,EAAKa,uBACzBT,UAAW,EAAK/I,MAAM+I,UACtBE,WAAY,EAAKjJ,MAAMiJ,WACvBvE,QAAS,EAAK+E,YACdxB,aAAc,EAAKyB,yBAIzB,MAAOpG,GACPuG,EAAc,KAGhB,OACE,kBAAC,IAAMlQ,SAAP,KACE,kCACM,IACHc,aAAaC,QAAQ,YAClBD,aAAaC,QAAQ,YACrB,SAEN,iFACA,6BACA,qGAGA,6BACA,6BACA,kBAACqJ,EAAA,EAAD,CAAMC,SAAU9C,KAAK4I,mBAClBD,EACD,6BACA,kBAACE,GAAA,EAAD,CAAezN,UAAU,0BACvB,kBAACxB,EAAA,EAAD,CACEC,QAAQ,kBACRJ,QAASuG,KAAKoI,0BAFhB,6B,GA/Fc7H,aCDX,SAASuI,GAAKxQ,GAC3B,IAAMC,EAAUC,cAShB,OARAuI,qBAAU,WACJxH,aAAaC,QAAQ,OACvBjB,EAAQyB,KAAK,uCAEbzB,EAAQyB,KAAK,yCAIV,kBAAC,IAAMvB,SAAP,MCCM,SAASsQ,GAAIzQ,GAC1B,IAAM0Q,EAAM,gCA6IZ,OAzII,kBAAC,IAAD,KACE,6BACE,kBAAC/O,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmE,KAAM4K,EAAM,aAAcC,UAAWzI,IAE5C,kBAAC,IAAD,CAAOpC,KAAM4K,EAAM,SACjB,kBAACnO,EAAA,EAAD,CAAWgB,OAAK,EAACT,UAAU,gBACzB,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEnD,MAAO,CACLoD,OAAQ,iBACRC,QAAS,OACTlD,SAAU,WACVF,IAAK,MACLkC,OAAQ,OACRmB,UAAW,mBACXC,aAAc,MAEhBC,GAAI,EACJC,GAAI,IAEJ,kBAACgG,EAAD,UAKR,kBAAC,IAAD,CAAOjE,KAAM4K,EAAM,UACjB,yBACEpQ,MAAO,CACLG,SAAU,WACV+B,SAAU,QACVC,OAAQ,QAEVK,UAAU,gBAEV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOgD,KAAM4K,EAAM,UACjB,kBAACnO,EAAA,EAAD,CAAWgB,OAAK,EAACT,UAAU,gBACzB,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEnD,MAAO,CACLoD,OAAQ,iBACRC,QAAS,OACTlD,SAAU,WACVF,IAAK,MACLkC,OAAQ,OACRmB,UAAW,mBACXC,aAAc,MAEhBC,GAAI,EACJC,GAAI,IAEJ,kBAACyJ,GAAD,UAKR,kBAAC,IAAD,CAAO1H,KAAM4K,EAAM,iBACjB,kBAACnO,EAAA,EAAD,CAAWgB,OAAK,EAACT,UAAU,gBACzB,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEnD,MAAO,CACLoD,OAAQ,iBACRC,QAAS,OACTlD,SAAU,WACVF,IAAK,MACLkC,OAAQ,OACRmB,UAAW,mBACXC,aAAc,MAEhBC,GAAI,EACJC,GAAI,IAEJ,kBAAC6I,GAAD,UAMR,kBAAC,IAAD,CAAO9G,KAAM4K,EAAM,YACjB,kBAACnO,EAAA,EAAD,CAAWgB,OAAK,EAACT,UAAU,gBACzB,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEnD,MAAO,CACLoD,OAAQ,iBACRC,QAAS,OACTlD,SAAU,WACVF,IAAK,MACLkC,OAAQ,OACRmB,UAAW,mBACXC,aAAc,MAEhBC,GAAI,EACJC,GAAI,IAEJ,kBAACoH,GAAD,UAKR,kBAAC,IAAD,CAAOrF,KAAM4K,EAAM,eACjB,kBAACnO,EAAA,EAAD,CAAWgB,OAAK,EAACT,UAAU,gBACzB,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEnD,MAAO,CACLoD,OAAQ,iBACRC,QAAS,OACTlD,SAAU,WACVF,IAAK,MACLkC,OAAQ,OACRmB,UAAW,mBACXC,aAAc,MAEhBC,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,UAKR,kBAAC,IAAD,CAAO+B,KAAM4K,EAAM,SACjB,kBAACpN,EAAD,OAEF,kBAAC,IAAD,CAAOwC,KAAM4K,EAAM,IACjB,kBAACF,GAAD,UCzIMI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrI,MACvB,2DCZNsI,IAASC,OAAO,kBAACR,GAAD,MAASS,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.323e7579.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ListGroup, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function AccountWindow(props) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListGroup\r\n        id=\"AccountWindow\"\r\n        style={{\r\n          top: \"80px\",\r\n          width: \"18%\",\r\n          position: \"absolute\",\r\n          right: \"3px\",\r\n          display: props.visible ? \"block\" : \"none\",\r\n          zIndex: \"1\",\r\n        }}\r\n      >\r\n        <ListGroup.Item\r\n          style={{\r\n            backgroundColor: \"#343a40\",\r\n            color: \"rgba(255,255,255,.5)\",\r\n          }}\r\n        >\r\n          Hi{\" \"}\r\n          {localStorage.getItem(\"username\")\r\n            ? localStorage.getItem(\"username\")\r\n            : \"Guest\"}\r\n        </ListGroup.Item>\r\n        <ListGroup.Item\r\n          style={{\r\n            backgroundColor: \"#343a40\",\r\n            color: \"rgba(255,255,255,.5)\",\r\n          }}\r\n        >\r\n          <Link\r\n            onClick={props.onAccountWindowChange}\r\n            to=\"/coin-trend-notifier-website/preferences\"\r\n          >\r\n            My Preferences\r\n          </Link>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item\r\n          style={{\r\n            backgroundColor: \"#343a40\",\r\n            color: \"rgba(255,255,255,.5)\",\r\n          }}\r\n        >\r\n          <Link\r\n            onClick={props.onAccountWindowChange}\r\n            to=\"/coin-trend-notifier-website/settings\"\r\n          >\r\n            Account Settings\r\n          </Link>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item\r\n          style={{\r\n            backgroundColor: \"#343a40\",\r\n            color: \"rgba(255,255,255,.5)\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outline-danger\"\r\n            size=\"sm\"\r\n            style={{ color: \"rgba(255,255,255,.5)\" }}\r\n            onClick={() => {\r\n              localStorage.setItem(\"jwt\", \"\");\r\n              props.onAccountWindowChange();\r\n              history.push(\"/coin-trend-notifier-website/home\");\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountWindow from \"./AccountWindow\";\r\n\r\nexport default function HomepageNavbar(props) {\r\n  const [accountWindow, setAccountWindow] = useState(false);\r\n\r\n  const handleAccountWindowChange = () => {\r\n    setAccountWindow(!accountWindow);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const changepage = (pageName) => {\r\n    history.push(`/coin-trend-notifier-website/${pageName}`);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        style={{ marginBottom: \"30px\", position: \"relative\" }}\r\n      >\r\n        <Container style={{ maxWidth: \"1020px\", margin: \"auto\" }}>\r\n          <Navbar.Brand href=\"#home\">\r\n            <img\r\n              src={logo}\r\n              width=\"90px\"\r\n              className=\"d-inline-block align-top\"\r\n              alt=\"logo\"\r\n              style={{ marginLeft: \"15px\" }}\r\n            />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                onClick={() => {\r\n                  if (accountWindow) handleAccountWindowChange();\r\n                  changepage(\"\");\r\n                }}\r\n              >\r\n                Home\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                onClick={() => {\r\n                  if (accountWindow) handleAccountWindowChange();\r\n                  changepage(\"about\");\r\n                }}\r\n              >\r\n                About\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav className=\"mr-sm-2\" variant=\"dark\">\r\n              <Nav.Link\r\n                style={{ color: \"rgba(255,255,255,.5)\" }}\r\n                onClick={() => handleAccountWindowChange()}\r\n              >\r\n                Account\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n        <AccountWindow\r\n          visible={accountWindow}\r\n          onAccountWindowChange={handleAccountWindowChange}\r\n        />\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function AboutPage(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Container fluid className=\"HomepageBody\">\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              border: \"1px solid gray\",\r\n              padding: \"50px\",\r\n              position: \"relative\",\r\n              top: \"10%\",\r\n              margin: \"auto\",\r\n              boxShadow: \"0px 0px 8px -2px\",\r\n              borderRadius: \"1%\",\r\n            }}\r\n            md={5}\r\n            xs={10}\r\n          >\r\n            <Card className=\"text-center\">\r\n              <Card.Header>About Us</Card.Header>\r\n              <Card.Body>\r\n                <Card.Title>Coin Trend Notifier</Card.Title>\r\n                <Card.Text>\r\n                  Our services are for crypto traders who seek good calculated\r\n                  information to help them trade the cryptcurrency market.\r\n                </Card.Text>\r\n                <Card.Title>How we do it</Card.Title>\r\n                <Card.Text>\r\n                  We are using an algorithm we developed along with NLP (Natural\r\n                  Language Processing) to analyze tweets from Twitter.\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  We are all these information and connect in a way that gives\r\n                  the exact calculated weight to each parameter.\r\n                </Card.Text>\r\n                <Card.Title>How much does it cost</Card.Title>\r\n                <Card.Text>\r\n                  After many meetings in the hot air of Tel Aviv Israel we\r\n                  decided to give this service to you with an amazing price of\r\n                  1,000,000 nothing =).\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer className=\"text-muted\">\r\n                By Aviel Vaknin and Yarden Shoham\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Arrow = ({ color, ...rest }) => {\r\n  var angle = 45;\r\n  const compAngle = color === \"green\" ? angle : angle + 90;\r\n  return (\r\n    <FontAwesomeIcon\r\n      icon={faLongArrowAltUp}\r\n      size=\"2x\"\r\n      style={{\r\n        color: color,\r\n        transform: \"rotate(\" + compAngle + \"deg)\",\r\n        marginLeft:\r\n          (color === \"green\" ? angle * 2 : (90 - angle) * 2) / 90 + \"rem\",\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Badge, Card, Button } from \"react-bootstrap\";\r\nimport Arrow from \"./Arrow\";\r\n\r\nexport default function SingleTrendContainer(props) {\r\n  const verticalCenterStyle = {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  };\r\n  const verticalCenterMarginzStyle = {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"0px\",\r\n    color: \"lightslategrey\",\r\n  };\r\n  const borderStyle = {\r\n    padding: \"5px\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <Container fluid=\"true\" style={borderStyle}>\r\n          <Row noGutters=\"true\">\r\n            <Col xs={1}>\r\n              <h3 style={verticalCenterMarginzStyle}>{props.indx}</h3>\r\n            </Col>\r\n            <Col>\r\n              <h3 style={verticalCenterStyle}>\r\n                <Badge variant={props.type === \"up\" ? \"success\" : \"danger\"}>\r\n                  {props.base + \"/\" + props.quote}\r\n                </Badge>\r\n              </h3>\r\n            </Col>\r\n            <Col\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <h3>\r\n                {props.type === \"up\" ? (\r\n                  <Arrow color=\"green\" />\r\n                ) : (\r\n                  <Arrow color=\"red\" />\r\n                )}\r\n              </h3>\r\n            </Col>\r\n            <Col>\r\n              <h3 style={verticalCenterStyle}>\r\n                <Badge variant={props.type === \"up\" ? \"success\" : \"danger\"}>\r\n                  {Math.abs(props.chance) + \"%\"}\r\n                </Badge>\r\n              </h3>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                style={verticalCenterStyle}\r\n                variant=\"info\"\r\n                href={`/coin-trend-notifier-website/trends/${props.id}`}\r\n              >\r\n                Click for more\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","const axios = require(\"axios\").default;\r\n\r\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\r\n\r\n// Get Events' History\r\nexport const getEvents = (amount) => {\r\n  let token = localStorage.getItem(\"jwt\");\r\n  let config = { headers: { Authorization: `Bearer ${token}` } };\r\n  return axios.get(path + `api/events?amount=${amount}`, config);\r\n};\r\n\r\n// Get all Event History By ID\r\nexport const getEventByID = (id) => {\r\n  return axios.get(path + `api/events/${id}`);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport SingleTrendContainer from \"./SingleTrendContainer\";\r\nimport * as eventConnector from \"../../connectors/eventConnector\";\r\n\r\nclass TrendsContainer extends Component {\r\n  state = {\r\n    allTrends: [],\r\n    amount: 15, // default\r\n  };\r\n  verticalCenterStyle = {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    color: \"lightslategrey\",\r\n  };\r\n  borderStyle = {\r\n    padding: \"5px\",\r\n    textAlign: \"center\",\r\n  };\r\n\r\n  handleAllTrends = async () => {\r\n    let { data: res } = await eventConnector.getEvents(this.state.amount);\r\n    //need to load the allTrends in the state from the res\r\n    this.setState({\r\n      allTrends: res.map((event) => {\r\n        return {\r\n          base: event.baseAssetName,\r\n          quote: event.quoteAssetName,\r\n          type: event.probability > 0 ? \"up\" : \"down\",\r\n          chance: Math.round(event.probability * 100),\r\n          url: \"/coin-trend-notifier-website/trends/\" + event._id,\r\n          firedAt: event.firedAt,\r\n          id: event._id,\r\n        };\r\n      }),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.handleAllTrends();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <Container fluid=\"true\" style={this.borderStyle}>\r\n            <Row noGutters=\"true\">\r\n              <Col xs={1}>\r\n                <h4 style={this.verticalCenterStyle}>#</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 style={this.verticalCenterStyle}>Asset</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 style={this.verticalCenterStyle}>Expected to</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 style={this.verticalCenterStyle}>Probability</h4>\r\n              </Col>\r\n              <Col>\r\n                <h4 style={this.verticalCenterStyle}>More info</h4>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Card>\r\n        {this.state.allTrends.map((trend, index) => {\r\n          return (\r\n            <SingleTrendContainer\r\n              indx={index + 1}\r\n              key={\"STD\" + index}\r\n              base={trend.base}\r\n              quote={trend.quote}\r\n              type={trend.type}\r\n              chance={trend.chance}\r\n              url={trend.url}\r\n              firedAt={trend.firedAt}\r\n              id={trend.id}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrendsContainer;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as eventConnector from \"../../connectors/eventConnector\";\r\n\r\nexport default function Trend(props) {\r\n  const [probability, setProbability] = useState(\"\");\r\n  const [firedAt, setFiredAt] = useState(\"\");\r\n  const [baseAsset, setBaseAsset] = useState(\"\");\r\n  const [quoteAsset, setQuoteAsset] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const { data: res } = await eventConnector.getEventByID(\r\n        props.match.params.id\r\n      );\r\n      setProbability(res.probability);\r\n      setFiredAt(res.firedAt);\r\n      setBaseAsset(res.baseAssetName);\r\n      setQuoteAsset(res.quoteAssetName);\r\n    }\r\n    fetchData();\r\n  }, [props]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <h1>ID is: {props.match.params.id}</h1>\r\n        <h1>Probability is: {probability}</h1>\r\n        <h1>Timestamp is: {firedAt}</h1>\r\n        <h1>Asset: {baseAsset + \"/\" + quoteAsset}</h1>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","const axios = require(\"axios\").default;\r\n\r\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\r\n\r\nexport const createNewUser = async (\r\n  email,\r\n  password,\r\n  username,\r\n  // phoneNumber,\r\n  alertLimit\r\n) => {\r\n  return (\r\n    await axios.post(path + \"api/users\", {\r\n      email,\r\n      password,\r\n      username,\r\n      // phoneNumber,\r\n      alertLimit,\r\n    })\r\n  ).data;\r\n};\r\n\r\n// Update a user\r\nexport const updateUser = async (\r\n  email,\r\n  username,\r\n  // phoneNumber,\r\n  alertLimit\r\n) => {\r\n  let token = localStorage.getItem(\"jwt\");\r\n  let config = {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n\r\n  return await axios.put(\r\n    path + \"api/users\",\r\n    {\r\n      email,\r\n      username,\r\n      // phoneNumber,\r\n      alertLimit,\r\n    },\r\n    config\r\n  ).data;\r\n};\r\n\r\n// Login a user\r\nexport const loginUser = async (email, password) => {\r\n  const res = await axios.post(path + \"api/users/login\", { email, password });\r\n  localStorage.setItem(\"jwt\", res.data.jwt);\r\n};\r\n\r\n// Change user password\r\nexport const changeUserPassword = async (oldPassword, newPassword) => {\r\n  let token = localStorage.getItem(\"jwt\");\r\n  let config = { headers: { Authorization: `Bearer ${token}` } };\r\n  return await axios.patch(\r\n    path + \"api/users/password\",\r\n    {\r\n      oldPassword,\r\n      newPassword,\r\n    },\r\n    config\r\n  );\r\n};\r\n\r\n// Get user details\r\nexport const getUser = async () => {\r\n  let token = localStorage.getItem(\"jwt\");\r\n  let config = { headers: { Authorization: `Bearer ${token}` } };\r\n  return await axios.get(path + \"api/users\", config);\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function LoginFormButtons(props) {\r\n  const styleMargin = \"m-3\";\r\n  const history = useHistory();\r\n\r\n  const changePageToSignup = () => {\r\n    history.push(\"/coin-trend-notifier-website/signup\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\r\n          <Button\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            active\r\n            type=\"submit\"\r\n            style={{ position: \"relative\", margin: \"auto\" }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {props.error !== \"\" && (\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col\r\n            md={11}\r\n            xs={10}\r\n            style={{ textAlign: \"center\" }}\r\n            className={styleMargin}\r\n          >\r\n            {props.error}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col\r\n          md={5}\r\n          xs={10}\r\n          style={{ textAlign: \"center\" }}\r\n          className={styleMargin}\r\n        >\r\n          <Button onClick={changePageToSignup} variant=\"outline-primary\">\r\n            Click here for Signup\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport * as usersConnector from \"../../connectors/usersConnector\";\r\nimport LoginFormButtons from \"./LoginFormButtons\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function LoginForm(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleErrorChange = () => {\r\n    setError(\"User does not exist or Password does not match. Try again.\");\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleLogin = async (event) => {\r\n    // prevent page from refreshing\r\n    event.preventDefault();\r\n    try {\r\n      // login\r\n      await usersConnector.loginUser(email, password);\r\n      // get user info\r\n      let user = (await usersConnector.getUser()).data;\r\n      // console.log(user);\r\n      localStorage.setItem(\"username\", user.username);\r\n      history.push(\"/coin-trend-notifier-website/trends\");\r\n      // succesfully logged in\r\n    } catch (e) {\r\n      // error handling\r\n      handleErrorChange();\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      history.push(\"/coin-trend-notifier-website/trends\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Group controlId=\"formEmail\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={handleEmailChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </Form.Group>\r\n        <LoginFormButtons error={error} />\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function SettingsPageButtons(props) {\r\n  const styleMargin = \"m-3\";\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\r\n          <Button\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            active\r\n            type=\"submit\"\r\n            style={{ position: \"relative\", margin: \"auto\" }}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {props.error !== \"\" && (\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col\r\n            md={11}\r\n            xs={10}\r\n            style={{ textAlign: \"center\" }}\r\n            className={styleMargin}\r\n          >\r\n            {props.error}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col\r\n          md={5}\r\n          xs={10}\r\n          style={{ textAlign: \"center\" }}\r\n          className={styleMargin}\r\n        >\r\n          <Button onClick={props.refresh} variant=\"outline-primary\">\r\n            Refresh\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { Form, Button, Tooltip, Overlay } from \"react-bootstrap\";\r\nimport * as usersConnector from \"../../../connectors/usersConnector\";\r\nimport SettingsPageButtons from \"./SettingsPageButtons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import logo from \"./refresh.png\";\r\n\r\nexport default function SettingsPage(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [alertLimit, setAlertLimit] = useState(\"0\");\r\n  const [error, setError] = useState(\"\");\r\n  const [showHover, setShowHover] = useState(false);\r\n  const emailRef = useRef(null);\r\n  const usernameRef = useRef(null);\r\n  const alertRef = useRef(null);\r\n  const history = useHistory();\r\n\r\n  const handleUpdateUser = async (event) => {\r\n    // prevent page from refreshing\r\n    event.preventDefault();\r\n    try {\r\n      await usersConnector.updateUser(\r\n        email,\r\n        username,\r\n        // phoneNumber,\r\n        parseInt(alertLimit) * 60\r\n      );\r\n      // update the page with new data\r\n    } catch (e) {\r\n      //error handling\r\n      setError(\"Error\");\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    if (e.target.value === \"\") getAndSetUser();\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    if (e.target.value === \"\") getAndSetUser();\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  // const handlePhoneNumberChange = (e) => {\r\n  // if (e.target.value === \"\") getAndSetUser();\r\n  //   setPhoneNumber(e.target.value);\r\n  // };\r\n\r\n  const handleAlertLimitChange = (e) => {\r\n    if (e.target.value === \"\") getAndSetUser();\r\n    setAlertLimit(e.target.value);\r\n  };\r\n\r\n  const clearContent = () => {\r\n    emailRef.current.value = \"\";\r\n    usernameRef.current.value = \"\";\r\n    alertRef.current.value = 0;\r\n  };\r\n\r\n  const getAndSetUser = useCallback(async () => {\r\n    clearContent();\r\n    let user = (await usersConnector.getUser()).data;\r\n    setEmail(user.email);\r\n    setUsername(user.username);\r\n    setAlertLimit(user.alertLimit / 60);\r\n  }, []);\r\n\r\n  const changeToPasswordChange = () => {\r\n    history.push(\"/coin-trend-notifier-website/settings/pass\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAndSetUser();\r\n  }, [getAndSetUser]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form onSubmit={handleUpdateUser}>\r\n        <Form.Group controlId=\"formEmail\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            ref={emailRef}\r\n            placeholder={email}\r\n            onChange={handleEmailChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formUsername\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={usernameRef}\r\n            placeholder={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </Form.Group>\r\n        {/* <Form.Group controlId=\"formPhoneNumber\">\r\n          <Form.Label>Phone Number</Form.Label>\r\n          <Form.Control\r\n            type=\"tel\"\r\n            pattern={\"\"}\r\n            placeholder=\"Such as: +972501234567\"\r\n            onChange={handlePhoneNumberChange}\r\n          />\r\n        </Form.Group> */}\r\n        <Form.Group controlId=\"formAlertLimitNumber\">\r\n          <Overlay target={alertRef.current} show={showHover} placement=\"right\">\r\n            {(props) => (\r\n              <Tooltip id=\"overlay-alert\" {...props}>\r\n                Max amount of min hours to be notified\r\n              </Tooltip>\r\n            )}\r\n          </Overlay>\r\n          <Form.Label>Alert Limit</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            ref={alertRef}\r\n            min={0}\r\n            value={alertLimit}\r\n            onChange={handleAlertLimitChange}\r\n            onMouseOver={() => setShowHover(!showHover)}\r\n            onMouseOut={() => setShowHover(!showHover)}\r\n          />\r\n        </Form.Group>\r\n        <div style={{ textAlign: \"center\" }} className={\"m-3\"}>\r\n          <Button onClick={changeToPasswordChange} variant=\"outline-danger\">\r\n            Change Password\r\n          </Button>\r\n        </div>\r\n        <SettingsPageButtons error={error} refresh={getAndSetUser} />\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function ChangePassButtons(props) {\r\n  const styleMargin = \"m-3\";\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\r\n          <Button\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            active\r\n            type=\"submit\"\r\n            style={{ position: \"relative\", margin: \"auto\" }}\r\n          >\r\n            Change Password\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {props.error !== \"\" && (\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col\r\n            md={11}\r\n            xs={10}\r\n            style={{ textAlign: \"center\" }}\r\n            className={styleMargin}\r\n          >\r\n            {props.error}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col\r\n          md={6}\r\n          xs={10}\r\n          style={{ textAlign: \"center\" }}\r\n          className={styleMargin}\r\n        >\r\n          <Button onClick={props.backToSettings} variant=\"outline-primary\">\r\n            Back To Settings\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport ChangePassButtons from \"./ChangePassButtons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as usersConnector from \"../../../connectors/usersConnector\";\r\n\r\nexport default function ChangePasswordForm(props) {\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPass1, setNewPass1] = useState(\"\");\r\n  const [newPass2, setNewPass2] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handlePasswordChange = async (event) => {\r\n    // prevent page from refreshing\r\n    event.preventDefault();\r\n    try {\r\n      if (newPass1 !== newPass2) {\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 3000);\r\n        throw Error(\"New Passwords Won't Match\");\r\n      }\r\n      if (newPass2.length < 6) {\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 3000);\r\n        throw Error(\"Password must be over 6 characters\");\r\n      }\r\n      await usersConnector.changeUserPassword(oldPassword, newPass1);\r\n      // update the page with new data\r\n    } catch (e) {\r\n      //error handling\r\n      if (e.message.includes(\"422\")) {\r\n        setError(\"This is not your old password\");\r\n        return;\r\n      }\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  const handleOldPasswordChange = (e) => {\r\n    setOldPassword(e.target.value);\r\n  };\r\n\r\n  const handleNewPass1Change = (e) => {\r\n    setNewPass1(e.target.value);\r\n  };\r\n\r\n  const handleNewPass2Change = (e) => {\r\n    setNewPass2(e.target.value);\r\n  };\r\n\r\n  const chageToSettings = () => {\r\n    history.push(\"/coin-trend-notifier-website/settings\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form onSubmit={handlePasswordChange}>\r\n        <Form.Group controlId=\"formOldPassword\">\r\n          <Form.Label>Old Password</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Old Password\"\r\n            onChange={handleOldPasswordChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formNewPass1\">\r\n          <Form.Label>New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter New Password\"\r\n            onChange={handleNewPass1Change}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formNewPass2\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter New Password Again\"\r\n            onChange={handleNewPass2Change}\r\n          />\r\n        </Form.Group>\r\n        <ChangePassButtons error={error} backToSettings={chageToSettings} />\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SignupFormButtons(props) {\r\n  const history = useHistory();\r\n  const styleMargin = \"m-3\";\r\n  let changeToLogin = () => {\r\n    history.push(\"/coin-trend-notifier-website/login\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\r\n          <Button\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            active\r\n            type=\"submit\"\r\n            style={{ position: \"relative\", margin: \"auto\" }}\r\n          >\r\n            Signup\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {props.error !== \"\" && (\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col\r\n            md={11}\r\n            xs={10}\r\n            style={{ textAlign: \"center\" }}\r\n            className={styleMargin}\r\n          >\r\n            {props.error}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col\r\n          md={5}\r\n          xs={10}\r\n          style={{ textAlign: \"center\" }}\r\n          className={styleMargin}\r\n        >\r\n          <Button onClick={changeToLogin} variant=\"outline-primary\">\r\n            Cancel\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport * as usersConnector from \"../../connectors/usersConnector\";\r\nimport SignupFormButtons from \"./SignupFormButtons\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SignupForm(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [alertLimit, setAlertLimit] = useState(\"0\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const changeToLogin = () => {\r\n    history.push(\"/coin-trend-notifier-website/login\");\r\n  };\r\n  const handleSignup = async (event) => {\r\n    // prevent page from refreshing\r\n    event.preventDefault();\r\n    try {\r\n      await usersConnector.createNewUser(\r\n        email,\r\n        password,\r\n        username,\r\n        // phoneNumber,\r\n        parseInt(alertLimit) * 60\r\n      );\r\n      changeToLogin();\r\n    } catch (e) {\r\n      //error handling\r\n      setError(\"Error\");\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  // const handlePhoneNumberChange = (e) => {\r\n  //   setPhoneNumber(e.target.value);\r\n  // };\r\n\r\n  const handleAlertLimitChange = (e) => {\r\n    setAlertLimit(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form onSubmit={handleSignup}>\r\n        <Form.Group controlId=\"formEmail\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={handleEmailChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formUsername\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </Form.Group>\r\n        {/* <Form.Group controlId=\"formPhoneNumber\">\r\n          <Form.Label>Phone Number</Form.Label>\r\n          <Form.Control\r\n            type=\"tel\"\r\n            pattern={\"\"}\r\n            placeholder=\"Such as: +972501234567\"\r\n            onChange={handlePhoneNumberChange}\r\n          />\r\n        </Form.Group> */}\r\n        <Form.Group controlId=\"formAlertLimitNumber\">\r\n          <Form.Label>Alert Limit</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            min={0}\r\n            placeholder=\"Max amount of min hours to be notified\"\r\n            onChange={handleAlertLimitChange}\r\n          />\r\n        </Form.Group>\r\n        <SignupFormButtons error={error} />\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","const axios = require(\"axios\").default;\r\n\r\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/api/preferences\";\r\n\r\n// Set User Preference\r\nexport const setPreference = async (\r\n  probability,\r\n  baseAssetName,\r\n  quoteAssetName\r\n) => {\r\n  let token = localStorage.getItem(\"jwt\");\r\n  let config = { headers: { Authorization: `Bearer ${token}` } };\r\n  return await axios.post(\r\n    path,\r\n    {\r\n      probability,\r\n      baseAssetName,\r\n      quoteAssetName\r\n    },\r\n    config\r\n  );\r\n};\r\n\r\n// Delete User Preference\r\nexport const deletePreference = async PreferenceDto => {\r\n  let token = localStorage.getItem(\"jwt\");\r\n  let config = { headers: { Authorization: `Bearer ${token}` } };\r\n  return await axios.delete(\r\n    path +\r\n      \"?baseAssetName=\" +\r\n      PreferenceDto.baseAssetName +\r\n      \"&quoteAssetName=\" +\r\n      PreferenceDto.quoteAssetName,\r\n    config\r\n  );\r\n};\r\n\r\n// Get User Preference\r\nexport const getPreferences = async () => {\r\n  let token = localStorage.getItem(\"jwt\");\r\n  let config = { headers: { Authorization: `Bearer ${token}` } };\r\n  return await axios.get(path, config);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport * as PreferencesConnector from \"../../connectors/preferenceConnector\";\r\n\r\nclass Preference extends Component {\r\n  state = {\r\n    preference: {},\r\n    edit: true,\r\n    originalValues: {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const originalValues = Object.assign({}, this.props.preference);\r\n    const preference = Object.assign({}, this.props.preference);\r\n    const edit = this.props.editing;\r\n    this.state = {\r\n      edit,\r\n      preference,\r\n      originalValues,\r\n    };\r\n  }\r\n\r\n  calculateProbabilities = () => {\r\n    let probs = [];\r\n    for (let i = 10; i <= 90; i += 10) {\r\n      probs.push(i);\r\n    }\r\n    return probs;\r\n  };\r\n\r\n  handleEditPreference = async (idx) => {\r\n    let tempEditing = this.state.edit;\r\n    tempEditing = !tempEditing;\r\n\r\n    if (!tempEditing) {\r\n      // if in Save mode\r\n      // check that only valid inputs are in\r\n      if (\r\n        this.state.preference.baseAssetName === \"Base Coin\" ||\r\n        this.state.preference.quoteAssetName === \"Quote Coin\" ||\r\n        this.state.preference.probability === \"Probability\"\r\n      ) {\r\n        tempEditing = !tempEditing; //if invalids then change to true\r\n        //make some error that saying that there are invalid inputs\r\n        this.props.onEditChange(idx, tempEditing);\r\n        console.log(\"preferenced could not be saved\");\r\n      }\r\n      if (!tempEditing) {\r\n        if (\r\n          this.state.originalValues.baseAssetName === \"Base Coin\" &&\r\n          this.state.originalValues.quoteAssetName === \"Quote Coin\" &&\r\n          this.state.originalValues.probability === \"Probability\"\r\n        ) {\r\n          // if its a new preference then save it\r\n          await PreferencesConnector.setPreference(\r\n            parseFloat(this.state.preference.probability) / 100,\r\n            this.state.preference.baseAssetName,\r\n            this.state.preference.quoteAssetName\r\n          );\r\n        } else {\r\n          // editing an already-exist preference\r\n          if (\r\n            this.state.preference.baseAssetName !==\r\n              this.state.originalValues.baseAssetName ||\r\n            this.state.preference.quoteAssetName !==\r\n              this.state.originalValues.quoteAssetName\r\n          ) {\r\n            // if different from original\r\n            // delete the original preference\r\n            await PreferencesConnector.deletePreference({\r\n              baseAssetName: this.state.originalValues.baseAssetName,\r\n              quoteAssetName: this.state.originalValues.quoteAssetName,\r\n            });\r\n\r\n            // add the edited preference to the db\r\n            await PreferencesConnector.setPreference(\r\n              parseFloat(this.state.preference.probability) / 100,\r\n              this.state.preference.baseAssetName,\r\n              this.state.preference.quoteAssetName\r\n            );\r\n          } else {\r\n            // same as original\r\n            if (\r\n              this.state.preference.probability !==\r\n              this.state.originalValues.probability\r\n            ) {\r\n              // if probability changed then save changes in db\r\n              await PreferencesConnector.setPreference(\r\n                parseFloat(this.state.preference.probability) / 100,\r\n                this.state.preference.baseAssetName,\r\n                this.state.preference.quoteAssetName\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        // refresh the data\r\n        this.props.refresh();\r\n        console.log(\"preference saved\");\r\n      }\r\n    }\r\n    this.props.onEditChange(idx, tempEditing);\r\n    this.setState({ edit: tempEditing });\r\n  };\r\n\r\n  handlePreferenceChanges = (type, idx, event) => {\r\n    let tempUserPreferences = this.state.preference;\r\n    if (type === \"base\") {\r\n      tempUserPreferences.baseAssetName = event.target.value;\r\n    } else if (type === \"quote\") {\r\n      tempUserPreferences.quoteAssetName = event.target.value;\r\n    } else if (type === \"prob\") {\r\n      tempUserPreferences.probability = event.target.value;\r\n    }\r\n    this.setState({ preference: tempUserPreferences });\r\n  };\r\n\r\n  componentDidMount = () => {};\r\n\r\n  getDefaultValue = () => {\r\n    return this.props.preference.probability === \"Probability\"\r\n      ? \"Probability\"\r\n      : this.props.preference.probability * 100;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <Form.Row>\r\n            <Col xs={1}>\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                onClick={() => this.props.onRemovePreference(this.props.index)}\r\n              >\r\n                x\r\n              </Button>\r\n            </Col>\r\n            <Col xs={1.2}>\r\n              <Button\r\n                id={\"preference_\" + this.props.index}\r\n                variant=\"outline-info\"\r\n                onClick={() => this.handleEditPreference(this.props.index)}\r\n              >\r\n                {this.state.edit === false ? \"Edit\" : \"Save\"}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                defaultValue={this.props.preference.baseAssetName}\r\n                disabled={!this.state.edit}\r\n                as=\"select\"\r\n                onChange={(e) =>\r\n                  this.handlePreferenceChanges(\"base\", this.props.index, e)\r\n                }\r\n              >\r\n                <option>Base Coin</option>\r\n                {this.props.baseCoins.map((coin) => {\r\n                  return (\r\n                    <option key={\"option_\" + coin} value={coin}>\r\n                      {coin}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col style={{ textAlign: \"center\" }} xs={1}>\r\n              {\"/\"}\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                disabled={!this.state.edit}\r\n                as=\"select\"\r\n                onChange={(e) =>\r\n                  this.handlePreferenceChanges(\"quote\", this.props.index, e)\r\n                }\r\n                defaultValue={this.props.preference.quoteAssetName}\r\n              >\r\n                <option>Quote Coin</option>\r\n                {this.props.quoteCoins.map((coin) => {\r\n                  return (\r\n                    <option key={\"option_\" + coin} value={coin}>\r\n                      {coin}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control\r\n                defaultValue={this.getDefaultValue()}\r\n                disabled={!this.state.edit}\r\n                as=\"select\"\r\n                onChange={(e) =>\r\n                  this.handlePreferenceChanges(\"prob\", this.props.index, e)\r\n                }\r\n              >\r\n                <option key={\"option_new\"} value={\"Probability\"}>\r\n                  Probability\r\n                </option>\r\n                {this.calculateProbabilities().map((n) => {\r\n                  let num = parseInt(n);\r\n                  return (\r\n                    <option key={\"option_\" + num} value={num}>\r\n                      {num + \"%\"}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Row>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preference;\r\n","import React, { Component } from \"react\";\r\nimport * as PreferencesConnector from \"../../connectors/preferenceConnector\";\r\nimport { Form, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport Preference from \"./Preference\";\r\n\r\nclass Preferences extends Component {\r\n  state = {\r\n    userPreferences: [],\r\n    editing: [],\r\n    baseCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\r\n    quoteCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\r\n  };\r\n\r\n  handleNewUserPreferences = () => {\r\n    this.setState({\r\n      userPrefences: this.state.userPreferences.push({\r\n        probability: \"Probability\",\r\n        baseAssetName: \"Base Coin\",\r\n        quoteAssetName: \"Quote Coin\",\r\n      }),\r\n      editing: [...this.state.editing, true],\r\n    });\r\n  };\r\n\r\n  handleRemovePreference = async (idx) => {\r\n    if (\r\n      this.state.userPreferences[idx].baseAssetName === \"Base Coin\" ||\r\n      this.state.userPreferences[idx].quoteAssetName === \"Quote Coin\" ||\r\n      this.state.userPreferences[idx].probability === \"Probability\"\r\n    )\r\n      this.refreshData();\r\n    let tempUserPreferences = this.state.userPreferences;\r\n    await PreferencesConnector.deletePreference({\r\n      baseAssetName: tempUserPreferences[idx].baseAssetName,\r\n      quoteAssetName: tempUserPreferences[idx].quoteAssetName,\r\n    });\r\n\r\n    this.refreshData();\r\n  };\r\n\r\n  refreshData = async () => {\r\n    let userPreferences = await PreferencesConnector.getPreferences();\r\n    let editing = [];\r\n    for (let i = 0; i < userPreferences.data.length; i++) {\r\n      editing.push(false);\r\n    }\r\n    this.setState({ userPreferences: userPreferences.data, editing });\r\n  };\r\n\r\n  handleEditingChange = (idx, saveMode) => {\r\n    let temp = this.state.editing;\r\n    temp[idx] = saveMode;\r\n    this.setState({ editing: temp });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    await this.refreshData();\r\n  };\r\n\r\n  render() {\r\n    let preferences;\r\n    try {\r\n      preferences = this.state.userPreferences.map((preference, idx) => {\r\n        return (\r\n          <Preference\r\n            key={\"preference_\" + idx}\r\n            index={idx}\r\n            preference={preference}\r\n            editing={this.state.editing[idx]}\r\n            onRemovePreference={this.handleRemovePreference}\r\n            baseCoins={this.state.baseCoins}\r\n            quoteCoins={this.state.quoteCoins}\r\n            refresh={this.refreshData}\r\n            onEditChange={this.handleEditingChange}\r\n          />\r\n        );\r\n      });\r\n    } catch (error) {\r\n      preferences = null;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h1>\r\n          Hi,{\" \"}\r\n          {localStorage.getItem(\"username\")\r\n            ? localStorage.getItem(\"username\")\r\n            : \"Guest\"}\r\n        </h1>\r\n        <span>In this page you can edit your preferred coins.</span>\r\n        <br />\r\n        <span>\r\n          You will get notifications on the crypto coins that are shown here.\r\n        </span>\r\n        <br />\r\n        <br />\r\n        <Form onSubmit={this.handleSaveChanges}>\r\n          {preferences}\r\n          <br />\r\n          <ButtonToolbar className=\"justify-content-center\">\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              onClick={this.handleNewUserPreferences}\r\n            >\r\n              Add New Preference\r\n            </Button>\r\n          </ButtonToolbar>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preferences;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Home(props) {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      history.push(\"/coin-trend-notifier-website/trends\");\r\n    } else {\r\n      history.push(\"/coin-trend-notifier-website/login\");\r\n    }\r\n  });\r\n\r\n  return <React.Fragment />;\r\n}\r\n","import React from \"react\";\r\nimport HomepageNavbar from \"./components/Navbar/HomepageNavbar\";\r\nimport AboutPage from \"./components/About/AboutPage\";\r\nimport TrendsContainer from \"./components/Trends/TrendsContainer\";\r\nimport Trend from \"./components/Trends/Trend\";\r\nimport LoginForm from \"./components/Login/LoginForm\";\r\nimport SettingsPage from \"./components/Settings/ChangeSettings/SettingsPage\";\r\nimport ChangePasswordForm from \"./components/Settings/ChangePassword/ChangePasswordForm\";\r\nimport SignupForm from \"./components/Signup/SignupForm\";\r\nimport Preferences from \"./components/Preferences/Preferences\";\r\nimport Home from \"./components/Home\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nexport default function App(props) {\r\n  const app = \"/coin-trend-notifier-website/\";\r\n\r\n  const whatDoDisplay = () => {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <HomepageNavbar />\r\n\r\n          <Switch>\r\n            <Route path={app + \"trends/:id\"} component={Trend}></Route>\r\n\r\n            <Route path={app + \"login\"}>\r\n              <Container fluid className=\"HomepageBody\">\r\n                <Row>\r\n                  <Col\r\n                    style={{\r\n                      border: \"1px solid gray\",\r\n                      padding: \"50px\",\r\n                      position: \"relative\",\r\n                      top: \"10%\",\r\n                      margin: \"auto\",\r\n                      boxShadow: \"0px 0px 8px -2px\",\r\n                      borderRadius: \"1%\",\r\n                    }}\r\n                    md={5}\r\n                    xs={10}\r\n                  >\r\n                    <LoginForm />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Route>\r\n            <Route path={app + \"trends\"}>\r\n              <div\r\n                style={{\r\n                  position: \"relative\",\r\n                  maxWidth: \"960px\",\r\n                  margin: \"auto\",\r\n                }}\r\n                className=\"HomepageBody\"\r\n              >\r\n                <TrendsContainer />\r\n              </div>\r\n            </Route>\r\n            <Route path={app + \"signup\"}>\r\n              <Container fluid className=\"HomepageBody\">\r\n                <Row>\r\n                  <Col\r\n                    style={{\r\n                      border: \"1px solid gray\",\r\n                      padding: \"50px\",\r\n                      position: \"relative\",\r\n                      top: \"10%\",\r\n                      margin: \"auto\",\r\n                      boxShadow: \"0px 0px 8px -2px\",\r\n                      borderRadius: \"1%\",\r\n                    }}\r\n                    md={5}\r\n                    xs={10}\r\n                  >\r\n                    <SignupForm />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Route>\r\n            <Route path={app + \"settings/pass\"}>\r\n              <Container fluid className=\"HomepageBody\">\r\n                <Row>\r\n                  <Col\r\n                    style={{\r\n                      border: \"1px solid gray\",\r\n                      padding: \"50px\",\r\n                      position: \"relative\",\r\n                      top: \"10%\",\r\n                      margin: \"auto\",\r\n                      boxShadow: \"0px 0px 8px -2px\",\r\n                      borderRadius: \"1%\",\r\n                    }}\r\n                    md={5}\r\n                    xs={10}\r\n                  >\r\n                    <ChangePasswordForm />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Route>\r\n\r\n            <Route path={app + \"settings\"}>\r\n              <Container fluid className=\"HomepageBody\">\r\n                <Row>\r\n                  <Col\r\n                    style={{\r\n                      border: \"1px solid gray\",\r\n                      padding: \"50px\",\r\n                      position: \"relative\",\r\n                      top: \"10%\",\r\n                      margin: \"auto\",\r\n                      boxShadow: \"0px 0px 8px -2px\",\r\n                      borderRadius: \"1%\",\r\n                    }}\r\n                    md={5}\r\n                    xs={10}\r\n                  >\r\n                    <SettingsPage />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Route>\r\n            <Route path={app + \"preferences\"}>\r\n              <Container fluid className=\"HomepageBody\">\r\n                <Row>\r\n                  <Col\r\n                    style={{\r\n                      border: \"1px solid gray\",\r\n                      padding: \"50px\",\r\n                      position: \"relative\",\r\n                      top: \"10%\",\r\n                      margin: \"auto\",\r\n                      boxShadow: \"0px 0px 8px -2px\",\r\n                      borderRadius: \"1%\",\r\n                    }}\r\n                    md={8}\r\n                    xs={10}\r\n                  >\r\n                    <Preferences />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Route>\r\n            <Route path={app + \"about\"}>\r\n              <AboutPage />\r\n            </Route>\r\n            <Route path={app + \"\"}>\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  };\r\n\r\n  return whatDoDisplay();\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n/* istanbul ignore next */\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n/* istanbul ignore next */\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n/* istanbul ignore next */\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n/* istanbul ignore next */\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n/* istanbul ignore next */\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n/* istanbul ignore next */\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n/* istanbul ignore next */\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.6d974881.png\";"],"sourceRoot":""}