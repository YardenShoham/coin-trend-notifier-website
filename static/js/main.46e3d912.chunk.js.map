{"version":3,"sources":["components/Navbar/HomepageNavbar.jsx","components/Trends/Arrow.jsx","components/Trends/SingleTrendContainer.jsx","connectors/eventConnector.js","components/Trends/TrendsContainer.jsx","connectors/usersConnector.js","components/Login/LoginFormButtons.jsx","components/Login/LoginForm.jsx","components/Navbar/AccountWindow.jsx","components/Signup/SignupFormButtons.jsx","components/Signup/SignupForm.jsx","connectors/preferenceConnector.js","components/Preferences/Preference.jsx","components/Preferences/Preferences.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["HomepageNavbar","props","history","useHistory","changepage","pageName","push","Fragment","Navbar","collapseOnSelect","expand","bg","variant","style","marginBottom","Container","maxWidth","margin","Brand","href","src","logo","width","className","alt","marginLeft","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","color","onAccountWindowChange","Arrow","rest","compAngle","angle","icon","faLongArrowAltUp","size","transform","SingleTrendContainer","verticalCenterStyle","minHeight","display","alignItems","verticalCenterMarginzStyle","borderStyle","padding","textAlign","Card","fluid","this","Row","noGutters","Col","xs","indx","Badge","type","base","quote","chance","url","Component","axios","require","default","path","getEvents","amount","token","localStorage","getItem","config","headers","Authorization","get","TrendsContainer","state","allTrends","handleAllTrends","a","eventConnector","res","data","setState","map","event","baseAsset","quoteAsset","probability","Math","round","_id","e","console","log","trend","index","key","createNewUser","email","password","username","alertLimit","post","loginUser","setItem","jwt","getUser","LoginFormButtons","Button","active","position","error","md","LoginForm","useState","setEmail","setPassword","setError","handleLogin","preventDefault","usersConnector","user","message","useEffect","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","target","value","AccountWindow","ListGroup","top","right","visible","zIndex","Item","backgroundColor","to","SignupFormButtons","SignupForm","setUsername","setAlertLimit","handleSignup","parseInt","min","setPreference","baseAssetName","quoteAssetName","deletePreference","PreferenceDto","delete","getPreferences","Preference","preference","edit","originalValues","calculateProbabilities","probs","i","handleEditPreference","idx","tempEditing","onEditChange","PreferencesConnector","parseFloat","refresh","handlePreferenceChanges","tempUserPreferences","componentDidMount","Object","assign","editing","onRemovePreference","defaultValue","disabled","as","baseCoins","coin","quoteCoins","n","num","Preferences","userPreferences","handleNewUserPreferences","userPrefences","handleRemovePreference","refreshData","length","handleEditingChange","saveMode","temp","preferences","handleSaveChanges","ButtonToolbar","Home","App","accountWindow","setAccountWindow","handleAccountWindow","border","boxShadow","borderRadius","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.46e3d912.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport logo from \"../../assets/logo.png\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function HomepageNavbar(props) {\n  const history = useHistory();\n\n  const changepage = (pageName) => {\n    history.push(`/coin-trend-notifier-website/${pageName}`);\n  };\n\n  return (\n    <React.Fragment>\n      <Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        bg=\"dark\"\n        variant=\"dark\"\n        style={{ marginBottom: \"30px\" }}\n      >\n        <Container style={{ maxWidth: \"1020px\", margin: \"auto\" }}>\n          <Navbar.Brand href=\"#home\">\n            <img\n              src={logo}\n              width=\"90px\"\n              className=\"d-inline-block align-top\"\n              alt=\"logo\"\n              style={{ marginLeft: \"15px\" }}\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link onClick={() => changepage(\"\")}>Home</Nav.Link>\n              <Nav.Link onClick={() => changepage(\"about\")}>About</Nav.Link>\n            </Nav>\n            <Nav className=\"mr-sm-2\" variant=\"dark\">\n              <Nav.Link\n                style={{ color: \"rgba(255,255,255,.5)\" }}\n                onClick={() => props.onAccountWindowChange()}\n              >\n                Account\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltUp } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Arrow = ({ color, ...rest }) => {\n  var angle = 45;\n  const compAngle = color === \"green\" ? angle : angle + 90;\n  return (\n    <FontAwesomeIcon\n      icon={faLongArrowAltUp}\n      size=\"2x\"\n      style={{\n        color: color,\n        transform: \"rotate(\" + compAngle + \"deg)\",\n        marginLeft:\n          (color === \"green\" ? angle * 2 : (90 - angle) * 2) / 90 + \"rem\",\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport { Container, Row, Col, Badge, Card } from \"react-bootstrap\";\n// import BorderedBox from \"./BordredBox\";\nimport { Component } from \"react\";\nimport Arrow from \"./Arrow\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass SingleTrendContainer extends Component {\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n  };\n  verticalCenterMarginzStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"0px\",\n    color: \"lightslategrey\",\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\",\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h3 style={this.verticalCenterMarginzStyle}>\n                  {this.props.indx}\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>\n                  <Badge\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\n                  >\n                    {this.props.base + \"/\" + this.props.quote}\n                  </Badge>\n                </h3>\n              </Col>\n              <Col\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                <h3>\n                  {this.props.type === \"up\" ? (\n                    <Arrow color=\"green\" />\n                  ) : (\n                    <Arrow color=\"red\" />\n                  )}\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>\n                  <Badge\n                    variant={this.props.type === \"up\" ? \"success\" : \"danger\"}\n                  >\n                    {this.props.chance + \"%\"}\n                  </Badge>\n                </h3>\n              </Col>\n              <Col>\n                <h3 style={this.verticalCenterStyle}>{this.props.url}</h3>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SingleTrendContainer;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\n// Get Events' History\nexport const getEvents = amount => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return axios.get(path + \"api/events\", config);\n};\n\n// Get all Events' History By ID\nexport const getEventsByID = () => {\n  let token = localStorage.getItem(\"jwt\");\n  return axios.get(path + `api/events/${token}`);\n};\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport SingleTrendContainer from \"./SingleTrendContainer\";\nimport * as eventConnector from \"../../connectors/eventConnector\";\n\nclass TrendsContainer extends Component {\n  state = {\n    allTrends: [],\n  };\n  verticalCenterStyle = {\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"lightslategrey\",\n  };\n  borderStyle = {\n    padding: \"5px\",\n    textAlign: \"center\",\n  };\n\n  handleAllTrends = async () => {\n    let { data: res } = await eventConnector.getEvents();\n    //need to load the allTrends in the state from the res\n    this.setState({\n      allTrends: res.map((event) => {\n        return {\n          base: event.baseAsset,\n          quote: event.quoteAsset,\n          type: event.probability > 0 ? \"up\" : \"down\",\n          chance: Math.round(event.probability * 10),\n          url: \"/coin-trend-notifier-website/trend/\" + event._id,\n          // firedAt:\n        };\n      }),\n    });\n  };\n\n  componentDidMount() {\n    try {\n      this.handleAllTrends();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Container fluid=\"true\" style={this.borderStyle}>\n            <Row noGutters=\"true\">\n              <Col xs={1}>\n                <h4 style={this.verticalCenterStyle}>#</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Asset</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Expected to</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>Possibilty</h4>\n              </Col>\n              <Col>\n                <h4 style={this.verticalCenterStyle}>More info</h4>\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n        {this.state.allTrends.map((trend, index) => {\n          return (\n            <SingleTrendContainer\n              indx={index + 1}\n              key={\"STD\" + index}\n              base={trend.base}\n              quote={trend.quote}\n              type={trend.type}\n              chance={trend.chance}\n              url={trend.url}\n            />\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TrendsContainer;\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/\";\n\nexport const createNewUser = async (\n  email,\n  password,\n  username,\n  // phoneNumber,\n  alertLimit\n) => {\n  return (\n    await axios.post(path + \"api/users\", {\n      email,\n      password,\n      username,\n      // phoneNumber,\n      alertLimit,\n    })\n  ).data;\n};\n\n// Update a user\nexport const updateUser = async (\n  email,\n  password,\n  username,\n  // phoneNumber,\n  alertLimit\n) => {\n  return await axios.put(path + \"api/users\", {\n    email,\n    password,\n    username,\n    // phoneNumber,\n    alertLimit,\n  }).data;\n};\n\n// Login a user\nexport const loginUser = async (email, password) => {\n  const res = await axios.post(path + \"api/users/login\", { email, password });\n  localStorage.setItem(\"jwt\", res.data.jwt);\n};\n\n// Change user password\nexport const changeUserPassword = async (oldPassword, newPassword) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.patch(path + \"api/users/password\", {\n    oldPassword,\n    newPassword,\n    config,\n  });\n};\n\n// Get user details\nexport const getUser = async () => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.get(path + \"api/users\", config);\n};\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function LoginFormButtons(props) {\n  const styleMargin = \"m-3\";\n  const history = useHistory();\n\n  const changePageToSignup = () => {\n    history.push(\"/coin-trend-notifier-website/signup\");\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Login\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={5}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={changePageToSignup} variant=\"outline-primary\">\n            Click here for Signup\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as usersConnector from \"../../connectors/usersConnector\";\nimport LoginFormButtons from \"./LoginFormButtons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nexport default function LoginForm(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleErrorChange = () => {\n    setError(\"User does not exist or Password does not match. Try again.\");\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      // login\n      await usersConnector.loginUser(email, password);\n      // get user info\n      let user = (await usersConnector.getUser()).data;\n      console.log(user);\n      localStorage.setItem(\"username\", user.username);\n      history.push(\"/coin-trend-notifier-website/trends\");\n      // succesfully logged in\n    } catch (e) {\n      // error handling\n      handleErrorChange();\n      console.log(e.message);\n    }\n  };\n\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem(\"jwt\")) {\n      history.push(\"/coin-trend-notifier-website/trends\");\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleLogin}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={handleEmailChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </Form.Group>\n        <LoginFormButtons error={error} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { ListGroup, Button } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function AccountWindow(props) {\n  const history = useHistory();\n\n  return (\n    <React.Fragment>\n      <ListGroup\n        style={{\n          top: \"7%\",\n          width: \"18%\",\n          position: \"absolute\",\n          right: \"3px\",\n          display: props.visible ? \"block\" : \"none\",\n          zIndex: \"1\",\n        }}\n      >\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          Hi{\" \"}\n          {localStorage.getItem(\"username\")\n            ? localStorage.getItem(\"username\")\n            : \"Guest\"}\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Link to=\"/coin-trend-notifier-website/preferences\">\n            My Preferences\n          </Link>\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Link to=\"/coin-trend-notifier-website/settings\">\n            Account Settings\n          </Link>\n        </ListGroup.Item>\n        <ListGroup.Item\n          style={{\n            backgroundColor: \"#343a40\",\n            color: \"rgba(255,255,255,.5)\",\n          }}\n        >\n          <Button\n            variant=\"outline-danger\"\n            size=\"sm\"\n            style={{ color: \"rgba(255,255,255,.5)\" }}\n            onClick={() => {\n              localStorage.setItem(\"jwt\", \"\");\n              history.push(\"/coin-trend-notifier-website/home\");\n            }}\n          >\n            Logout\n          </Button>\n        </ListGroup.Item>\n      </ListGroup>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupFormButtons(props) {\n  const history = useHistory();\n  const styleMargin = \"m-3\";\n  let changeToLogin = () => {\n    history.push(\"/coin-trend-notifier-website/login\");\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col style={{ textAlign: \"center\" }} className={styleMargin}>\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            active\n            type=\"submit\"\n            style={{ position: \"relative\", margin: \"auto\" }}\n          >\n            Signup\n          </Button>\n        </Col>\n      </Row>\n      {props.error !== \"\" && (\n        <Row className=\"justify-content-md-center\">\n          <Col\n            md={11}\n            xs={10}\n            style={{ textAlign: \"center\" }}\n            className={styleMargin}\n          >\n            {props.error}\n          </Col>\n        </Row>\n      )}\n      <Row className=\"justify-content-md-center\">\n        <Col\n          md={5}\n          xs={10}\n          style={{ textAlign: \"center\" }}\n          className={styleMargin}\n        >\n          <Button onClick={changeToLogin} variant=\"outline-primary\">\n            Cancel\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport * as usersConnector from \"../../connectors/usersConnector\";\nimport SignupFormButtons from \"./SignupFormButtons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupForm(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [alertLimit, setAlertLimit] = useState(\"0\");\n  const [error, setError] = useState(\"\");\n\n  const history = useHistory();\n  const changeToLogin = () => {\n    history.push(\"/coin-trend-notifier-website/login\");\n  };\n  const handleSignup = async (event) => {\n    // prevent page from refreshing\n    event.preventDefault();\n    try {\n      await usersConnector.createNewUser(\n        email,\n        password,\n        username,\n        // phoneNumber,\n        parseInt(alertLimit) * 60\n      );\n      changeToLogin();\n    } catch (e) {\n      //error handling\n      setError(\"Error\");\n      console.log(e.message);\n    }\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  // const handlePhoneNumberChange = (e) => {\n  //   setPhoneNumber(e.target.value);\n  // };\n\n  const handleAlertLimitChange = (e) => {\n    setAlertLimit(e.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleSignup}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={handleEmailChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handlePasswordChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={handleUsernameChange}\n          />\n        </Form.Group>\n        {/* <Form.Group controlId=\"formPhoneNumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            pattern={\"\"}\n            placeholder=\"Such as: +972501234567\"\n            onChange={handlePhoneNumberChange}\n          />\n        </Form.Group> */}\n        <Form.Group controlId=\"formAlertLimitNumber\">\n          <Form.Label>Alert Limit</Form.Label>\n          <Form.Control\n            type=\"number\"\n            min={0}\n            placeholder=\"Max amount of min to be notified\"\n            onChange={handleAlertLimitChange}\n          />\n        </Form.Group>\n        <SignupFormButtons error={error} />\n      </Form>\n    </React.Fragment>\n  );\n}\n","const axios = require(\"axios\").default;\n\nconst path = \"https://coin-trend-notifier-api.herokuapp.com/api/preferences\";\n\n// Set User Preference\nexport const setPreference = async (\n  probability,\n  baseAssetName,\n  quoteAssetName\n) => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.post(\n    path,\n    {\n      probability,\n      baseAssetName,\n      quoteAssetName\n    },\n    config\n  );\n};\n\n// Delete User Preference\nexport const deletePreference = async PreferenceDto => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.delete(\n    path +\n      \"?baseAssetName=\" +\n      PreferenceDto.baseAssetName +\n      \"&quoteAssetName=\" +\n      PreferenceDto.quoteAssetName,\n    config\n  );\n};\n\n// Get User Preference\nexport const getPreferences = async () => {\n  let token = localStorage.getItem(\"jwt\");\n  let config = { headers: { Authorization: `Bearer ${token}` } };\n  return await axios.get(path, config);\n};\n","import React, { Component } from \"react\";\nimport { Col, Card, Form, Button } from \"react-bootstrap\";\nimport * as PreferencesConnector from \"../../connectors/preferenceConnector\";\n\nclass Preference extends Component {\n  state = {\n    preference: {},\n    edit: true,\n    originalValues: {},\n  };\n\n  calculateProbabilities = () => {\n    let probs = [];\n    for (let i = 10; i <= 90; i += 10) {\n      probs.push(i);\n    }\n    return probs;\n  };\n\n  handleEditPreference = async (idx) => {\n    let tempEditing = this.state.edit;\n    tempEditing = !tempEditing;\n\n    if (!tempEditing) {\n      // if in Save mode\n      // check that only valid inputs are in\n      if (\n        this.state.preference.baseAssetName === \"Base Coin\" ||\n        this.state.preference.quoteAssetName === \"Quote Coin\" ||\n        this.state.preference.probability === \"Probability\"\n      ) {\n        tempEditing = !tempEditing; //if invalids then change to true\n        //make some error that saying that there are invalid inputs\n        this.props.onEditChange(idx, tempEditing);\n        console.log(\"preferenced could not be saved\");\n      }\n      if (!tempEditing) {\n        if (\n          this.state.originalValues.baseAssetName === \"Base Coin\" &&\n          this.state.originalValues.quoteAssetName === \"Quote Coin\" &&\n          this.state.originalValues.probability === \"Probability\"\n        ) {\n          // if its a new preference then save it\n          await PreferencesConnector.setPreference(\n            parseFloat(this.state.preference.probability) / 100,\n            this.state.preference.baseAssetName,\n            this.state.preference.quoteAssetName\n          );\n        } else {\n          // editing an already-exist preference\n          if (\n            this.state.preference.baseAssetName !==\n              this.state.originalValues.baseAssetName ||\n            this.state.preference.quoteAssetName !==\n              this.state.originalValues.quoteAssetName\n          ) {\n            // if different from original\n            // delete the original preference\n            await PreferencesConnector.deletePreference({\n              baseAssetName: this.state.originalValues.baseAssetName,\n              quoteAssetName: this.state.originalValues.quoteAssetName,\n            });\n\n            // add the edited preference to the db\n            await PreferencesConnector.setPreference(\n              parseFloat(this.state.preference.probability) / 100,\n              this.state.preference.baseAssetName,\n              this.state.preference.quoteAssetName\n            );\n          } else {\n            // same as original\n            if (\n              this.state.preference.probability !==\n              this.state.originalValues.probability\n            ) {\n              // if probability changed then save changes in db\n              await PreferencesConnector.setPreference(\n                parseFloat(this.state.preference.probability) / 100,\n                this.state.preference.baseAssetName,\n                this.state.preference.quoteAssetName\n              );\n            }\n          }\n        }\n\n        // refresh the data\n        this.props.refresh();\n        console.log(\"preference saved\");\n      }\n    }\n    this.props.onEditChange(idx, tempEditing);\n    this.setState({ edit: tempEditing });\n  };\n\n  handlePreferenceChanges = (type, idx, event) => {\n    let tempUserPreferences = this.state.preference;\n    if (type === \"base\") {\n      tempUserPreferences.baseAssetName = event.target.value;\n    } else if (type === \"quote\") {\n      tempUserPreferences.quoteAssetName = event.target.value;\n    } else if (type === \"prob\") {\n      tempUserPreferences.probability = event.target.value;\n    }\n    this.setState({ preference: tempUserPreferences });\n  };\n\n  componentDidMount = () => {\n    const originalValues = Object.assign({}, this.props.preference);\n    const preference = Object.assign({}, this.props.preference);\n    const edit = this.props.editing;\n    this.setState({\n      edit,\n      preference,\n      originalValues,\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <Form.Row>\n            <Col xs={1}>\n              <Button\n                variant=\"outline-danger\"\n                onClick={() => this.props.onRemovePreference(this.props.index)}\n              >\n                x\n              </Button>\n            </Col>\n            <Col xs={1.2}>\n              <Button\n                id={\"preference_\" + this.props.index}\n                variant=\"outline-info\"\n                onClick={() => this.handleEditPreference(this.props.index)}\n              >\n                {this.state.edit === false ? \"Edit\" : \"Save\"}\n              </Button>\n            </Col>\n            <Col>\n              <Form.Control\n                defaultValue={this.props.preference.baseAssetName}\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"base\", this.props.index, e)\n                }\n              >\n                <option>Base Coin</option>\n                {this.props.baseCoins.map((coin) => {\n                  return (\n                    <option key={\"option_\" + coin} value={coin}>\n                      {coin}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} xs={1}>\n              {\"/\"}\n            </Col>\n            <Col>\n              <Form.Control\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"quote\", this.props.index, e)\n                }\n                defaultValue={this.props.preference.quoteAssetName}\n              >\n                <option>Quote Coin</option>\n                {this.props.quoteCoins.map((coin) => {\n                  return (\n                    <option key={\"option_\" + coin} value={coin}>\n                      {coin}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n            <Col>\n              <Form.Control\n                defaultValue={\n                  this.props.preference.probability === \"Probability\"\n                    ? \"Probability\"\n                    : this.props.preference.probability * 100 + \"%\"\n                }\n                disabled={!this.state.edit}\n                as=\"select\"\n                onChange={(e) =>\n                  this.handlePreferenceChanges(\"prob\", this.props.index, e)\n                }\n              >\n                <option>Probability</option>\n                {this.calculateProbabilities().map((n) => {\n                  let num = parseInt(n);\n                  return (\n                    <option key={\"option_\" + num} value={num}>\n                      {num}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Col>\n          </Form.Row>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preference;\n","import React, { Component } from \"react\";\nimport * as PreferencesConnector from \"../../connectors/preferenceConnector\";\nimport { Form, Button, ButtonToolbar } from \"react-bootstrap\";\nimport Preference from \"./Preference\";\n\nclass Preferences extends Component {\n  state = {\n    userPreferences: [],\n    editing: [],\n    baseCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\n    quoteCoins: [\"BTC\", \"ETH\", \"TRX\", \"USDT\"],\n  };\n\n  handleNewUserPreferences = () => {\n    this.setState({\n      userPrefences: this.state.userPreferences.push({\n        probability: \"Probability\",\n        baseAssetName: \"Base Coin\",\n        quoteAssetName: \"Quote Coin\",\n      }),\n      editing: [...this.state.editing, true],\n    });\n  };\n\n  handleRemovePreference = async (idx) => {\n    if (\n      this.state.userPreferences[idx].baseAssetName === \"Base Coin\" ||\n      this.state.userPreferences[idx].quoteAssetName === \"Quote Coin\" ||\n      this.state.userPreferences[idx].probability === \"Probability\"\n    )\n      this.refreshData();\n    let tempUserPreferences = this.state.userPreferences;\n    await PreferencesConnector.deletePreference({\n      baseAssetName: tempUserPreferences[idx].baseAssetName,\n      quoteAssetName: tempUserPreferences[idx].quoteAssetName,\n    });\n\n    this.refreshData();\n  };\n\n  refreshData = async () => {\n    let userPreferences = await PreferencesConnector.getPreferences();\n    let editing = [];\n    for (let i = 0; i < userPreferences.data.length; i++) {\n      editing.push(false);\n    }\n    this.setState({ userPreferences: userPreferences.data, editing });\n  };\n\n  handleEditingChange = (idx, saveMode) => {\n    let temp = this.state.editing;\n    temp[idx] = saveMode;\n    this.setState({ editing: temp });\n  };\n\n  componentDidMount = async () => {\n    await this.refreshData();\n  };\n\n  render() {\n    let preferences;\n    try {\n      preferences = this.state.userPreferences.map((preference, idx) => {\n        return (\n          <Preference\n            key={\"preference_\" + idx}\n            index={idx}\n            preference={preference}\n            editing={this.state.editing[idx]}\n            onRemovePreference={this.handleRemovePreference}\n            baseCoins={this.state.baseCoins}\n            quoteCoins={this.state.quoteCoins}\n            refresh={this.refreshData}\n            onEditChange={this.handleEditingChange}\n          />\n        );\n      });\n    } catch (error) {\n      preferences = null;\n    }\n\n    return (\n      <React.Fragment>\n        <h1>Hi, {\"Username\"}</h1>\n        <span>In this page you can edit your preferred coins.</span>\n        <br />\n        <span>\n          You will get notifications on the crypto coins that are shown here.\n        </span>\n        <br />\n        <br />\n        <Form onSubmit={this.handleSaveChanges}>\n          {preferences}\n          <br />\n          <ButtonToolbar className=\"justify-content-center\">\n            <Button\n              variant=\"outline-primary\"\n              onClick={this.handleNewUserPreferences}\n            >\n              Add New Preference\n            </Button>\n          </ButtonToolbar>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Preferences;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home(props) {\n  const history = useHistory();\n  useEffect(() => {\n    if (localStorage.getItem(\"jwt\")) {\n      history.push(\"/coin-trend-notifier-website/trends\");\n    } else {\n      history.push(\"/coin-trend-notifier-website/login\");\n    }\n  });\n\n  return <React.Fragment />;\n}\n","import React, { useState } from \"react\";\nimport HomepageNavbar from \"./components/Navbar/HomepageNavbar\";\nimport TrendsContainer from \"./components/Trends/TrendsContainer\";\nimport LoginForm from \"./components/Login/LoginForm\";\nimport AccountWindow from \"./components/Navbar/AccountWindow\";\nimport SignupForm from \"./components/Signup/SignupForm\";\nimport Preferences from \"./components/Preferences/Preferences\";\nimport Home from \"./components/Home\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nexport default function App(props) {\n  const [accountWindow, setAccountWindow] = useState(false);\n\n  // const history = useHistory();\n\n  const handleAccountWindow = () => {\n    setAccountWindow(!accountWindow);\n  };\n\n  const whatDoDisplay = () => {\n    return (\n      <Router>\n        <div>\n          <HomepageNavbar onAccountWindowChange={handleAccountWindow} />\n          <AccountWindow visible={accountWindow} />\n\n          <Switch>\n            <Route path=\"/coin-trend-notifier-website/login\">\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <LoginForm />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path=\"/coin-trend-notifier-website/trends\">\n              <div\n                style={{\n                  position: \"relative\",\n                  maxWidth: \"960px\",\n                  margin: \"auto\",\n                }}\n                className=\"HomepageBody\"\n              >\n                <TrendsContainer />\n              </div>\n            </Route>\n            <Route path=\"/coin-trend-notifier-website/signup\">\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={5}\n                    xs={10}\n                  >\n                    <SignupForm />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path=\"/coin-trend-notifier-website/settings\">\n              <React.Fragment></React.Fragment>\n            </Route>\n            <Route path=\"/coin-trend-notifier-website/preferences\">\n              <Container fluid className=\"HomepageBody\">\n                <Row>\n                  <Col\n                    style={{\n                      border: \"1px solid gray\",\n                      padding: \"50px\",\n                      position: \"relative\",\n                      top: \"10%\",\n                      margin: \"auto\",\n                      boxShadow: \"0px 0px 8px -2px\",\n                      borderRadius: \"1%\",\n                    }}\n                    md={8}\n                    xs={10}\n                  >\n                    <Preferences />\n                  </Col>\n                </Row>\n              </Container>\n            </Route>\n            <Route path=\"/coin-trend-notifier-website/about\">\n              <React.Fragment></React.Fragment>\n            </Route>\n            <Route path=\"/coin-trend-notifier-website/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  };\n\n  return whatDoDisplay();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n/* istanbul ignore next */\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n/* istanbul ignore next */\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n/* istanbul ignore next */\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n/* istanbul ignore next */\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n/* istanbul ignore next */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n/* istanbul ignore next */\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.6d974881.png\";"],"sourceRoot":""}